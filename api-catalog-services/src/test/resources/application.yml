spring:
    application:
        name: apicatalog
    output:
        ansi:
            enabled: always

logging:
    level:
        ROOT: INFO
        org.springframework: INFO
        org.zowe.apiml: DEBUG

##############################################################################################
# APIML configuration section
##############################################################################################
apiml:
    service:
        id: apicatalog
        hostname: ${environment.hostname:localhost}
        ipAddress: ${environment.ipAddress:127.0.0.1}
        locations: ${environment.discoveryLocations:http://localhost:10011/eureka/}
        fetchRegistry: false
        registerWithEureka: true
        region: default
        eurekaUserName: ${environment.eurekaUserId:eureka}
        eurekaUserPassword: ${environment.eurekaPassword:password}
        endpoints:
            statusPage: ${apiml.server.contextPath}/application/info
            healthPage: ${apiml.server.contextPath}/application/health
            homePage: ${apiml.server.contextPath}
        title: API Catalog
        description: Service to locate and display API documentation for discovered services

    catalog-ui-tile:
        id: apimediationlayer
        title: API Catalog
        description: Display services which are discoverable in the Zowe ecosystem and have API documentation
        version:  1.0.0
    server:
        port: ${environment.port:10014}
        contextPath: /apicatalog
        scheme: http
    security:
        esmEnabled: ${environment.esmEnabled:false}
        sslEnabled: true
        protocol: TLSv1.2
        ciphers: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
    service-registry:
        serviceFetchDelayInMillis:  1000
        cacheRefreshUpdateThresholdInMillis: 1000
        cacheRefreshInitialDelayInMillis: 1000
        cacheRefreshRetryDelayInMillis: 1000

##############################################################################################

server:
    address: ${apiml.service.hostname}
    port: ${apiml.server.port}
    servlet:
        contextPath: ${apiml.server.contextPath}

eureka:
    instance:
        hostname: ${apiml.service.hostname}
        statusPageUrlPath: ${apiml.service.endpoints.statusPage}
        healthCheckUrl: ${apiml.service.endpoints.healthPage}
        homePageUrl: ${apiml.service.endpoints.homePage}
        metadata-map:
            routed-services:
                ui_v1:
                    gateway-url: "ui/v1"
                    service-url: "/apicatalog"
                api_v1:
                    gateway-url: "api/v1"
                    service-url: "/apicatalog"
            apiml:
                apiInfo:
                    - apiId: org.zowe.apicatalog
                      gatewayUrl: api/v1
                      swaggerUrl: https://${apiml.service.hostname}:${server.port}${server.servlet.contextPath}/api-doc
                service:
                    apiVersionProperties:
                        v1:
                            title: API Catalog REST API
                            description: REST endpoints exposing available functions in the API Catalog
                            version: 1.0.0
                            basePackage: org.zowe.apiml.apicatalog.controllers.api

                discovery:
                    catalogUiTile:
                        id: ${apiml.catalog-ui-tile.id}
                        title:  ${apiml.catalog-ui-tile.title}
                        description: ${apiml.catalog-ui-tile.description}
                        version: ${apiml.catalog-ui-tile.version}
                    service:
                        title: ${apiml.service.title}
                        description: ${apiml.service.description}
    client:
        healthcheck:
            enabled: true
        serviceUrl:
            defaultZone: ${apiml.service.locations}
        fetchRegistry:  ${apiml.service.fetchRegistry}
        region: ${apiml.service.region}
        enabled: ${apiml.service.enabled}

