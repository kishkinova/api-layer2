spring:
    application:
        name: apicatalog
    output:
        ansi:
            enabled: always

logging:
    level:
        ROOT: INFO
        org.springframework: INFO
        com.ca.mfaas: DEBUG

##############################################################################################
# MFAAS configuration section
##############################################################################################
mfaas:
    discovery:
        serviceId: apicatalog
        locations: ${environment.discoveryLocations:http://localhost:10011/eureka}
        fetchRegistry: false
        registerWithEureka: true
        region: default
        eurekaUserName: ${environment.eurekaUserId:eureka}
        eurekaUserPassword: ${environment.eurekaPassword:password}
        endpoints:
            statusPage: ${mfaas.server.contextPath}/application/info
            healthPage: ${mfaas.server.contextPath}/application/health
            homePage: ${mfaas.gateway.gatewayHostname}/ui/v1${mfaas.server.contextPath}
        info:
            serviceTitle: API Catalog
            description: Service to locate and display API documentation for discovered services
            enableApiDoc: true
        enabled: ${environment.discoveryEnabled:true}
    service:
        hostname: ${environment.hostname:localhost}
        ipAddress: ${environment.ipAddress:127.0.0.1}
    catalog-ui-tile:
        id: apimediationlayer
        title: API Catalog
        description: Display services which are discoverable in the Zowe ecosystem and have API documentation
        version:  1.0.0
    server:
        port: ${environment.port:10014}
        contextPath: /apicatalog
        scheme: http
    security:
        esmEnabled: ${environment.esmEnabled:false}
        sslEnabled: true
        protocol: TLSv1.2
        ciphers: TLS_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_EMPTY_RENEGOTIATION_INFO_SCSV
    gateway:
        gatewayHostname: ${environment.gatewayHostname:https://localhost:10010}
    service-registry:
        serviceFetchDelayInMillis:  1000
        cacheRefreshUpdateThresholdInMillis: 1000
        cacheRefreshInitialDelayInMillis: 1000
        cacheRefreshRetryDelayInMillis: 1000

##############################################################################################

server:
    address: ${mfaas.service.hostname}
    port: ${mfaas.server.port}
    servlet:
        contextPath: ${mfaas.server.contextPath}

eureka:
    instance:
        hostname: ${mfaas.service.hostname}
        statusPageUrlPath: ${mfaas.discovery.endpoints.statusPage}
        healthCheckUrl: ${mfaas.discovery.endpoints.healthPage}
        homePageUrl: ${mfaas.discovery.endpoints.homePage}
        metadata-map:
            routed-services:
                ui_v1:
                    gateway-url: "ui/v1"
                    service-url: "/apicatalog"
                api_v1:
                    gateway-url: "api/v1"
                    service-url: "/apicatalog"
                api-doc:
                    gateway-url: "api/v1/api-doc"
                    service-url: "/apicatalog/api-doc"
            mfaas:
                api-info:
                    apiVersionProperties:
                        v1:
                            title: API Catalog REST API
                            description: REST endpoints exposing available functions in the API Catalog
                            version: 1.0.0
                            basePackage: com.ca.mfaas.apicatalog.controllers.api

                discovery:
                    catalogUiTile:
                        id: ${mfaas.catalog-ui-tile.id}
                        title:  ${mfaas.catalog-ui-tile.title}
                        description: ${mfaas.catalog-ui-tile.description}
                        version: ${mfaas.catalog-ui-tile.version}
                    enableApiDoc: ${mfaas.discovery.info.enableApiDoc}
                    service:
                        title: ${mfaas.discovery.info.serviceTitle}
                        description: ${mfaas.discovery.info.description}
    client:
        healthcheck:
            enabled: true
        serviceUrl:
            defaultZone: ${mfaas.discovery.locations}
        fetchRegistry:  ${mfaas.discovery.fetchRegistry}
        region: ${mfaas.discovery.region}
        enabled: ${mfaas.discovery.enabled}

