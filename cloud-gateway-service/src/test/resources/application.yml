eureka:
    client:
        registerWithEureka: false
        serviceUrl:
            defaultZone: https://localhost:999/eureka/

apiml:
    service:
        id: cloud-gateway
        port: 10023
        hostname: localhost
        scheme: https
        corsEnabled: true
        ignoredHeadersWhenCorsEnabled: Access-Control-Request-Method,Access-Control-Request-Headers,Access-Control-Allow-Origin,Access-Control-Allow-Methods,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin
    cloudGateway:
        enableServiceRegistry: false
server:
    port: ${apiml.service.port}
    ssl:
        clientAuth: want
        keyAlias: localhost
        keyPassword: password
        keyStore: ../keystore/localhost/localhost.keystore.p12
        keyStorePassword: password
        keyStoreType: PKCS12
        trustStore: ../keystore/localhost/localhost.truststore.p12
        trustStorePassword: password
        trustStoreType: PKCS12

spring:
    main:
        allow-bean-definition-overriding: true
        allow-circular-references: true
    cloud:
        gateway:
            discovery:
                locator:
                    enabled: false
                    lowerCaseServiceId: true
    application:
        name: cloudGateway

logging:
    level:
        org.springframework.cloud.gateway: DEBUG
        reactor.netty: DEBUG
        org.springframework.security: DEBUG


management:
    endpoint:
      gateway:
          enabled: true
    endpoints:
        web:
            base-path: /application
            exposure:
                include: health,gateway

currentApplication: serviceid2
