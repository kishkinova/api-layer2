name: Containers - Build, Test

on:
    push:
        branches: [ master, v2.x.x ]
    pull_request:
        branches: [ master, v2.x.x ]
    workflow_dispatch:

env:
    JOB_ID: ${{ github.run_id }}-${{ github.run_number }}

jobs:
    PublishJibContainers:
        runs-on: ubuntu-latest
        timeout-minutes: 15

        steps:
            -   uses: actions/checkout@v3
                with:
                    ref: ${{ github.head_ref }}

            -   uses: ./.github/actions/setup

            -   name: Build with Gradle
                run: >
                    ./gradlew jib -Partifactory_user=${{ secrets.ARTIFACTORY_USERNAME }} -Partifactory_password=${{ secrets.ARTIFACTORY_PASSWORD }} -Pzowe.docker.password=${{ secrets.PERSONAL_JB_TOKEN }} -Pzowe.docker.username=balhar-jakub -Pzowe.docker.container=ghcr.io/balhar-jakub/ -Pzowe.docker.tag=${{ env.JOB_ID }}

            -   uses: ./.github/actions/teardown

    CITestsWithRedisReplica:
        needs: PublishJibContainers
        runs-on: ubuntu-latest
        timeout-minutes: 15

        steps:
            -   uses: actions/checkout@v3
                with:
                    ref: ${{ github.head_ref }}

            -   uses: ./.github/actions/setup

            -   name: Run APIML and Redis Containers
                run: |
                    cd docker/redis
                    chmod +x run-redis.sh
                    ./run-redis.sh -l -t -a ${{ env.JOB_ID }}

            -   uses: ./.github/actions/validate-apiml-healthy
                with:
                    caching-service: "true"

            -   name: Run Caching Service tests
                run: >
                    ./gradlew :integration-tests:runCachingServiceTests --info -Denvironment.offPlatform=true
                    -DtlsConfiguration.clientKeyStore=../docker/redis/redis-containers/keystore/all-services.keystore.p12
                    -DtlsConfiguration.keyAlias=apimtst
                    -DtlsConfiguration.keyStore=../docker/redis/redis-containers/keystore/all-services.keystore.p12
                    -DtlsConfiguration.trustStore=../docker/redis/redis-containers/keystore/all-services.truststore.p12
                    -Partifactory_user=${{ secrets.ARTIFACTORY_USERNAME }} -Partifactory_password=${{ secrets.ARTIFACTORY_PASSWORD }}

            -   name: Output Redis logs
                if: always()
                run: |
                    echo "Redis Master"
                    docker logs redis-master
                    echo "Redis Replica"
                    docker logs redis-replica

            -   name: Output Caching Service container logs
                if: always()
                run: docker logs caching-service

            -   name: Output Gateway container logs
                if: always()
                run: docker logs gateway-service

            -   name: Output Discovery container logs
                if: always()
                run: docker logs discovery-service

            # Coverage results are not stored in this job as it would not provide much additional data
            -   name: Store results
                uses: actions/upload-artifact@v2
                if: always()
                with:
                    name: ContainerCITestsWithRedisReplica-${{ env.JOB_ID }}
                    path: |
                        integration-tests/build/reports/**
                        results/**

            -   uses: ./.github/actions/teardown

    CITestsWithRedisSentinel:
        needs: PublishJibContainers
        runs-on: ubuntu-latest
        timeout-minutes: 15

        steps:
            -   uses: actions/checkout@v3
                with:
                    ref: ${{ github.head_ref }}

            -   uses: ./.github/actions/setup

            -   name: Run APIML and Redis Containers
                run: |
                    cd docker/redis
                    chmod +x run-redis.sh
                    ./run-redis.sh -l -s -t -a ${{ env.JOB_ID }}

            -   uses: ./.github/actions/validate-apiml-healthy
                with:
                    caching-service: "true"

            -   name: Run Caching Service tests
                run: >
                    ./gradlew :integration-tests:runCachingServiceTests --info -Denvironment.offPlatform=true
                    -DtlsConfiguration.clientKeyStore=../docker/redis/redis-containers/keystore/all-services.keystore.p12
                    -DtlsConfiguration.keyAlias=apimtst
                    -DtlsConfiguration.keyStore=../docker/redis/redis-containers/keystore/all-services.keystore.p12
                    -DtlsConfiguration.trustStore=../docker/redis/redis-containers/keystore/all-services.truststore.p12
                    -Partifactory_user=${{ secrets.ARTIFACTORY_USERNAME }} -Partifactory_password=${{ secrets.ARTIFACTORY_PASSWORD }}

            -   name: Output Redis logs
                if: always()
                run: |
                    echo "Redis Master"
                    docker logs redis-master
                    echo "Redis Replica"
                    docker logs redis-replica
                    echo "Redis Sentinel 1"
                    docker logs redis-sentinel-1
                    echo "Redis Sentinel 2"
                    docker logs redis-sentinel-2
                    echo "Redis Sentinel 3"
                    docker logs redis-sentinel-3

            -   name: Output Caching Service container logs
                if: always()
                run: docker logs caching-service

            -   name: Output Gateway container logs
                if: always()
                run: docker logs gateway-service

            -   name: Output Discovery container logs
                if: always()
                run: docker logs discovery-service

            # Coverage results are not stored in this job as it would not provide much additional data
            -   name: Store results
                uses: actions/upload-artifact@v2
                if: always()
                with:
                    name: ContainerCITestsWithRedisSentinel-${{ env.JOB_ID }}
                    path: |
                        integration-tests/build/reports/**
                        results/**

            -   uses: ./.github/actions/teardown
