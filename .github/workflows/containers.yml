name: Containers - Build, Test

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    PublishContainers:
        runs-on: ubuntu-latest
        timeout-minutes: 6

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            -   name: Grant execute permission for gradlew
                run: chmod +x gradlew
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-
            -   name: Build with Gradle
                run: >
                    ./gradlew jib -Partifactory_user=${{ secrets.ARTIFACTORY_USERNAME }} -Partifactory_password=${{ secrets.ARTIFACTORY_PASSWORD }} -Pzowe.docker.password=${{ secrets.PERSONAL_JB_TOKEN }} -Pzowe.docker.username=balhar-jakub -Pzowe.docker.container=ghcr.io/balhar-jakub/ -Pzowe.docker.tag=${{ github.event.pull_request.number || 'latest' }}
            -   name: Cleanup Gradle Cache
                run: |
                    rm -f ~/.gradle/caches/modules-2/modules-2.lock
                    rm -f ~/.gradle/caches/modules-2/gc.properties
                    rm -rf ~/.gradle/caches/build-cache-1

    CITests:
        needs: PublishContainers
        runs-on: ubuntu-latest
        container: ubuntu:latest
        timeout-minutes: 6

        services:
            api-catalog-services:
                image: ghcr.io/balhar-jakub/api-catalog-services:${{ github.event.pull_request.number || 'latest' }}
            caching-service:
                image: ghcr.io/balhar-jakub/caching-service:${{ github.event.pull_request.number || 'latest' }}
            discoverable-client:
                image: ghcr.io/balhar-jakub/discoverable-client:${{ github.event.pull_request.number || 'latest' }}
            discovery-service:
                image: ghcr.io/balhar-jakub/discovery-service:${{ github.event.pull_request.number || 'latest' }}
            gateway-service:
                image: ghcr.io/balhar-jakub/gateway-service:${{ github.event.pull_request.number || 'latest' }}
            mock-zosmf:
                image: ghcr.io/balhar-jakub/mock-zosmf:${{ github.event.pull_request.number || 'latest' }}

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Run Integration Tests
                uses: ./.github/actions/container-integration
                with:
                    gradle_task_name: ':integration-tests:runContainerTests'
                    integration_tests_config: '-docker'
                    artifacts_name: 'CITests'


    CITestsRegistration:
        needs: PublishContainers
        runs-on: ubuntu-latest
        container: ubuntu:latest
        timeout-minutes: 6

        services:
            api-catalog-services:
                image: ghcr.io/balhar-jakub/api-catalog-services:${{ github.event.pull_request.number || 'latest' }}
            caching-service:
                image: ghcr.io/balhar-jakub/caching-service:${{ github.event.pull_request.number || 'latest' }}
            discoverable-client:
                image: ghcr.io/balhar-jakub/discoverable-client:${{ github.event.pull_request.number || 'latest' }}
            discovery-service:
                image: ghcr.io/balhar-jakub/discovery-service:${{ github.event.pull_request.number || 'latest' }}
            gateway-service:
                image: ghcr.io/balhar-jakub/gateway-service:${{ github.event.pull_request.number || 'latest' }}
            mock-zosmf:
                image: ghcr.io/balhar-jakub/mock-zosmf:${{ github.event.pull_request.number || 'latest' }}

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Run Integration Tests
                uses: ./.github/actions/container-integration
                with:
                    gradle_task_name: ':integration-tests:runRegistrationTests'
                    integration_tests_config: '-docker'
                    artifacts_name: 'ContainerCITestsRegistration'

    CITestsZosmfRsu2012:
        needs: PublishContainers
        runs-on: ubuntu-latest
        container: ubuntu:latest
        timeout-minutes: 6

        services:
            api-catalog-services:
                image: ghcr.io/balhar-jakub/api-catalog-services:${{ github.event.pull_request.number || 'latest' }}
            caching-service:
                image: ghcr.io/balhar-jakub/caching-service:${{ github.event.pull_request.number || 'latest' }}
            discoverable-client:
                image: ghcr.io/balhar-jakub/discoverable-client:${{ github.event.pull_request.number || 'latest' }}
            discovery-service:
                image: ghcr.io/balhar-jakub/discovery-service:${{ github.event.pull_request.number || 'latest' }}
            gateway-service:
                image: ghcr.io/balhar-jakub/gateway-service:${{ github.event.pull_request.number || 'latest' }}
            mock-zosmf:
                image: ghcr.io/balhar-jakub/mock-zosmf:${{ github.event.pull_request.number || 'latest' }}
                env:
                    ZOSMF_APPLIED_APARS: PH12143,RSU2012

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Run Integration Tests
                uses: ./.github/actions/container-integration
                with:
                    gradle_task_name: ':integration-tests:runZosmfAuthTest'
                    integration_tests_config: '-docker'
                    artifacts_name: 'ContainerCITestsZosmfRsu2012'


    CITestsZosmfWithoutJwt:
        needs: PublishContainers
        runs-on: ubuntu-latest
        container: ubuntu:latest
        timeout-minutes: 6

        services:
            api-catalog-services:
                image: ghcr.io/balhar-jakub/api-catalog-services:${{ github.event.pull_request.number || 'latest' }}
            caching-service:
                image: ghcr.io/balhar-jakub/caching-service:${{ github.event.pull_request.number || 'latest' }}
            discoverable-client:
                image: ghcr.io/balhar-jakub/discoverable-client:${{ github.event.pull_request.number || 'latest' }}
            discovery-service:
                image: ghcr.io/balhar-jakub/discovery-service:${{ github.event.pull_request.number || 'latest' }}
            gateway-service:
                image: ghcr.io/balhar-jakub/gateway-service:${{ github.event.pull_request.number || 'latest' }}
            mock-zosmf:
                image: ghcr.io/balhar-jakub/mock-zosmf:${{ github.event.pull_request.number || 'latest' }}
                env:
                    ZOSMF_APPLIED_APARS: ''

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Run Integration Tests
                uses: ./.github/actions/container-integration
                with:
                    gradle_task_name: ':integration-tests:runZosmfAuthTest'
                    integration_tests_config: '-docker'
                    artifacts_name: 'ContainerCITestsZosmfWithoutJwt'


    CITestsZosmfWithoutJwtWithAuthenticateEndpoint:
        needs: PublishContainers
        runs-on: ubuntu-latest
        container: ubuntu:latest
        timeout-minutes: 6

        services:
            api-catalog-services:
                image: ghcr.io/balhar-jakub/api-catalog-services:${{ github.event.pull_request.number || 'latest' }}
            caching-service:
                image: ghcr.io/balhar-jakub/caching-service:${{ github.event.pull_request.number || 'latest' }}
            discoverable-client:
                image: ghcr.io/balhar-jakub/discoverable-client:${{ github.event.pull_request.number || 'latest' }}
            discovery-service:
                image: ghcr.io/balhar-jakub/discovery-service:${{ github.event.pull_request.number || 'latest' }}
            gateway-service:
                image: ghcr.io/balhar-jakub/gateway-service:${{ github.event.pull_request.number || 'latest' }}
            mock-zosmf:
                image: ghcr.io/balhar-jakub/mock-zosmf:${{ github.event.pull_request.number || 'latest' }}
                env:
                    ZOSMF_APPLIED_APARS: AuthenticateApar

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Run Integration Tests
                uses: ./.github/actions/container-integration
                with:
                    gradle_task_name: ':integration-tests:runZosmfAuthTest'
                    integration_tests_config: '-docker'
                    artifacts_name: 'ContainerCITestsZosmfWithoutJwtWithAuthenticateEndpoint'


    CITestsInternalPort:
        needs: PublishContainers
        runs-on: ubuntu-latest
        container: ubuntu:latest
        timeout-minutes: 6

        services:
            api-catalog-services:
                image: ghcr.io/balhar-jakub/api-catalog-services:${{ github.event.pull_request.number || 'latest' }}
            caching-service:
                image: ghcr.io/balhar-jakub/caching-service:${{ github.event.pull_request.number || 'latest' }}
            discoverable-client:
                image: ghcr.io/balhar-jakub/discoverable-client:${{ github.event.pull_request.number || 'latest' }}
            discovery-service:
                image: ghcr.io/balhar-jakub/discovery-service:${{ github.event.pull_request.number || 'latest' }}
            gateway-service:
                image: ghcr.io/balhar-jakub/gateway-service:${{ github.event.pull_request.number || 'latest' }}
            mock-zosmf:
                image: ghcr.io/balhar-jakub/mock-zosmf:${{ github.event.pull_request.number || 'latest' }}

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Run Integration Tests
                uses: ./.github/actions/container-integration
                with:
                    gradle_task_name: ':integration-tests:runBaseTestsInternalPort'
                    integration_tests_config: '-docker'
                    artifacts_name: 'ContainerCITestsInternalPort'

    CITestsWithRedis:
        needs: PublishContainers
        runs-on: ubuntu-latest
        container: ubuntu:latest
        timeout-minutes: 6

        services:
            api-catalog-services:
                image: ghcr.io/balhar-jakub/api-catalog-services:${{ github.event.pull_request.number || 'latest' }}
            caching-service:
                image: ghcr.io/balhar-jakub/caching-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    ZWE_CACHING_SERVICE_PERSISTENT: 'redis'
                    CACHING_STORAGE_REDIS_HOST: 'localhost'
                    CACHING_STORAGE_REDIS_PORT: 6379
                    CACHING_STORAGE_REDIS_USERNAME: 'default'
                    CACHING_STORAGE_REDIS_PASSWORD: 'heslo'
                    CACHING_STORAGE_REDIS_SSL_ENABLED: true
                    CACHING_STORAGE_REDIS_SSL_KEYSTORE: keystore/localhost/localhost.keystore.p12
                    CACHING_STORAGE_REDIS_SSL_KEYSTOREPASSWORD: password
                    CACHING_STORAGE_REDIS_SSL_TRUSTSTORE: keystore/localhost/localhost.truststore.p12
                    CACHING_STORAGE_REDIS_SSL_TRUSTSTOREPASSWORD: password
            discoverable-client:
                image: ghcr.io/balhar-jakub/discoverable-client:${{ github.event.pull_request.number || 'latest' }}
            discovery-service:
                image: ghcr.io/balhar-jakub/discovery-service:${{ github.event.pull_request.number || 'latest' }}
            gateway-service:
                image: ghcr.io/balhar-jakub/gateway-service:${{ github.event.pull_request.number || 'latest' }}
            mock-zosmf:
                image: ghcr.io/balhar-jakub/mock-zosmf:${{ github.event.pull_request.number || 'latest' }}
                env:
                    ZOSMF_APPLIED_APARS: AuthenticateApar
            redis-master:
                image: redis:latest
                ports:
                    - "6379:6379"
                volumes:
                    - /api-layer/keystore:/usr/local/etc/keystore
                    - /api-layer/docker/redis/master-tls:/usr/local/etc/redis/

            redis-replica:
                image: redis:latest
                ports:
                    - "6380:6380"
                volumes:
                    - /api-layer/keystore:/usr/local/etc/keystore
                    - /api-layer/docker/redis/replica-tls:/usr/local/etc/redis/


        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Run Integration Tests
                uses: ./.github/actions/container-integration
                with:
                    gradle_task_name: ':integration-tests:runCachingServiceTests'
                    integration_tests_config: '-docker'
                    artifacts_name: 'ContainerCITestsWithRedis'


    CITestsWithRedisWithoutSslVerification:
        needs: PublishContainers
        runs-on: ubuntu-latest
        container: ubuntu:latest
        timeout-minutes: 6

        services:
            api-catalog-services:
                image: ghcr.io/balhar-jakub/api-catalog-services:${{ github.event.pull_request.number || 'latest' }}
            caching-service:
                image: ghcr.io/balhar-jakub/caching-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    ZWE_CACHING_SERVICE_PERSISTENT: 'redis'
                    CACHING_STORAGE_REDIS_HOST: 'localhost'
                    CACHING_STORAGE_REDIS_PORT: 6379
                    CACHING_STORAGE_REDIS_USERNAME: 'default'
                    CACHING_STORAGE_REDIS_PASSWORD: 'heslo'
                    VERIFY_CERTIFICATES: false
            discoverable-client:
                image: ghcr.io/balhar-jakub/discoverable-client:${{ github.event.pull_request.number || 'latest' }}
            discovery-service:
                image: ghcr.io/balhar-jakub/discovery-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    VERIFY_CERTIFICATES: false
            gateway-service:
                image: ghcr.io/balhar-jakub/gateway-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    VERIFY_CERTIFICATES: false
            mock-zosmf:
                image: ghcr.io/balhar-jakub/mock-zosmf:${{ github.event.pull_request.number || 'latest' }}
                env:
                    ZOSMF_APPLIED_APARS: AuthenticateApar
            redis-master:
                image: redis:latest
                ports:
                    - "6379:6379"
                volumes:
                    - /api-layer/docker/redis/master:/usr/local/etc/redis/

            redis-replica:
                image: redis:latest
                ports:
                    - "6380:6380"
                volumes:
                    - /api-layer/docker/redis/replica:/usr/local/etc/redis/

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Run Integration Tests
                uses: ./.github/actions/container-integration
                with:
                    gradle_task_name: ':integration-tests:runCachingServiceTests'
                    integration_tests_config: '-docker'
                    artifacts_name: 'ContainerCITestsWithRedisWithoutSslVerification'


    CITestsHA:
        needs: PublishContainers
        container: ubuntu:latest
        runs-on: ubuntu-latest
        timeout-minutes: 20

        services:
            nginx:
                image: nginx:latest
                ports:
                    - 443:443
                volumes:
                    - /$(pwd)/docker/nginx/load-balancer.conf:/etc/nginx
                    - /$(pwd)/keystore/docker:/etc/ssl/private
            api-catalog-services:
                image: ghcr.io/balhar-jakub/api-catalog-services:${{ github.event.pull_request.number || 'latest' }}
            caching-service:
                image: ghcr.io/balhar-jakub/caching-service
            discoverable-client:
                image: ghcr.io/balhar-jakub/discoverable-client:${{ github.event.pull_request.number || 'latest' }}
            mock-zosmf:
                image: ghcr.io/balhar-jakub/mock-zosmf
            discovery-service:
                image: ghcr.io/balhar-jakub/discovery-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    APIML_DISCOVERY_ALLPEERSURLS: https://discovery-service:10011/eureka,https://discovery-service-2:10011/eureka
            discovery-service-2:
                image: ghcr.io/balhar-jakub/discovery-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    APIML_SERVICE_HOSTNAME: discovery-service-2
                    APIML_DISCOVERY_ALLPEERSURLS: https://discovery-service-2:10011/eureka,https://discovery-service:10011/eureka
            gateway-service:
                image: ghcr.io/balhar-jakub/gateway-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    APIML_SERVICE_DISCOVERYSERVICEURLS: https://discovery-service:10011/eureka/,https://discovery-service-2:10011/eureka/
            gateway-service-2:
                image: ghcr.io/balhar-jakub/gateway-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    APIML_SERVICE_HOSTNAME: gateway-service-2
                    SERVER_INTERNAL_PORT: 10027
                    APIML_SERVICE_DISCOVERYSERVICEURLS: https://discovery-service:10011/eureka/,https://discovery-service-2:10011/eureka/
        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Run Integration Tests
                uses: ./.github/actions/container-integration
                with:
                    gradle_task_name: ':integration-tests:runHATests'
                    integration_tests_config: '-ha'
                    artifacts_name: 'CITestsHA'
