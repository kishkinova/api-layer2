name: Containers - Build, Test

on:
    push:
        branches: [ master, v2.x.x ]
    pull_request:
        branches: [ master, v2.x.x ]
    workflow_dispatch:

env:
    JOB_ID: ${{ github.run_id }}-${{ github.run_number }}

jobs:
    PublishJibContainers:
        runs-on: ubuntu-latest
        timeout-minutes: 15

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}

            -   uses: ./.github/actions/setup

            -   name: Build with Gradle
                run: >
                    ./gradlew jib -Partifactory_user=${{ secrets.ARTIFACTORY_USERNAME }} -Partifactory_password=${{ secrets.ARTIFACTORY_PASSWORD }} -Pzowe.docker.password=${{ secrets.PERSONAL_JB_TOKEN }} -Pzowe.docker.username=balhar-jakub -Pzowe.docker.container=ghcr.io/balhar-jakub/ -Pzowe.docker.tag=${{ github.event.pull_request.number || 'latest' }}

            -   uses: ./.github/actions/teardown

    CITestsWithRedis:
        needs: PublishJibContainers
        runs-on: ubuntu-latest
        container: ubuntu:latest
        timeout-minutes: 15

        services:
            api-catalog-services:
                image: ghcr.io/balhar-jakub/api-catalog-services:${{ github.event.pull_request.number || 'latest' }}
                volumes:
                    - /api-defs:/api-defs
            caching-service:
                image: ghcr.io/balhar-jakub/caching-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    CACHING_STORAGE_MODE: 'redis'
                    CACHING_STORAGE_REDIS_MASTERNODEURI: 'default:heslo@redis-master:6379'
                    CACHING_STORAGE_REDIS_SSL_ENABLED: true
            discoverable-client:
                image: ghcr.io/balhar-jakub/discoverable-client:${{ github.event.pull_request.number || 'latest' }}
            discovery-service:
                image: ghcr.io/balhar-jakub/discovery-service:${{ github.event.pull_request.number || 'latest' }}
                volumes:
                    - /api-defs:/api-defs
            gateway-service:
                image: ghcr.io/balhar-jakub/gateway-service:${{ github.event.pull_request.number || 'latest' }}
            mock-services:
                image: ghcr.io/balhar-jakub/mock-services:${{ github.event.pull_request.number || 'latest' }}
                env:
                    ZOSMF_APPLIEDAPARS: AuthenticateApar
            redis-master:
                image: redis:latest
                ports:
                    - "6379:6379"

            redis-replica:
                image: redis:latest
                ports:
                    - "6380:6380"

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}

            -   uses: ./.github/actions/setup

            -   name: Build with Gradle
                run: >
                    ./gradlew :integration-tests:runCachingServiceTests --info -Denvironment.config=-docker -Denvironment.offPlatform=true
                    -Partifactory_user=${{ secrets.ARTIFACTORY_USERNAME }} -Partifactory_password=${{ secrets.ARTIFACTORY_PASSWORD }}

            -   uses: ./.github/actions/dump-jacoco
                if: always()

            -   name: Store results
                uses: actions/upload-artifact@v3
                if: always()
                with:
                    name: ContainerCITestsWithRedis-${{ env.JOB_ID }}
                    path: |
                        integration-tests/build/reports/**
                        results/**
            -   uses: ./.github/actions/teardown

    CITestsWithRedisWithoutSslVerification:
        needs: PublishJibContainers
        runs-on: ubuntu-latest
        container: ubuntu:latest
        timeout-minutes: 15

        services:
            api-catalog-services:
                image: ghcr.io/balhar-jakub/api-catalog-services:${{ github.event.pull_request.number || 'latest' }}
                volumes:
                    - /api-defs:/api-defs
            caching-service:
                image: ghcr.io/balhar-jakub/caching-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    CACHING_STORAGE_MODE: 'redis'
                    CACHING_STORAGE_REDIS_MASTERNODEURI: 'default:heslo@redis-master:6379'
                    CACHING_STORAGE_REDIS_SSL_ENABLED: false
                    VERIFY_CERTIFICATES: false
            discoverable-client:
                image: ghcr.io/balhar-jakub/discoverable-client:${{ github.event.pull_request.number || 'latest' }}
            discovery-service:
                image: ghcr.io/balhar-jakub/discovery-service:${{ github.event.pull_request.number || 'latest' }}
                volumes:
                    - /api-defs:/api-defs
                env:
                    VERIFY_CERTIFICATES: false
            gateway-service:
                image: ghcr.io/balhar-jakub/gateway-service:${{ github.event.pull_request.number || 'latest' }}
                env:
                    VERIFY_CERTIFICATES: false
            mock-services:
                image: ghcr.io/balhar-jakub/mock-services:${{ github.event.pull_request.number || 'latest' }}
                env:
                    ZOSMF_APPLIEDAPARS: AuthenticateApar
            redis-master:
                image: redis:latest
                ports:
                    - "6379:6379"

            redis-replica:
                image: redis:latest
                ports:
                    - "6380:6380"

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}

            -   uses: ./.github/actions/setup

            -   name: Build with Gradle
                run: >
                    ./gradlew :integration-tests:runCachingServiceTests --info -Denvironment.config=-docker -Denvironment.offPlatform=true
                    -Partifactory_user=${{ secrets.ARTIFACTORY_USERNAME }} -Partifactory_password=${{ secrets.ARTIFACTORY_PASSWORD }}
            # Coverage results are not stored in this job as it would not provide much additional data
            -   name: Store results
                uses: actions/upload-artifact@v2
                if: always()
                with:
                    name: ContainerCITestsWithRedisWithoutSslVerification-${{ env.JOB_ID }}
                    path: |
                        integration-tests/build/reports/**

            -   uses: ./.github/actions/teardown

    PublishResults:
        needs: [CITests,CITestsWithInfinispan,CITestsZosmfRsu2012,CITestsWithRedis,CITestsInternalPort]
        runs-on: ubuntu-latest
        timeout-minutes: 15

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}

            -   uses: ./.github/actions/setup
                with:
                    jdkVersion: 11

            -   uses: actions/download-artifact@v3
                with:
                    name: ContainerCITests-${{ env.JOB_ID }}
                    path: containercitests
            -   uses: actions/download-artifact@v3
                with:
                    name: CITestsWithInfinispan-${{ env.JOB_ID }}
                    path: citestswithinfinispan
            -   uses: actions/download-artifact@v3
                with:
                    name: ContainerCITestsZosmfRsu2012-${{ env.JOB_ID }}
                    path: containercitestszosmfrsu2012
            -   uses: actions/download-artifact@v3
                with:
                    name: ContainerCITestsWithRedis-${{ env.JOB_ID }}
                    path: containercitestswithredis
            -   uses: actions/download-artifact@v3
                with:
                    name: ContainerCITestsInternalPort-${{ env.JOB_ID }}
                    path: containercitestsinternalport
            -   name: Code coverage and publish results
                run: >
                    ./gradlew --info coverage sonarqube -Dresults="containercitests/results,citestswithinfinispan/results,containercitestszosmfrsu2012/results,containercitestswithredis/results,containercitestsinternalport/results"
                    -Psonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
                    -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
                env:
                    ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                    ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
                    SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   uses: ./.github/actions/teardown
