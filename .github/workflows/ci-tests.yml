# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CI Testing

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    BuildAndPackage:
        runs-on: ubuntu-latest
        timeout-minutes: 10

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            -   name: Grant execute permission for gradlew
                run: chmod +x gradlew
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-
            -   name: Cache built artifacts
                uses: actions/cache@v2
                with:
                    path: |
                        build/libs
                        api-catalog-services/build/libs
                        caching-service/build/libs
                        discoverable-client/build/libs
                        discovery-service/build/libs
                        gateway-service/build/libs
                        integration-tests/build
                        mock-zosmf/build/libs
                        onboarding-enabler-nodejs/node_modules
                        onboarding-enabler-nodejs-sample-app/node_modules
                    key: ${{ runner.OS }}-artifacts001-${{ github.sha }}
                    restore-keys: |
                        ${{ runner.OS }}-artifacts001-${{ github.sha }}
            -   name: Build with Gradle
                run: >
                    ./gradlew build -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
                env:
                    ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                    ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
            -   name: Cleanup Gradle Cache
                run: |
                    rm -f ~/.gradle/caches/modules-2/modules-2.lock
                    rm -f ~/.gradle/caches/modules-2/gc.properties
                    rm -rf ~/.gradle/caches/build-cache-1


    CITests:
        needs: BuildAndPackage
        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            -   name: Grant execute permission for gradlew
                run: chmod +x gradlew
            -   name: Restore produced jars
                uses: actions/cache@v2
                with:
                    path: |
                        build/libs
                        api-catalog-services/build/libs
                        caching-service/build/libs
                        discoverable-client/build/libs
                        discovery-service/build/libs
                        gateway-service/build/libs
                        integration-tests/build
                        mock-zosmf/build/libs
                        onboarding-enabler-nodejs/node_modules
                        onboarding-enabler-nodejs-sample-app/node_modules
                    key: ${{ runner.OS }}-artifacts001-${{ github.sha }}
                    restore-keys: |
                        ${{ runner.OS }}-artifacts001-${{ github.sha }}
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-
            -   name: Run CI Tests
                run: >
                    ./gradlew runCITests --info
                    -DauxiliaryUserList.value="unauthorized,USER1,validPassword;servicesinfo-authorized,USER,validPassword;servicesinfo-unauthorized,USER1,validPassword"
                    -Dcredentials.user=USER -Dcredentials.password=validPassword
                    -Dzosmf.host=localhost -Dzosmf.port=10013 -Dzosmf.serviceId=mockzosmf -Dinternal.gateway.port=10017
                    -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
                env:
                    ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                    ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
            - name: Store results
              uses: actions/upload-artifact@v2
              if: always()
              with:
                  name: CITests
                  path: |
                      integration-tests/build/reports/**
            -   name: Cleanup Gradle Cache
                run: |
                    rm -f ~/.gradle/caches/modules-2/modules-2.lock
                    rm -f ~/.gradle/caches/modules-2/gc.properties
                    rm -rf ~/.gradle/caches/build-cache-1

    CITestsRegistration:
        needs: BuildAndPackage
        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            -   name: Grant execute permission for gradlew
                run: chmod +x gradlew
            -   name: Restore produced jars
                uses: actions/cache@v2
                with:
                    path: |
                        build/libs
                        api-catalog-services/build/libs
                        caching-service/build/libs
                        discoverable-client/build/libs
                        discovery-service/build/libs
                        gateway-service/build/libs
                        integration-tests/build
                        mock-zosmf/build/libs
                        onboarding-enabler-nodejs/node_modules
                        onboarding-enabler-nodejs-sample-app/node_modules
                    key: ${{ runner.OS }}-artifacts001-${{ github.sha }}
                    restore-keys: |
                        ${{ runner.OS }}-artifacts001-${{ github.sha }}
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-
            -   name: Run CI Tests
                run: >
                    ./gradlew runRegistrationTests --info
                    -DauxiliaryUserList.value="unauthorized,USER1,validPassword;servicesinfo-authorized,USER,validPassword;servicesinfo-unauthorized,USER1,validPassword"
                    -Dcredentials.user=USER -Dcredentials.password=validPassword
                    -Dzosmf.host=localhost -Dzosmf.port=10013 -Dzosmf.serviceId=mockzosmf -Dinternal.gateway.port=10017
                    -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
                env:
                    ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                    ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
            - name: Store results
              uses: actions/upload-artifact@v2
              if: always()
              with:
                  name: CITestsRegistration
                  path: |
                      integration-tests/build/reports/**
            -   name: Cleanup Gradle Cache
                run: |
                    rm -f ~/.gradle/caches/modules-2/modules-2.lock
                    rm -f ~/.gradle/caches/modules-2/gc.properties
                    rm -rf ~/.gradle/caches/build-cache-1

    CITestsInternalPort:
        needs: BuildAndPackage

        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            - uses: actions/checkout@v2
              with:
                  ref: ${{ github.head_ref }}
            - name: Set up JDK 1.8
              uses: actions/setup-java@v1
              with:
                  java-version: 1.8
            - name: Grant execute permission for gradlew
              run: chmod +x gradlew
            -   name: Restore produced jars
                uses: actions/cache@v2
                with:
                    path: |
                        build/libs
                        api-catalog-services/build/libs
                        caching-service/build/libs
                        discoverable-client/build/libs
                        discovery-service/build/libs
                        gateway-service/build/libs
                        integration-tests/build
                        mock-zosmf/build/libs
                        onboarding-enabler-nodejs/node_modules
                        onboarding-enabler-nodejs-sample-app/node_modules
                    key: ${{ runner.OS }}-artifacts001-${{ github.sha }}
                    restore-keys: |
                        ${{ runner.OS }}-artifacts001-${{ github.sha }}
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-
            - name: Build with Gradle
              run: >
                  ./gradlew runBaseTestsInternalPort -x test --scan --info
                  -DauxiliaryUserList.value="unauthorized,USER1,validPassword;servicesinfo-authorized,USER,validPassword;servicesinfo-unauthorized,USER1,validPassword"
                  -Dcredentials.user=USER -Dcredentials.password=validPassword -Dzosmf.host=localhost -Dzosmf.port=10013
                  -Dzosmf.serviceId=mockzosmf -Dinternal.gateway.port=10017
                  -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
              env:
                  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
            - name: Store results
              uses: actions/upload-artifact@v2
              if: always()
              with:
                  name: CITestsInternalPort
                  path: |
                      integration-tests/build/reports/**
            -   name: Cleanup Gradle Cache
                run: |
                    rm -f ~/.gradle/caches/modules-2/modules-2.lock
                    rm -f ~/.gradle/caches/modules-2/gc.properties
                    rm -rf ~/.gradle/caches/build-cache-1

    CITestsATTLS:
        needs: BuildAndPackage

        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            - uses: actions/checkout@v2
              with:
                  ref: ${{ github.head_ref }}
            - name: Set up JDK 1.8
              uses: actions/setup-java@v1
              with:
                  java-version: 1.8
            - name: Grant execute permission for gradlew
              run: chmod +x gradlew
            -   name: Restore produced jars
                uses: actions/cache@v2
                with:
                    path: |
                        build/libs
                        api-catalog-services/build/libs
                        caching-service/build/libs
                        discoverable-client/build/libs
                        discovery-service/build/libs
                        gateway-service/build/libs
                        integration-tests/build
                        mock-zosmf/build/libs
                        onboarding-enabler-nodejs/node_modules
                        onboarding-enabler-nodejs-sample-app/node_modules
                    key: ${{ runner.OS }}-artifacts001-${{ github.sha }}
                    restore-keys: |
                        ${{ runner.OS }}-artifacts001-${{ github.sha }}
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-
            - name: Start nginx proxy
              run: |
                  cd docker/nginx
                  docker-compose up --detach
            - name: CI Test with Gradle
              run: >
                  ./gradlew runCITestsAttls --scan --info
                  -DauxiliaryUserList.value="unauthorized,USER1,validPassword;servicesinfo-authorized,USER,validPassword;servicesinfo-unauthorized,USER1,validPassword"
                  -Dcredentials.user=USER -Dcredentials.password=validPassword -Dzosmf.host=localhost -Dzosmf.port=10013
                  -Dzosmf.serviceId=mockzosmf -Dinternal.gateway.port=10017
                  -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
              env:
                  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
            - name: Store results
              uses: actions/upload-artifact@v2
              if: always()
              with:
                  name: CITestsATTLS
                  path: |
                      integration-tests/build/reports/**
            -   name: Cleanup Gradle Cache
                run: |
                    rm -f ~/.gradle/caches/modules-2/modules-2.lock
                    rm -f ~/.gradle/caches/modules-2/gc.properties
                    rm -rf ~/.gradle/caches/build-cache-1

    CITestsZosmfRsu2012:
        needs: BuildAndPackage

        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            - uses: actions/checkout@v2
              with:
                  ref: ${{ github.head_ref }}
            - name: Set up JDK 1.8
              uses: actions/setup-java@v1
              with:
                  java-version: 1.8
            - name: Grant execute permission for gradlew
              run: chmod +x gradlew
            -   name: Restore produced jars
                uses: actions/cache@v2
                with:
                    path: |
                        build/libs
                        api-catalog-services/build/libs
                        caching-service/build/libs
                        discoverable-client/build/libs
                        discovery-service/build/libs
                        gateway-service/build/libs
                        integration-tests/build
                        mock-zosmf/build/libs
                        onboarding-enabler-nodejs/node_modules
                        onboarding-enabler-nodejs-sample-app/node_modules
                    key: ${{ runner.OS }}-artifacts001-${{ github.sha }}
                    restore-keys: |
                        ${{ runner.OS }}-artifacts001-${{ github.sha }}
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-
            - name: Build with Gradle
              run: >
                  ./gradlew runZosmfAuthTest --scan --info
                  -DauxiliaryUserList.value="unauthorized,USER1,validPassword;servicesinfo-authorized,USER,validPassword;servicesinfo-unauthorized,USER1,validPassword"
                  -Dcredentials.user=USER -Dcredentials.password=validPassword -Dzosmf.host=localhost -Dzosmf.port=10013
                  -Dzosmf.serviceId=mockzosmf -Dinternal.gateway.port=10017
                  -Dzosmf.appliedApars=PH12143,RSU2012
                  -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
              env:
                  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
            - name: Store results
              uses: actions/upload-artifact@v2
              if: always()
              with:
                  name: CITestsZosmfRsu2012
                  path: |
                      integration-tests/build/reports/**
            -   name: Cleanup Gradle Cache
                run: |
                    rm -f ~/.gradle/caches/modules-2/modules-2.lock
                    rm -f ~/.gradle/caches/modules-2/gc.properties
                    rm -rf ~/.gradle/caches/build-cache-1


    CITestsZosmfWithoutJwt:
        needs: BuildAndPackage

        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            - uses: actions/checkout@v2
              with:
                  ref: ${{ github.head_ref }}
            - name: Set up JDK 1.8
              uses: actions/setup-java@v1
              with:
                  java-version: 1.8
            - name: Grant execute permission for gradlew
              run: chmod +x gradlew
            -   name: Restore produced jars
                uses: actions/cache@v2
                with:
                    path: |
                        build/libs
                        api-catalog-services/build/libs
                        caching-service/build/libs
                        discoverable-client/build/libs
                        discovery-service/build/libs
                        gateway-service/build/libs
                        integration-tests/build
                        mock-zosmf/build/libs
                        onboarding-enabler-nodejs/node_modules
                        onboarding-enabler-nodejs-sample-app/node_modules
                    key: ${{ runner.OS }}-artifacts001-${{ github.sha }}
                    restore-keys: |
                        ${{ runner.OS }}-artifacts001-${{ github.sha }}
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-
            - name: Build with Gradle
              run: >
                  ./gradlew runZosmfAuthTest --scan --info
                  -DauxiliaryUserList.value="unauthorized,USER1,validPassword;servicesinfo-authorized,USER,validPassword;servicesinfo-unauthorized,USER1,validPassword"
                  -Dcredentials.user=USER -Dcredentials.password=validPassword -Dzosmf.host=localhost -Dzosmf.port=10013
                  -Dzosmf.serviceId=mockzosmf -Dinternal.gateway.port=10017
                  -Dzosmf.appliedApars=
                  -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
              env:
                  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
            - name: Store results
              uses: actions/upload-artifact@v2
              if: always()
              with:
                  name: CITestsZosmfWithoutJwt
                  path: |
                      integration-tests/build/reports/**
            -   name: Cleanup Gradle Cache
                run: |
                    rm -f ~/.gradle/caches/modules-2/modules-2.lock
                    rm -f ~/.gradle/caches/modules-2/gc.properties
                    rm -rf ~/.gradle/caches/build-cache-1


    CITestsZosmfWithoutJwtWithAuthenticateEndpoint:
        needs: BuildAndPackage

        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            - uses: actions/checkout@v2
              with:
                  ref: ${{ github.head_ref }}
            - name: Set up JDK 1.8
              uses: actions/setup-java@v1
              with:
                  java-version: 1.8
            - name: Grant execute permission for gradlew
              run: chmod +x gradlew
            -   name: Restore produced jars
                uses: actions/cache@v2
                with:
                    path: |
                        build/libs
                        api-catalog-services/build/libs
                        caching-service/build/libs
                        discoverable-client/build/libs
                        discovery-service/build/libs
                        gateway-service/build/libs
                        integration-tests/build
                        mock-zosmf/build/libs
                        onboarding-enabler-nodejs/node_modules
                        onboarding-enabler-nodejs-sample-app/node_modules
                    key: ${{ runner.OS }}-artifacts001-${{ github.sha }}
                    restore-keys: |
                        ${{ runner.OS }}-artifacts001-${{ github.sha }}
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-
            - name: Build with Gradle
              run: >
                  ./gradlew runZosmfAuthTest --scan --info
                  -DauxiliaryUserList.value="unauthorized,USER1,validPassword;servicesinfo-authorized,USER,validPassword;servicesinfo-unauthorized,USER1,validPassword"
                  -Dcredentials.user=USER -Dcredentials.password=validPassword -Dzosmf.host=localhost -Dzosmf.port=10013
                  -Dzosmf.serviceId=mockzosmf -Dinternal.gateway.port=10017
                  -Dzosmf.appliedApars=AuthenticateApar
                  -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
              env:
                  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
            - name: Store results
              uses: actions/upload-artifact@v2
              if: always()
              with:
                  name: CITestsZosmfWithoutJwtWithAuthenticateEndpoint
                  path: |
                      integration-tests/build/reports/**
            -   name: Cleanup Gradle Cache
                run: |
                    rm -f ~/.gradle/caches/modules-2/modules-2.lock
                    rm -f ~/.gradle/caches/modules-2/gc.properties
                    rm -rf ~/.gradle/caches/build-cache-1

    CITestsWithRedis:
        needs: BuildAndPackage

        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            - uses: actions/checkout@v2
              with:
                  ref: ${{ github.head_ref }}
            - name: Set up JDK 1.8
              uses: actions/setup-java@v1
              with:
                  java-version: 1.8
            - name: Grant execute permission for gradlew
              run: chmod +x gradlew
            -   name: Restore produced jars
                uses: actions/cache@v2
                with:
                    path: |
                        build/libs
                        api-catalog-services/build/libs
                        caching-service/build/libs
                        discoverable-client/build/libs
                        discovery-service/build/libs
                        gateway-service/build/libs
                        integration-tests/build
                        mock-zosmf/build/libs
                        onboarding-enabler-nodejs/node_modules
                        onboarding-enabler-nodejs-sample-app/node_modules
                    key: ${{ runner.OS }}-artifacts001-${{ github.sha }}
                    restore-keys: |
                        ${{ runner.OS }}-artifacts001-${{ github.sha }}
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-
            - name: Start Redis
              run: |
                  docker-compose -f redis/docker-compose-replica-tls.yml up --detach

            - name: Build with Gradle
              run: >
                  ./gradlew runCachingServiceTests --scan --info
                  -DauxiliaryUserList.value="unauthorized,USER1,validPassword;servicesinfo-authorized,USER,validPassword;servicesinfo-unauthorized,USER1,validPassword"
                  -Dcredentials.user=USER -Dcredentials.password=validPassword -Dzosmf.host=localhost -Dzosmf.port=10013
                  -Dzosmf.serviceId=mockzosmf -Dinternal.gateway.port=10017
                  -Dzosmf.appliedApars=AuthenticateApar
                  -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
              env:
                  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
                  ZWE_CACHING_SERVICE_PERSISTENT: 'redis'
                  CACHING_STORAGE_REDIS_HOST: 'localhost'
                  CACHING_STORAGE_REDIS_PORT: 6379
                  CACHING_STORAGE_REDIS_USERNAME: 'default'
                  CACHING_STORAGE_REDIS_PASSWORD: 'heslo'
                  CACHING_STORAGE_REDIS_SSL_ENABLED: true
                  CACHING_STORAGE_REDIS_SSL_KEYSTORE: keystore/localhost/localhost.keystore.p12
                  CACHING_STORAGE_REDIS_SSL_KEYSTOREPASSWORD: password
                  CACHING_STORAGE_REDIS_SSL_TRUSTSTORE: keystore/localhost/localhost.truststore.p12
                  CACHING_STORAGE_REDIS_SSL_TRUSTSTOREPASSWORD: password
            - name: Store results
              uses: actions/upload-artifact@v2
              if: always()
              with:
                  name: CITestsWithRedis
                  path: |
                      integration-tests/build/reports/**
            -   name: Cleanup Gradle Cache
                run: |
                    rm -f ~/.gradle/caches/modules-2/modules-2.lock
                    rm -f ~/.gradle/caches/modules-2/gc.properties
                    rm -rf ~/.gradle/caches/build-cache-1

    CITestsWithRedisWithoutSslVerification:
        needs: BuildAndPackage

        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            - uses: actions/checkout@v2
              with:
                  ref: ${{ github.head_ref }}
            - name: Set up JDK 1.8
              uses: actions/setup-java@v1
              with:
                  java-version: 1.8
            - name: Grant execute permission for gradlew
              run: chmod +x gradlew
            -   name: Restore produced jars
                uses: actions/cache@v2
                with:
                    path: |
                        build/libs
                        api-catalog-services/build/libs
                        caching-service/build/libs
                        discoverable-client/build/libs
                        discovery-service/build/libs
                        gateway-service/build/libs
                        integration-tests/build
                        mock-zosmf/build/libs
                        onboarding-enabler-nodejs/node_modules
                        onboarding-enabler-nodejs-sample-app/node_modules
                    key: ${{ runner.OS }}-artifacts001-${{ github.sha }}
                    restore-keys: |
                        ${{ runner.OS }}-artifacts001-${{ github.sha }}
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-
            - name: Start Redis
              run: |
                  docker-compose -f redis/docker-compose-replica.yml up --detach

            - name: Build with Gradle
              run: >
                  ./gradlew runCachingServiceTests -x test --scan --info -Pgradle.cache.push=true -DexternalJenkinsToggle="true"
                  -DauxiliaryUserList.value="unauthorized,USER1,validPassword;servicesinfo-authorized,USER,validPassword;servicesinfo-unauthorized,USER1,validPassword"
                  -Dcredentials.user=USER -Dcredentials.password=validPassword -Dzosmf.host=localhost -Dzosmf.port=10013
                  -Dzosmf.serviceId=mockzosmf -Dinternal.gateway.port=10017
                  -Dzosmf.appliedApars=AuthenticateApar
                  -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
              env:
                  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
                  ZWE_CACHING_SERVICE_PERSISTENT: 'redis'
                  CACHING_STORAGE_REDIS_HOST: 'localhost'
                  CACHING_STORAGE_REDIS_PORT: 6379
                  CACHING_STORAGE_REDIS_USERNAME: 'default'
                  CACHING_STORAGE_REDIS_PASSWORD: 'heslo'
                  VERIFY_CERTIFICATES: false
            - name: Store results
              uses: actions/upload-artifact@v2
              if: always()
              with:
                  name: CITestsWithRedisWithoutSslVerification
                  path: |
                      integration-tests/build/reports/**
            -   name: Cleanup Gradle Cache
                run: |
                    rm -f ~/.gradle/caches/modules-2/modules-2.lock
                    rm -f ~/.gradle/caches/modules-2/gc.properties
                    rm -rf ~/.gradle/caches/build-cache-1

    sonarQubeScan:

        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Set up JDK 1.11
                uses: actions/setup-java@v1
                with:
                    java-version: 1.11
            -   name: Grant execute permission for gradlew
                run: chmod +x gradlew
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-
            -   name: Build with Gradle
                run: >
                    ./gradlew --info coverage sonarqube
                    -Psonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
                    -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_PASSWORD
                env:
                    ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                    ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
                    SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            -   name: Cleanup Gradle Cache
                run: |
                    rm -f ~/.gradle/caches/modules-2/modules-2.lock
                    rm -f ~/.gradle/caches/modules-2/gc.properties
                    rm -rf ~/.gradle/caches/build-cache-1
