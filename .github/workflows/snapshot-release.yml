# This workflow will release project with Gradle

name: Relase new version (snapshot)

on:
    push:
        branches: [ master ]

env:
    IMAGE_BASE_DIR: ./containers

jobs:
    build:

        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            - uses: actions/checkout@v2
              with:
                  ref: ${{ github.head_ref }}
            - name: Set up JDK 1.8
              uses: actions/setup-java@v1
              with:
                  java-version: 1.8
            - name: Set up Node
              uses: actions/setup-node@v2
              with:
                  node-version: '14'
            - run: npm install -g npm@7.20.5
            - name: Grant execute permission for gradlew
              run: chmod +x gradlew
            - name: Cache Gradle packages
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-
            - name: Cache Node.js modules
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.npm
                      **/node_modules
                  key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json, **/package.json') }}
                  restore-keys: |
                      ${{ runner.OS }}-node-
                      ${{ runner.OS }}-
            - name: Release with Gradle
              run: ./gradlew build publishAllVersions -Pzowe.deploy.username=$ARTIFACTORY_USERNAME -Pzowe.deploy.password=$ARTIFACTORY_PASSWORD -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_USERNAME
              env:
                  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
            - name: Cleanup Gradle Cache
                # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
                # Restoring these files from a GitHub Actions cache might cause problems for future builds.
              run: |
                  rm -f ~/.gradle/caches/modules-2/modules-2.lock
                  rm -f ~/.gradle/caches/modules-2/gc.properties

    build-amd64:
        strategy:
            matrix:
                service: [ gateway-service, discovery-service, api-catalog-services, caching-service ]
                os: [ ubuntu, ubi ]
                include:
                    -   os: ubuntu
                        BUILD_ARG_LIST: ZOWE_BASE_IMAGE=latest-ubuntu
                    -   os: ubi
                        BUILD_ARG_LIST: ZOWE_BASE_IMAGE=latest-ubi

        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            -   name: Grant execute permission for gradlew
                run: chmod +x gradlew
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-

            -   uses: zowe-actions/shared-actions/envvars-global@main

            -   uses: zowe-actions/shared-actions/docker-prepare@main
                with:
                    registry-user: ${{ secrets.ARTIFACTORY_X_USERNAME }}
                    registry-password: ${{ secrets.ARTIFACTORY_X_PASSWORD }}
                    release: true
                    base-directory: ${{ env.IMAGE_BASE_DIR }}/${{ matrix.service }}
                    image-name: ${{ matrix.service }}
                    linux-distro: ${{ matrix.os }}
                    cpu-arch: amd64
                    # Used only for UBI
                    redhat-registry: ${{ env.DEFAULT_REDHAT_DOCKER_REGISTRY }}
                    redhat-registry-user: ${{ secrets.REDHAT_DEVELOPER_USER }}
                    redhat-registry-password: ${{ secrets.REDHAT_DEVELOPER_PASSWORD }}

            -   uses: zowe-actions/shared-actions/docker-build-local@main
                with:
                    build-arg-list: ${{ matrix.BUILD_ARG_LIST }}
                timeout-minutes: 5

    build-s390x:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                service: [ gateway-service, discovery-service, api-catalog-services, caching-service ]
                os: [ ubuntu, ubi ]
                include:
                    -   os: ubuntu
                        BUILD_ARG_LIST: ZOWE_BASE_IMAGE=latest-ubuntu
                    -   os: ubi
                        BUILD_ARG_LIST: ZOWE_BASE_IMAGE=latest-ubi
        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8
            -   name: Grant execute permission for gradlew
                run: chmod +x gradlew
            -   name: Cache Gradle packages
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle001-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle001-
            -   name: Cache Node.js modules
                uses: actions/cache@v2
                with:
                    path: |
                        ~/.npm
                    key: ${{ runner.OS }}-node001-${{ hashFiles('**/package-lock.json, **/package.json') }}
                    restore-keys: |
                        ${{ runner.OS }}-node001-

            -   uses: zowe-actions/shared-actions/envvars-global@main

            -   uses: zowe-actions/shared-actions/prepare-workflow@main

            -   uses: zowe-actions/shared-actions/docker-prepare@main
                with:
                    registry-user: ${{ secrets.ARTIFACTORY_X_USERNAME }}
                    registry-password: ${{ secrets.ARTIFACTORY_X_PASSWORD }}
                    release: true
                    base-directory: ${{ env.IMAGE_BASE_DIR }}/${{ matrix.service }}
                    image-name: ${{ matrix.service }}
                    linux-distro: ${{ matrix.os }}
                    cpu-arch: s390x

            -   uses: zowe-actions/shared-actions/docker-build-zlinux@main
                with:
                    zlinux-host: ${{ secrets.ZLINUX_HOST }}
                    zlinux-ssh-user: ${{ secrets.ZLINUX_SSH_USER }}
                    zlinux-ssh-key: ${{ secrets.ZLINUX_SSH_KEY }}
                    zlinux-ssh-passphrase: ${{ secrets.ZLINUX_SSH_PASSPHRASE }}
                    build-arg-list: ${{ matrix.BUILD_ARG_LIST }}
                    ### Only for UBI
                    redhat-registry: ${{ env.DEFAULT_REDHAT_DOCKER_REGISTRY }}
                    redhat-registry-user: ${{ secrets.REDHAT_DEVELOPER_USER }}
                    redhat-registry-password: ${{ secrets.REDHAT_DEVELOPER_PASSWORD }}
                timeout-minutes: 10

    define-manifests:
        needs:
            - build-amd64
            - build-s390x
        strategy:
            matrix:
                service: [ gateway-service, discovery-service, api-catalog-services, caching-service ]
                os: [ ubuntu, ubi ]
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
                with:
                    ref: ${{ github.head_ref }}
            -   name: Set up JDK 1.8
                uses: actions/setup-java@v1
                with:
                    java-version: 1.8

            -   uses: zowe-actions/shared-actions/prepare-workflow@main

            -   uses: zowe-actions/shared-actions/docker-prepare@main
                with:
                    registry-user: ${{ secrets.ARTIFACTORY_X_USERNAME }}
                    registry-password: ${{ secrets.ARTIFACTORY_X_PASSWORD }}
                    release: true
                    base-directory: ${{ env.IMAGE_BASE_DIR }}/${{ matrix.service }}
                    image-name: ${{ matrix.service }}
                    linux-distro: ${{ matrix.os }}

            -   uses: zowe-actions/shared-actions/docker-manifest@main
                with:
                    linux-distro: ${{ matrix.os }}
                    cpu-arch-list: "amd64 s390x"
                timeout-minutes: 2
