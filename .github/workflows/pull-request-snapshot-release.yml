# This workflow will release project with Gradle

name: Release new version for specific pull request (snapshot)

on:
    workflow_dispatch:
        inputs:
            pull_request:
                description: 'The pull request snapshot that is going to be released (i.e PR-XXXX)'
                required: true

env:
    PR_NUMBER: ${{ github.event.number }}

jobs:
    build:

        runs-on: ubuntu-latest
        timeout-minutes: 30

        steps:
            - uses: ./github/actions/setup

            - name: Cache Node.js modules
              uses: actions/cache@v2
              with:
                  path: |
                      ~/.npm
                      **/node_modules
                  key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json', '**/package.json') }}

            - name: Release with Gradle
              run: |
                  BRANCH_NAME=PR-${{ env.PR_NUMBER }}
                  sed -i '/version=/ s/-SNAPSHOT/-'"$BRANCH_NAME"'-SNAPSHOT/' ./gradle.properties
                  ./gradlew build publishAllVersions -Pzowe.deploy.username=$ARTIFACTORY_USERNAME -Pzowe.deploy.password=$ARTIFACTORY_PASSWORD -Partifactory_user=$ARTIFACTORY_USERNAME -Partifactory_password=$ARTIFACTORY_USERNAME -PpullRequest=$BRANCH_NAME
              env:
                  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
                  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
            - name: Cleanup Gradle Cache
                # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
                # Restoring these files from a GitHub Actions cache might cause problems for future builds.
              run: |
                  rm -f ~/.gradle/caches/modules-2/modules-2.lock
                  rm -f ~/.gradle/caches/modules-2/gc.properties

