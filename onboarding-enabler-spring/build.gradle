buildscript {
    repositories mavenRepositories

    dependencies {
        classpath libs.spring.boot.gradle.plugin
    }
}

publish {
    outputs.upToDateWhen { false }
    doLast {
        println "onboarding-enabler-spring has been successfully published"
    }
}

dependencies {
    implementation project(':onboarding-enabler-java')

    implementation (libs.spring.boot.starter.web){
        exclude group: "org.yaml", module: "snakeyaml"
        exclude group: "org.apache.tomcat.embed", module: "tomcat-embed-el"
        exclude group: "org.apache.tomcat.embed", module: "tomcat-embed-core"
        exclude group: "org.apache.tomcat.embed", module: "tomcat-embed-websocket"
    }
    implementation libs.jackson.core
    implementation libs.jackson.databind
    implementation libs.snakeyaml
    implementation libs.tomcat.embed.el
    implementation libs.tomcat.embed.core
    implementation libs.tomcat.embed.websocket

    implementation libs.spring.aop
    implementation libs.spring.beans
    implementation libs.spring.context
    implementation libs.spring.core
    implementation libs.spring.expression
    implementation libs.spring.web
    implementation libs.spring.webmvc

    compileOnly libs.lombok
    annotationProcessor libs.lombok

    compileOnly libs.javax.inject
    implementation (libs.eureka.client){
        exclude group: "com.thoughtworks.xstream", module: "xstream"
        exclude group: "org.codehaus.jettison", module: "jettison"
    }
    implementation libs.xstream
    implementation libs.jettison

    testImplementation libs.spring.boot.starter.test
    testImplementation libs.json.smart
    testImplementation libs.mockito.core

    annotationProcessor libs.spring.boot.configuration.processor
    testImplementation libs.gson
}

jar {
    archiveBaseName.set("onboarding-enabler-spring")
    archiveFileName = archiveBaseName.get() + ".jar"
}
