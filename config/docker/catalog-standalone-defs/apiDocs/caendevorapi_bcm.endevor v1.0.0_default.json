{
    "swagger": "2.0",
    "info": {
        "description": "RESTful API to request information about available Endevor repositories, perform inventory, element, and package specific actions, and submit Software Control Language (SCL) files.",
        "version": "1.0",
        "title": "Endevor REST API"
    },
    "basePath": "/EndevorService/api/v1",
    "tags": [
        {
            "name": "Element"
        },
        {
            "name": "List"
        },
        {
            "name": "SubmitSCL"
        },
        {
            "name": "Package"
        },
        {
            "name": "Fingerprint"
        },
        {
            "name": "Authentication"
        }
    ],
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        },
        "BearerAuth": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization"
        }
    },
    "security": [
        {
            "BasicAuth": []
        },
        {
            "BearerAuth": []
        }
    ],
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List all datasources' configurations",
                "description": "Retrieve the configuration file content of all the datasources",
                "operationId": "getConfigurations",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "500": {
                        "description": "No predefined datasource"
                    }
                }
            }
        },
        "/{datasource}": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List a datasource's configuration",
                "description": "Retrieve the configuration file content of the datasource",
                "operationId": "getConfiguration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Configuration supplied is not defined or is invalid"
                    }
                }
            }
        },
        "/{datasource}/auth": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authentication token",
                "description": "Get authentication token or verify user/password.",
                "operationId": "getAuth",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation, token generated.",
                        "schema": {
                            "$ref": "#/definitions/authResponse200"
                        }
                    },
                    "206": {
                        "description": "Successful operation, user verified, token not generated.",
                        "schema": {
                            "$ref": "#/definitions/authResponse206"
                        }
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/fingerprints": {
            "put": {
                "tags": [
                    "Fingerprint"
                ],
                "summary": "Validate Fingerprint",
                "description": "Validate Fingerprint",
                "operationId": "validateFingerprint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "json request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validateFingerprint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/validateFingerprintResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List all environments",
                "description": "Extract Environment information from the Master Control Files that satisfies the criteria you specify",
                "operationId": "getEnvironments",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "mapping path option. LOG-logical, PHY-Physical",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "LOG/PHY"
                        ]
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. NOS-do not search, SEA-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NOS/SEA"
                        ]
                    },
                    {
                        "name": "return",
                        "in": "query",
                        "description": "return option. FIR-return first found, ALL-return all",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FIR/ALL"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List environment",
                "description": "Extract Environment information from the Master Control Files that satisfies the criteria you specify",
                "operationId": "getEnvironment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "mapping path option. LOG-logical, PHY-Physical",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "LOG/PHY"
                        ]
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. NOS-do not search, SEA-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NOS/SEA"
                        ]
                    },
                    {
                        "name": "return",
                        "in": "query",
                        "description": "return option. FIR-return first found, ALL-return all",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FIR/ALL"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List all stages",
                "description": "Extract Stage Number information from the Master Control Files that satisfies the criteria you specify",
                "operationId": "getStages",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "mapping path option. LOG-logical, PHY-Physical",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "LOG/PHY"
                        ]
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. NOS-do not search, SEA-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NOS/SEA"
                        ]
                    },
                    {
                        "name": "return",
                        "in": "query",
                        "description": "return option. FIR-return first found, ALL-return all",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FIR/ALL"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List stage",
                "description": "Extract Stage Number information from the Master Control Files that satisfies the criteria you specify",
                "operationId": "getStage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "mapping path option. LOG-logical, PHY-Physical",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "LOG/PHY"
                        ]
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. NOS-do not search, SEA-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NOS/SEA"
                        ]
                    },
                    {
                        "name": "return",
                        "in": "query",
                        "description": "return option. FIR-return first found, ALL-return all",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FIR/ALL"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List all systems",
                "description": "Extract System information from the Master Control Files that satisfies the criteria you specify",
                "operationId": "getSystems",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "mapping path option. LOG-logical, PHY-Physical",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "LOG/PHY"
                        ]
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. NOS-do not search, SEA-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NOS/SEA"
                        ]
                    },
                    {
                        "name": "return",
                        "in": "query",
                        "description": "return option. FIR-return first found, ALL-return all",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FIR/ALL"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List system",
                "description": "Extract System information from the Master Control Files that satisfies the criteria you specify",
                "operationId": "getSystem",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "mapping path option. LOG-logical, PHY-Physical",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "LOG/PHY"
                        ]
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. NOS-do not search, SEA-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NOS/SEA"
                        ]
                    },
                    {
                        "name": "return",
                        "in": "query",
                        "description": "return option. FIR-return first found, ALL-return all",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FIR/ALL"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/subsys": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List all subsystems",
                "description": "Extract Subsystem information from the Master Control Files that satisfies the criteria you specify",
                "operationId": "getSubsystems",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "mapping path option. LOG-logical, PHY-Physical",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "LOG/PHY"
                        ]
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. NOS-do not search, SEA-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NOS/SEA"
                        ]
                    },
                    {
                        "name": "return",
                        "in": "query",
                        "description": "return option. FIR-return first found, ALL-return all",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FIR/ALL"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/subsys/{subsystem}": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List subsystem",
                "description": "Extract Subsystem information from the Master Control Files that satisfies the criteria you specify",
                "operationId": "getSubsystem",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subsystem",
                        "in": "path",
                        "description": "subsystem name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "mapping path option. LOG-logical, PHY-Physical",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "LOG/PHY"
                        ]
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. NOS-do not search, SEA-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NOS/SEA"
                        ]
                    },
                    {
                        "name": "return",
                        "in": "query",
                        "description": "return option. FIR-return first found, ALL-return all",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FIR/ALL"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/subsys/{subsystem}/type/{type}/ele": {
            "get": {
                "tags": [
                    "List",
                    "Element"
                ],
                "summary": "List all elements",
                "description": "Extract Element information from the Master Control Files that satisfies the criteria you specify",
                "operationId": "getElements",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subsystem",
                        "in": "path",
                        "description": "subsystem name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "data",
                        "in": "query",
                        "description": "the level of information returned. ALL-all information, BAS-basic summary, ELE-element summary, COMP-onent summary",
                        "required": false,
                        "type": "string",
                        "default": "ALL",
                        "enum": [
                            "ALL",
                            "BAS",
                            "ELE",
                            "COMP"
                        ]
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "mapping path option. LOG-logical, PHY-Physical",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "LOG/PHY"
                        ]
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. NOS-do not search, SEA-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NOS/SEA"
                        ]
                    },
                    {
                        "name": "return",
                        "in": "query",
                        "description": "return option. FIR-return first found, ALL-return all",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FIR/ALL"
                        ]
                    },
                    {
                        "name": "whereCcidCurrent",
                        "in": "query",
                        "description": "accept values specified against the last action, generate, and last level CCIDs associated with an Element. Accept up to 8 values separated by comma. Only 1 ccid query is accepted per request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidGen",
                        "in": "query",
                        "description": "accept values specified against generate CCID associated with an Element. Accept up to 8 values separated by comma. Only 1 ccid query is accepted per request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidLastAct",
                        "in": "query",
                        "description": "accept values specified against the last action CCID associated with an Element. Accept up to 8 values separated by comma. Only 1 ccid query is accepted per request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidLastlvl",
                        "in": "query",
                        "description": "accept values specified against the last level CCID associated with an Element. Accept up to 8 values separated by comma. Only 1 ccid query is accepted per request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidChange",
                        "in": "query",
                        "description": "filters the results of the list data summary function that is based on the specified ccids. DATA SUMMARY or DATA COMPONENT SUMMARY option needs to be specified. Accept up to 8 values separated by comma. Only 1 ccid query is accepted per request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidRetrieve",
                        "in": "query",
                        "description": "accept values specified against the last retrieve action CCID associated with an Element. Accept up to 8 values separated by comma. Only 1 ccid query is accepted per request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereProcGroup",
                        "in": "query",
                        "description": "accept values specified against the Processor group associated with an Element. Accept up to 8 values separated by comma.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereProcType",
                        "in": "query",
                        "description": "accept values specified against the Processor type associated with an Element. Accept up to 8 values separated by comma.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/subsys/{subsystem}/type/{type}/ele/{printElement}": {
            "get": {
                "tags": [
                    "Element"
                ],
                "summary": "Print element",
                "description": "Prints selected information about Elements",
                "operationId": "printElement",
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subsystem",
                        "in": "path",
                        "description": "subsystem name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "printElement",
                        "in": "path",
                        "description": "element name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "toDDN",
                        "in": "query",
                        "description": "prints to external dataset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "indicate the version number (1-99) of the element",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "indicate the level number (1-99) of the element",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. no-do not search, yes-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "default": "no",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    {
                        "name": "listString",
                        "in": "query",
                        "description": "specifies the 1-8 character text-string used to identify the listing data set to print",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "noHeadings",
                        "in": "query",
                        "description": "specifies if the default printing of a header on each page of output is suppressed or not",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "explode",
                        "in": "query",
                        "description": "specifies if the component info from ACMQ is printed or not",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "print",
                        "in": "query",
                        "description": "specifies the type of data to print out",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "browse/changes/history/summary/master/listing"
                        ]
                    },
                    {
                        "name": "whereCcidCurrent",
                        "in": "query",
                        "description": "tells Endevor to look through the CCID fields in the Master Control File to find a specified CCID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidAll",
                        "in": "query",
                        "description": "tells Endevor to look through the CCID fields in both the Master Control File and the SOURCE DELTA levels to find a specified CCID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidRetrieve",
                        "in": "query",
                        "description": "tells Endevor to use the CCID in the Master Control File RETRIEVE CCID field",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereProcGroup",
                        "in": "query",
                        "description": "select Elements according to a specified Processor group, wildcard supported",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Charset",
                        "in": "header",
                        "description": "Charset used for the printed output.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Text of print result",
                        "schema": {
                            "type": "string",
                            "format": "base64"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/subsys/{subsystem}/type/{type}/ele/{retrieveElement}": {
            "get": {
                "tags": [
                    "Element"
                ],
                "summary": "Retrieve element",
                "description": "Retrieves an existing element",
                "operationId": "retrieveElement",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subsystem",
                        "in": "path",
                        "description": "subsystem name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "retrieveElement",
                        "in": "path",
                        "description": "element name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "toDSN",
                        "in": "query",
                        "description": "destination data set name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "toMember",
                        "in": "query",
                        "description": "destination member name inside the data set",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "toPath",
                        "in": "query",
                        "description": "destination USS path",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "toUSSFile",
                        "in": "query",
                        "description": "destination USS file",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "toFileDescription",
                        "in": "query",
                        "description": "description to be saved as the To DSN/Path in Endevor when retrieving directly via the REST api response.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "oveSign",
                        "in": "query",
                        "description": "specifies if you want to override the Signout of an element or not",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "noSignout",
                        "in": "query",
                        "description": "specifies if you want to perform the action with or without signing the element out",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "ccid",
                        "in": "query",
                        "description": "the CCID you want to use when performing an Element action",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "the comment you want to use when performing an Element action",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "indicate the version number (1-99) of the element",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "indicate the level number (1-99) of the element",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. no-do not search, yes-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "default": "no",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    {
                        "name": "replaceMember",
                        "in": "query",
                        "description": "specifies if you want to replace the member currently in the library with the new element content or not",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "expandIncludes",
                        "in": "query",
                        "description": "specifies if the INCLUDE statements should be expanded in the course of the action or not",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "whereCcidCurrent",
                        "in": "query",
                        "description": "tells Endevor to look through the CCID fields in the Master Control File to find a specified CCID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidAll",
                        "in": "query",
                        "description": "tells Endevor to look through the CCID fields in both the Master Control File and the SOURCE DELTA levels to find a specified CCID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidRetrieve",
                        "in": "query",
                        "description": "tells Endevor to use the CCID in the Master Control File RETRIEVE CCID field",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereProcGroup",
                        "in": "query",
                        "description": "select Elements according to a specified Processor group, wildcard supported",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Charset",
                        "in": "header",
                        "description": "Charset to translate the element into. Not applicable to binary type elements.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Content of the element",
                        "schema": {
                            "type": "string",
                            "format": "binary"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/subsys/{subsystem}/type/{type}/ele/{generateElement}": {
            "put": {
                "tags": [
                    "Element"
                ],
                "summary": "Generate Element",
                "description": "Generate an existing element",
                "operationId": "generateElement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subsystem",
                        "in": "path",
                        "description": "subsystem name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "generateElement",
                        "in": "path",
                        "description": "element name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "json request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generateElement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/subsys/{subsystem}/type/{type}/ele/{moveElement}": {
            "put": {
                "tags": [
                    "Element"
                ],
                "summary": "Move Element",
                "description": "",
                "operationId": "moveElement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subsystem",
                        "in": "path",
                        "description": "subsystem name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "moveElement",
                        "in": "path",
                        "description": "element name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "json request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/moveElement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/subsys/{subsystem}/type/{type}/ele/{signinElement}": {
            "put": {
                "tags": [
                    "Element"
                ],
                "summary": "Signin Element",
                "description": "",
                "operationId": "signinElement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subsystem",
                        "in": "path",
                        "description": "subsystem name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "signinElement",
                        "in": "path",
                        "description": "element name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "json request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/signinElement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/subsys/{subsystem}/type/{type}/ele/{transferElement}": {
            "put": {
                "tags": [
                    "Element"
                ],
                "summary": "Transfer Element",
                "description": "",
                "operationId": "transferElement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subsystem",
                        "in": "path",
                        "description": "subsystem name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "transferElement",
                        "in": "path",
                        "description": "element name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "json request body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transferElement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/subsys/{subsystem}/type/{type}/ele/{element}": {
            "get": {
                "tags": [
                    "List",
                    "Element"
                ],
                "summary": "List element",
                "description": "Extract Element information from the Master Control Files that satisfies the criteria you specify",
                "operationId": "getElement",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subsystem",
                        "in": "path",
                        "description": "subsystem name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "element",
                        "in": "path",
                        "description": "element name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "data",
                        "in": "query",
                        "description": "the level of information returned. ALL-all information, BAS-basic summary, ELE-element summary, COMP-onent summary",
                        "required": false,
                        "type": "string",
                        "default": "ALL",
                        "enum": [
                            "ALL",
                            "BAS",
                            "ELE",
                            "COMP"
                        ]
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "mapping path option. LOG-logical, PHY-Physical",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "LOG/PHY"
                        ]
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. NOS-do not search, SEA-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NOS/SEA"
                        ]
                    },
                    {
                        "name": "return",
                        "in": "query",
                        "description": "return option. FIR-return first found, ALL-return all",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FIR/ALL"
                        ]
                    },
                    {
                        "name": "whereCcidCurrent",
                        "in": "query",
                        "description": "accept values specified against the last action, generate, and last level CCIDs associated with an Element. Accept up to 8 values separated by comma. Only 1 ccid query is accepted per request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidGen",
                        "in": "query",
                        "description": "accept values specified against generate CCID associated with an Element. Accept up to 8 values separated by comma. Only 1 ccid query is accepted per request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidLastAct",
                        "in": "query",
                        "description": "accept values specified against the last action CCID associated with an Element. Accept up to 8 values separated by comma. Only 1 ccid query is accepted per request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidLastlvl",
                        "in": "query",
                        "description": "accept values specified against the last level CCID associated with an Element. Accept up to 8 values separated by comma. Only 1 ccid query is accepted per request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidChange",
                        "in": "query",
                        "description": "filters the results of the list data summary function that is based on the specified ccids. DATA SUMMARY or DATA COMPONENT SUMMARY option needs to be specified. Accept up to 8 values separated by comma. Only 1 ccid query is accepted per request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidRetrieve",
                        "in": "query",
                        "description": "accept values specified against the last retrieve action CCID associated with an Element. Accept up to 8 values separated by comma. Only 1 ccid query is accepted per request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereProcGroup",
                        "in": "query",
                        "description": "accept values specified against the Processor group associated with an Element. Accept up to 8 values separated by comma.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereProcType",
                        "in": "query",
                        "description": "accept values specified against the Processor type associated with an Element. Accept up to 8 values separated by comma.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Element"
                ],
                "summary": "Add element",
                "description": "Creates an element",
                "operationId": "addElement",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subsystem",
                        "in": "path",
                        "description": "subsystem name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "element",
                        "in": "path",
                        "description": "element name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromDSN",
                        "in": "formData",
                        "description": "use this input to provide source data set name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromMember",
                        "in": "formData",
                        "description": "use this input to provide source member name in the data set",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromPath",
                        "in": "formData",
                        "description": "use this input to provide the path of source USS file",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromUSSFile",
                        "in": "formData",
                        "description": "use this input to provide source USS file",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromFile",
                        "in": "formData",
                        "description": "use this input to provide source file",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "fromFileDescription",
                        "in": "formData",
                        "description": "use this input to provide source file description to be saved as the From DSN/Path in Endevor",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "newVersion",
                        "in": "formData",
                        "description": "assign a different version number to the Element",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "oveSign",
                        "in": "formData",
                        "description": "specifies if you want to override the Signout of an element or not",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "ccid",
                        "in": "formData",
                        "description": "the CCID you want to use when performing an Element action",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "the comment you want to use when performing an Element action",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "generate",
                        "in": "formData",
                        "description": "specifies if you want to Generate Element after Add action (default is no)",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    {
                        "name": "procGroup",
                        "in": "formData",
                        "description": "specifies which Processor Group will be used for the Add action (default is the default processor group for this type)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fingerprint",
                        "in": "formData",
                        "description": "the 16-digit hex fingerprint used to check if the Element is up-to-date",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Element"
                ],
                "summary": "Update element",
                "description": "updates an existing element",
                "operationId": "updateElement",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subsystem",
                        "in": "path",
                        "description": "subsystem name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "element",
                        "in": "path",
                        "description": "element name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromDSN",
                        "in": "formData",
                        "description": "use this input to provide source data set name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromMember",
                        "in": "formData",
                        "description": "use this input to provide source member name in the data set",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromPath",
                        "in": "formData",
                        "description": "use this input to provide the path of source USS file",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromUSSFile",
                        "in": "formData",
                        "description": "use this input to provide source USS file",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromFile",
                        "in": "formData",
                        "description": "use this input to provide source file",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "fromFileDescription",
                        "in": "formData",
                        "description": "use this input to provide source file description to be saved as the From DSN/Path in Endevor",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "oveSign",
                        "in": "formData",
                        "description": "specifies if you want to override the Signout of an element or not",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "ccid",
                        "in": "formData",
                        "description": "the CCID you want to use when performing an Element action",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "description": "the comment you want to use when performing an Element action",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "generate",
                        "in": "formData",
                        "description": "specifies if you want to Generate Element after Update action (default is no)",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    {
                        "name": "procGroup",
                        "in": "formData",
                        "description": "specifies which Processor Group will be used for the Update action (default is the current group)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fingerprint",
                        "in": "formData",
                        "description": "the 16-digit hex fingerprint used to check if the Element is up-to-date",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Element"
                ],
                "summary": "Delete element",
                "description": "deletes an existing element",
                "operationId": "deleteElement",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subsystem",
                        "in": "path",
                        "description": "subsystem name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "element",
                        "in": "path",
                        "description": "element name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "oveSign",
                        "in": "query",
                        "description": "specifies if you want to override the Signout of an element or not",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "ccid",
                        "in": "query",
                        "description": "the CCID you want to use when performing an Element action",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "the comment you want to use when performing an Element action",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "onlyComponents",
                        "in": "query",
                        "description": "specifies if both the Element component list and the Element are deleted, or the Element component list only",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "whereCcidCurrent",
                        "in": "query",
                        "description": "tells Endevor to look through the CCID fields in the Master Control File to find a specified CCID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidAll",
                        "in": "query",
                        "description": "tells Endevor to look through the CCID fields in both the Master Control File and the SOURCE DELTA levels to find a specified CCID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidRetrieve",
                        "in": "query",
                        "description": "tells Endevor to use the CCID in the Master Control File RETRIEVE CCID field",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereProcGroup",
                        "in": "query",
                        "description": "select Elements according to a specified Processor group, wildcard supported",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fingerprint",
                        "in": "query",
                        "description": "the 16-digit hex fingerprint used to check if the Element is up-to-date",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/subsys/{subsystem}/type/{type}/ele/{element}/components": {
            "get": {
                "tags": [
                    "Element"
                ],
                "summary": "Print element components",
                "description": "Prints selected component information about Elements",
                "operationId": "printComponents",
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subsystem",
                        "in": "path",
                        "description": "subsystem name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "element",
                        "in": "path",
                        "description": "element name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "toDDN",
                        "in": "query",
                        "description": "prints to external dataset",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "indicate the version number (1-99) of the element",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "indicate the level number (1-99) of the element",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. no-do not search, yes-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "default": "no",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    {
                        "name": "noHeadings",
                        "in": "query",
                        "description": "specifies if the default printing of a header on each page of output is suppressed or not",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    {
                        "name": "explode",
                        "in": "query",
                        "description": "specifies if the component info from ACMQ is printed or not",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "print",
                        "in": "query",
                        "description": "specifies the type of data to print out",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "browse/changes/history/summary"
                        ]
                    },
                    {
                        "name": "whereCcidCurrent",
                        "in": "query",
                        "description": "tells Endevor to look through the CCID fields in the Master Control File to find a specified CCID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidAll",
                        "in": "query",
                        "description": "tells Endevor to look through the CCID fields in both the Master Control File and the SOURCE DELTA levels to find a specified CCID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereCcidRetrieve",
                        "in": "query",
                        "description": "tells Endevor to use the CCID in the Master Control File RETRIEVE CCID field",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "whereProcGroup",
                        "in": "query",
                        "description": "select Elements according to a specified Processor group, wildcard supported",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Accept-Charset",
                        "in": "header",
                        "description": "Charset used for the printed output.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/subsys/{subsystem}/type/{type}/ele/{element}/acm": {
            "get": {
                "tags": [
                    "Element",
                    "List"
                ],
                "summary": "List components used by element",
                "description": "List of components used by the given element",
                "operationId": "inputComponents",
                "produces": [
                    "text/plain"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "subsystem",
                        "in": "path",
                        "description": "subsystem name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "element",
                        "in": "path",
                        "description": "element name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "excCirculars",
                        "in": "query",
                        "description": "Filters the ACM data to exclude components that have a circular relationship to the object of your search",
                        "required": false,
                        "type": "string",
                        "default": "no",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    {
                        "name": "excIndirect",
                        "in": "query",
                        "description": "Filters the ACM data to exclude indirectly related components",
                        "required": false,
                        "type": "string",
                        "default": "no",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    {
                        "name": "excRelated",
                        "in": "query",
                        "description": "Filters the ACM data to exclude related components",
                        "required": false,
                        "type": "string",
                        "default": "no",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/type": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List all types",
                "description": "Extract Type information from the Master Control Files that satisfies the criteria you specify",
                "operationId": "getTypes",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "mapping path option. LOG-logical, PHY-Physical",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "LOG/PHY"
                        ]
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. NOS-do not search, SEA-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NOS/SEA"
                        ]
                    },
                    {
                        "name": "return",
                        "in": "query",
                        "description": "return option. FIR-return first found, ALL-return all",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FIR/ALL"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/type/{type}": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List type",
                "description": "Extract Type information from the Master Control Files that satisfies the criteria you specify",
                "operationId": "getType",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "mapping path option. LOG-logical, PHY-Physical",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "LOG/PHY"
                        ]
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. NOS-do not search, SEA-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NOS/SEA"
                        ]
                    },
                    {
                        "name": "return",
                        "in": "query",
                        "description": "return option. FIR-return first found, ALL-return all",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FIR/ALL"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/type/{type}/pgroup": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List all processor groups",
                "description": "Extract Processor Groups information from the Master Control Files that satisfies the criteria you specify",
                "operationId": "getProcessorGroups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "mapping path option. LOG-logical, PHY-Physical",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "LOG/PHY"
                        ]
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. NOS-do not search, SEA-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NOS/SEA"
                        ]
                    },
                    {
                        "name": "return",
                        "in": "query",
                        "description": "return option. FIR-return first found, ALL-return all",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FIR/ALL"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/env/{environment}/stgnum/{stage}/sys/{system}/type/{type}/pgroup/{pgroup}": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List Processor Group",
                "description": "Extract Processor Group information from the Master Control Files that satisfies the criteria you specify",
                "operationId": "getProcessorGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "environment",
                        "in": "path",
                        "description": "environment name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "stage",
                        "in": "path",
                        "description": "stage number, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "system",
                        "in": "path",
                        "description": "system name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "type name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pgroup",
                        "in": "path",
                        "description": "processor group name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "mapping path option. LOG-logical, PHY-Physical",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "LOG/PHY"
                        ]
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search through the map option. NOS-do not search, SEA-search all the way up the map",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NOS/SEA"
                        ]
                    },
                    {
                        "name": "return",
                        "in": "query",
                        "description": "return option. FIR-return first found, ALL-return all",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "FIR/ALL"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages": {
            "get": {
                "tags": [
                    "Package"
                ],
                "summary": "List all packages",
                "description": "Extract Package information that satisfies the criteria you specify",
                "operationId": "getPackages",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "package status",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "INEDIT",
                                "INAPPROVAL",
                                "APPROVED",
                                "INEXECUTION",
                                "EXECUTED",
                                "COMMITTED",
                                "DENIED",
                                "EXECFAILED"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "package type. S-standard, E-emergency",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "S/E"
                        ]
                    },
                    {
                        "name": "enterprise",
                        "in": "query",
                        "description": "enterprise Package parameter. A-all, E-enterprise, X-exclude",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "A/E/X"
                        ]
                    },
                    {
                        "name": "promotion",
                        "in": "query",
                        "description": "promotion Package parameter. A-all, P-promotion, X-exclude",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "A/P/X"
                        ]
                    },
                    {
                        "name": "targetenv",
                        "in": "query",
                        "description": "promotion Package target environment. A-all, P-promotion",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "A/P"
                        ]
                    },
                    {
                        "name": "targetstg",
                        "in": "query",
                        "description": "promotion Package target stage ID. A-all, P-promotion",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "A/P"
                        ]
                    },
                    {
                        "name": "approver",
                        "in": "query",
                        "description": "package approver ID, wildcard NOT supported",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages/{packagename}": {
            "get": {
                "tags": [
                    "Package"
                ],
                "summary": "List package",
                "description": "Extract Package information that satisfies the criteria you specify",
                "operationId": "getPackage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "package status",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "INEDIT",
                                "INAPPROVAL",
                                "APPROVED",
                                "INEXECUTION",
                                "EXECUTED",
                                "COMMITTED",
                                "DENIED",
                                "EXECFAILED"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "package type. S-standard, E-emergency",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "S/E"
                        ]
                    },
                    {
                        "name": "enterprise",
                        "in": "query",
                        "description": "enterprise Package parameter. A-all, E-enterprise, X-exclude",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "A/E/X"
                        ]
                    },
                    {
                        "name": "promotion",
                        "in": "query",
                        "description": "promotion Package parameter. A-all, P-promotion, X-exclude",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "A/P/X"
                        ]
                    },
                    {
                        "name": "targetenv",
                        "in": "query",
                        "description": "promotion Package target environment. A-all, P-promotion",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "A/P"
                        ]
                    },
                    {
                        "name": "targetstg",
                        "in": "query",
                        "description": "promotion Package target stage ID. A-all, P-promotion",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "A/P"
                        ]
                    },
                    {
                        "name": "approver",
                        "in": "query",
                        "description": "package approver ID, wildcard NOT supported",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "promHist",
                        "in": "query",
                        "description": "include package promotion history",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Package"
                ],
                "summary": "Create package",
                "description": "Creates a Package",
                "operationId": "createPackage",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "allows you to associate a 50-character description with the Package",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "package type. S-standard, E-emergency",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "S/E"
                        ]
                    },
                    {
                        "name": "sharable",
                        "in": "formData",
                        "description": "specifies whether this Package can be edited by more than one person when in In-edit status",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "backout",
                        "in": "formData",
                        "description": "specifies whether you want to have the backout facility available for this Package",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "append",
                        "in": "formData",
                        "description": "specifies whether to append the SCL you are adding to the existing Package SCL or to replace it",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "fromPackage",
                        "in": "formData",
                        "description": "copy the SCL from the Package you specify",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromDSN",
                        "in": "formData",
                        "description": "copy the SCL from the data set you specify",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromMember",
                        "in": "formData",
                        "description": "copy the SCL from the member you specify",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "validateSCL",
                        "in": "formData",
                        "description": "specifies if you want to validate the Package components while updating a Package",
                        "required": false,
                        "type": "string",
                        "default": "yes",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    {
                        "name": "promotion",
                        "in": "formData",
                        "description": "specifies whether this Package is promotion Package",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    {
                        "name": "ewfromdate",
                        "in": "formData",
                        "description": "specifies the beginning of date within which the package can be executed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ewfromtime",
                        "in": "formData",
                        "description": "specifies the beginning of time within which the package can be executed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ewtodate",
                        "in": "formData",
                        "description": "specifies the end of date within which the package can be executed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ewtotime",
                        "in": "formData",
                        "description": "specifies the end of time within which the package can be executed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sclfile",
                        "in": "formData",
                        "description": "use this input to provide the SCL into the Package",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "notesfile",
                        "in": "formData",
                        "description": "use this input to add remarks to the Package definition",
                        "required": false,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Package"
                ],
                "summary": "Update package",
                "description": "Updates an existing Package or create a new one if it does not exists",
                "operationId": "updatePackage",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "allows you to associate a 50-character description with the Package",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "description": "package type. S-standard, E-emergency",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "S/E"
                        ]
                    },
                    {
                        "name": "sharable",
                        "in": "formData",
                        "description": "specifies whether this Package can be edited by more than one person when in In-edit status",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "backout",
                        "in": "formData",
                        "description": "specifies whether you want to have the backout facility available for this Package",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "append",
                        "in": "formData",
                        "description": "specifies whether to append the SCL you are adding to the existing Package SCL or to replace it",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes/no"
                        ]
                    },
                    {
                        "name": "fromPackage",
                        "in": "formData",
                        "description": "copy the SCL from the Package you specify",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromDSN",
                        "in": "formData",
                        "description": "copy the SCL from the data set you specify",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromMember",
                        "in": "formData",
                        "description": "copy the SCL from the member you specify",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "validateSCL",
                        "in": "formData",
                        "description": "specifies if you want to validate the Package components while updating a Package",
                        "required": false,
                        "type": "string",
                        "default": "yes",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    {
                        "name": "promotion",
                        "in": "formData",
                        "description": "specifies whether this Package is promotion Package",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "yes",
                            "no"
                        ]
                    },
                    {
                        "name": "ewfromdate",
                        "in": "formData",
                        "description": "specifies the beginning of date within which the package can be executed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ewfromtime",
                        "in": "formData",
                        "description": "specifies the beginning of time within which the package can be executed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ewtodate",
                        "in": "formData",
                        "description": "specifies the end of date within which the package can be executed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ewtotime",
                        "in": "formData",
                        "description": "specifies the end of time within which the package can be executed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sclfile",
                        "in": "formData",
                        "description": "use this input to provide the SCL into the Package you are updating",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "notesfile",
                        "in": "formData",
                        "description": "use this input to add remarks to the Package definition",
                        "required": false,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Package"
                ],
                "summary": "Delete package",
                "description": "delete packages",
                "operationId": "deletePackage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "package status",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "ALLSTATE",
                                "INEDIT",
                                "INAPPROVAL",
                                "APPROVED",
                                "INEXECUTION",
                                "EXECUTED",
                                "EXECFAILED",
                                "COMMITTED",
                                "DENIED"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "olderthan",
                        "in": "query",
                        "description": "allows you to specify the minimum age of the Package",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/directory": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List Directories",
                "description": "The List Directory request allows you to build a directory list of members in a dataset, a list of CSECT for one or more members of a load library and a list of files and folders in an USS directory.",
                "operationId": "getDirectories",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ddname",
                        "in": "query",
                        "description": "File or DD name where member(s) reside. You must specify ddname, dsname or path query.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dsname",
                        "in": "query",
                        "description": "Data set name where member(s) reside. You must specify either ddname, dsname or path query.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "query",
                        "description": "USS path that wants to be listed. You must specify either ddname, dsname or path query.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "memName",
                        "in": "query",
                        "description": "Member name. Wildcarding is permitted. Only permitted with the ddname and dsname queries.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "thruMem",
                        "in": "query",
                        "description": "Through member name. Wildcarding is permitted. Only permitted when memName is defined and with the ddname and dsname queries",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "csect",
                        "in": "query",
                        "description": "Request CSECT flag. Only permitted with the ddname and dsname queries",
                        "required": false,
                        "type": "string",
                        "default": "NO",
                        "enum": [
                            "YES",
                            "NO"
                        ]
                    },
                    {
                        "name": "file",
                        "in": "query",
                        "description": "File name. Wildcarding is permitted. Only permitted with the path query.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "thruFile",
                        "in": "query",
                        "description": "Through file name. Wildcarding is permitted. Only permitted when file is defined and with the path query.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subdirectories",
                        "in": "query",
                        "description": "Request subdirectories flag. Only permitted with the path query.",
                        "required": false,
                        "type": "string",
                        "default": "NO",
                        "enum": [
                            "YES",
                            "NO"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Configuration supplied is not defined or is invalid"
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages/{packagename}/Approve": {
            "put": {
                "tags": [
                    "Package"
                ],
                "summary": "Approve package",
                "description": "approve a package",
                "operationId": "approvePackage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "provides JSON with note1/note2/note3/../note8 parameters specifying lines in notes",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/notesPackageJson"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages/{packagename}/Backin": {
            "put": {
                "tags": [
                    "Package"
                ],
                "summary": "Backin package",
                "description": "backin a package",
                "operationId": "backinPackage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "statement",
                        "in": "query",
                        "description": "specifies the SCL statement number for the Element action",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "element",
                        "in": "query",
                        "description": "specifies the element name for the Element action",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages/{packagename}/Backout": {
            "put": {
                "tags": [
                    "Package"
                ],
                "summary": "Backout package",
                "description": "backout a package after it has been executed",
                "operationId": "backoutPackage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "statement",
                        "in": "query",
                        "description": "specifies the SCL statement number for the Element action",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "element",
                        "in": "query",
                        "description": "specifies the element name for the Element action",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages/{packagename}/Cast": {
            "put": {
                "tags": [
                    "Package"
                ],
                "summary": "Cast package",
                "description": "prepares the Package for review and subsequent execution",
                "operationId": "castPackage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "provides JSON request body with parameters",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/castPackage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages/{packagename}/Commit": {
            "put": {
                "tags": [
                    "Package"
                ],
                "summary": "Commit package",
                "description": "removes all backout/backin data while retaining Package event information",
                "operationId": "commitPackage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "olderthan",
                        "in": "query",
                        "description": "allows you to specify the minimum age of the Package",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "delete-promotion-history",
                        "in": "query",
                        "description": "specifies if you want to delete all the promotion history associated with previous versions of the Package",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages/{packagename}/Deny": {
            "put": {
                "tags": [
                    "Package"
                ],
                "summary": "Deny package",
                "description": "deny a package",
                "operationId": "denyPackage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "provides JSON with note1/note2/note3/../note8 parameters specifying lines in notes",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/notesPackageJson"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages/{packagename}/Execute": {
            "put": {
                "tags": [
                    "Package"
                ],
                "summary": "Execute package",
                "description": "executes a package",
                "operationId": "executePackage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "package status",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "APPROVED",
                                "EXECFAILED"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "ewfromdate",
                        "in": "query",
                        "description": "specifies the beginning of date within which the package can be executed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ewfromtime",
                        "in": "query",
                        "description": "specifies the beginning of time within which the package can be executed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ewtodate",
                        "in": "query",
                        "description": "specifies the end of date within which the package can be executed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ewtotime",
                        "in": "query",
                        "description": "specifies the end of time within which the package can be executed",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages/{packagename}/Reset": {
            "put": {
                "tags": [
                    "Package"
                ],
                "summary": "Reset package",
                "description": "set the status of a Package back to In-edit",
                "operationId": "resetPackage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "retain",
                        "in": "query",
                        "description": "retain promotion history",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages/{packagename}/Ship": {
            "put": {
                "tags": [
                    "Package"
                ],
                "summary": "Ship package",
                "description": "ship a Package to a remote site",
                "operationId": "shipPackage",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "description": "name of the remote site",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "option",
                        "in": "query",
                        "description": "specifies whether you want to ship output members, or backout members",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "OUTPUT/BACKOUT"
                        ]
                    },
                    {
                        "name": "prefix",
                        "in": "query",
                        "description": "specifies the data set name prefix to be used in the XCOM or CONNECT:DIRECT transmission methods",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            },
            "get": {
                "tags": [
                    "Package"
                ],
                "summary": "List package shipment status",
                "description": "Get package ship report.",
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages/{packagename}/SCL": {
            "get": {
                "tags": [
                    "Package"
                ],
                "summary": "List package SCL",
                "description": "Get the existing SCLs in a specified Package.",
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages/{packagename}/Action": {
            "get": {
                "tags": [
                    "Package"
                ],
                "summary": "List package actions",
                "description": "Lists the actions that are associated with the specified Package.",
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages/{packagename}/Approver": {
            "get": {
                "tags": [
                    "Package"
                ],
                "summary": "List package approver group",
                "description": "This action lists the Package approver group information in a specified Package.",
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/listResponse200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/packages/{packagename}/Submit": {
            "put": {
                "tags": [
                    "Package"
                ],
                "summary": "Submit package",
                "description": "submits a package",
                "operationId": "submitPackage",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "packagename",
                        "in": "path",
                        "description": "package name, wildcard NOT supported",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sclfile",
                        "in": "formData",
                        "description": "use this input to provide the SCL into the Package",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "fromDSN",
                        "in": "formData",
                        "description": "copy the SCL from the data set you specify",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fromMember",
                        "in": "formData",
                        "description": "copy the SCL from the member you specify",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "toCA7",
                        "in": "formData",
                        "description": "submit package to CA7",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "toDDName",
                        "in": "formData",
                        "description": "submit package according to a DDName specified in the starter task",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": "package status",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "APPROVED",
                            "EXECFAILED"
                        ]
                    },
                    {
                        "name": "multStreams",
                        "in": "formData",
                        "description": "specifes if you want to submit a separate, unique job for each package or not",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "incrJobName",
                        "in": "formData",
                        "description": "specifies if you want to increases the last character in the jobcard you provide or not",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "jclProc",
                        "in": "formData",
                        "description": "the name of the JCL procedure that you want to invoke",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "CA7depJob",
                        "in": "formData",
                        "description": "Specifies a single predecessor job which must complete while demanded job is waiting in the CA7 scheduler",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/scl": {
            "post": {
                "tags": [
                    "SubmitSCL"
                ],
                "summary": "Submit SCL",
                "description": "Submits a SCL file to be executed",
                "operationId": "scl",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sclString",
                        "in": "formData",
                        "description": "the SCL string to be submitted",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sclFile",
                        "in": "formData",
                        "description": "the SCL to be submitted, provided via file upload; supports multiple SCL statements",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "submitType",
                        "in": "formData",
                        "description": "the category of Endevor SCL",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "list",
                            "element",
                            "package",
                            "admin",
                            "ship",
                            "addUpdRtv"
                        ]
                    },
                    {
                        "name": "fromLocalFile",
                        "in": "formData",
                        "description": "use this input to provide source file required by SCL",
                        "required": false,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/config/defaults": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List defaults table",
                "description": "Returns values specified in the fixed part of the currently active C1DEFLTS table.",
                "operationId": "getDefaults",
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/config/dialog": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List ISPF dialog options",
                "description": "Returns options defined in the currently active ISPF Dialog Options table",
                "operationId": "getDialogOptions",
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/config/features": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List optional feature table",
                "description": "Returns values specified in the currently active optional features table.",
                "operationId": "getOptionalFeatures",
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/config/symbols": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List site symbols",
                "description": "Returns site symbols defined in the currently active ESYMBOLS table.",
                "operationId": "getSiteSymbols",
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        },
        "/{datasource}/config/typeseq": {
            "get": {
                "tags": [
                    "List"
                ],
                "summary": "List type sequence",
                "description": "Returns type sequence definition as defined in the Type Sequence parmlib member (TYPESEQMBR).",
                "operationId": "getTypeSeq",
                "parameters": [
                    {
                        "name": "datasource",
                        "in": "path",
                        "description": "datasource name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/response200"
                        }
                    },
                    "400": {
                        "description": "Bad request. Please refer to the returned messages",
                        "schema": {
                            "$ref": "#/definitions/response400"
                        }
                    },
                    "500": {
                        "description": "Internal Server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "castPackage": {
            "type": "object",
            "properties": {
                "backout": {
                    "type": "string",
                    "description": "Specifies whether the backout facility is available for this Package.",
                    "default": "yes",
                    "enum": [
                        "yes",
                        "no"
                    ]
                },
                "validate-components": {
                    "type": "string",
                    "description": "Specifies whether component validation is to be performed.",
                    "enum": [
                        "yes/no/warn"
                    ]
                },
                "ewfromdate": {
                    "type": "string",
                    "description": "Specifies the beginning of time within which the package can be executed."
                },
                "ewfromtime": {
                    "type": "string",
                    "description": "Specifies the beginning of time within which the package can be executed."
                },
                "ewtodate": {
                    "type": "string",
                    "description": "Specifies the end of date within which the package can be executed."
                },
                "ewtotime": {
                    "type": "string",
                    "description": "Specifies the end of time within which the package can be executed."
                },
                "notes1": {
                    "type": "string",
                    "description": "Specifies 1st note."
                },
                "notes2": {
                    "type": "string",
                    "description": "Specifies 2nd note."
                },
                "notes3": {
                    "type": "string",
                    "description": "Specifies 3rd note."
                },
                "notes4": {
                    "type": "string",
                    "description": "Specifies 4th note."
                },
                "notes5": {
                    "type": "string",
                    "description": "Specifies 5th note."
                },
                "notes6": {
                    "type": "string",
                    "description": "Specifies 6th note."
                },
                "notes7": {
                    "type": "string",
                    "description": "Specifies 7th note."
                },
                "notes8": {
                    "type": "string",
                    "description": "Specifies 8th note."
                }
            }
        },
        "notesPackageJson": {
            "type": "object",
            "properties": {
                "notes1": {
                    "type": "string",
                    "description": "Specifies 1st note."
                },
                "notes2": {
                    "type": "string",
                    "description": "Specifies 2nd note."
                },
                "notes3": {
                    "type": "string",
                    "description": "Specifies 3rd note."
                },
                "notes4": {
                    "type": "string",
                    "description": "Specifies 4th note."
                },
                "notes5": {
                    "type": "string",
                    "description": "Specifies 5th note."
                },
                "notes6": {
                    "type": "string",
                    "description": "Specifies 6th note."
                },
                "notes7": {
                    "type": "string",
                    "description": "Specifies 7th note."
                },
                "notes8": {
                    "type": "string",
                    "description": "Specifies 8th note."
                }
            }
        },
        "generateElement": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Use \"generate\" for generate element action",
                    "example": "generate"
                },
                "ccid": {
                    "type": "string",
                    "description": "The CCID you want to use when performing an Element action."
                },
                "comment": {
                    "type": "string",
                    "description": "The comment you want to use when performing an Element action"
                },
                "search": {
                    "type": "string",
                    "description": "Search through the map option",
                    "enum": [
                        "yes/no"
                    ]
                },
                "oveSign": {
                    "type": "string",
                    "description": "Specifies if you want to override the Signout of an element or not",
                    "enum": [
                        "yes/no"
                    ]
                },
                "copyBack": {
                    "type": "string",
                    "description": "Specifies if you want to copy the current level of the Element back to the FROM Stage",
                    "enum": [
                        "yes/no"
                    ]
                },
                "noSource": {
                    "type": "string",
                    "description": "Specifies if you want to have source-less Element",
                    "enum": [
                        "yes/no"
                    ]
                },
                "procGroup": {
                    "type": "string",
                    "description": "The processor group you would like to use"
                },
                "whereProcGroup": {
                    "type": "string",
                    "description": "Select Elements according to a specified Processor group, wildcard supported"
                },
                "whereCcidCurrent": {
                    "type": "string",
                    "description": "Tells Endevor to look through the CCID fields in the Master Control File to find a specified CCID"
                },
                "whereCcidAll": {
                    "type": "string",
                    "description": "Tells Endevor to look through the CCID fields in both the Master Control File and the SOURCE DELTA levels to find a specified CCID"
                },
                "whereCcidRetrieve": {
                    "type": "string",
                    "description": "Tells Endevor to use the CCID in the Master Control File RETRIEVE CCID field"
                }
            }
        },
        "moveElement": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Use \"move\" for move element action",
                    "example": "move"
                },
                "ccid": {
                    "type": "string",
                    "description": "The CCID you want to use when performing an Element action."
                },
                "comment": {
                    "type": "string",
                    "description": "The comment you want to use when performing an Element action"
                },
                "sync": {
                    "type": "string",
                    "description": "Specifies if you want to synchronize source and current level of the Elements",
                    "enum": [
                        "yes/no"
                    ]
                },
                "withHistory": {
                    "type": "string",
                    "description": "Specifies if you want to preserve the change history of the Elements",
                    "enum": [
                        "yes/no"
                    ]
                },
                "bypassElementDelete": {
                    "type": "string",
                    "description": "Specifies if you want to retain the Elements in the source Stage after successfully completing this action",
                    "enum": [
                        "yes/no"
                    ]
                },
                "retainSignOut": {
                    "type": "string",
                    "description": "Specifies if you want to retain the source location signouts for all Elements at the target location",
                    "enum": [
                        "yes/no"
                    ]
                },
                "signOutTo": {
                    "type": "string",
                    "description": "Specifies if you want to sign all Elements out to the specified user ID at the target Stage"
                },
                "jump": {
                    "type": "string",
                    "description": "Specifies if you want to move Elements across Environments",
                    "enum": [
                        "yes/no"
                    ]
                },
                "whereProcGroup": {
                    "type": "string",
                    "description": "Select Elements according to a specified Processor group, wildcard supported"
                },
                "whereCcidCurrent": {
                    "type": "string",
                    "description": "Tells Endevor to look through the CCID fields in the Master Control File to find a specified CCID"
                },
                "whereCcidAll": {
                    "type": "string",
                    "description": "Tells Endevor to look through the CCID fields in both the Master Control File and the SOURCE DELTA levels to find a specified CCID"
                },
                "whereCcidRetrieve": {
                    "type": "string",
                    "description": "Tells Endevor to use the CCID in the Master Control File RETRIEVE CCID field"
                }
            }
        },
        "signinElement": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Use \"signin\" for signin element action",
                    "example": "signin"
                },
                "ccid": {
                    "type": "string",
                    "description": "The CCID you want to use when performing an Element action."
                },
                "comment": {
                    "type": "string",
                    "description": "The comment you want to use when performing an Element action"
                },
                "search": {
                    "type": "string",
                    "description": "Search through the map option",
                    "enum": [
                        "yes/no"
                    ]
                },
                "oveSign": {
                    "type": "string",
                    "description": "Specifies if you want to override the Signout of an element or not",
                    "enum": [
                        "yes/no"
                    ]
                },
                "signOutTo": {
                    "type": "string",
                    "description": "Specifies if you want to sign all Elements out to the specified user ID at the target Stage"
                },
                "whereProcGroup": {
                    "type": "string",
                    "description": "Select Elements according to a specified Processor group, wildcard supported"
                },
                "whereCcidCurrent": {
                    "type": "string",
                    "description": "Tells Endevor to look through the CCID fields in the Master Control File to find a specified CCID"
                },
                "whereCcidAll": {
                    "type": "string",
                    "description": "Tells Endevor to look through the CCID fields in both the Master Control File and the SOURCE DELTA levels to find a specified CCID"
                },
                "whereCcidRetrieve": {
                    "type": "string",
                    "description": "Tells Endevor to use the CCID in the Master Control File RETRIEVE CCID field"
                }
            }
        },
        "transferElement": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Use \"transfer\" for transfer element action",
                    "example": "transfer"
                },
                "ccid": {
                    "type": "string",
                    "description": "The CCID you want to use when performing an Element action."
                },
                "comment": {
                    "type": "string",
                    "description": "The comment you want to use when performing an Element action"
                },
                "toEnvironment": {
                    "type": "string",
                    "description": "Target environment name"
                },
                "toStageNum": {
                    "type": "string",
                    "description": "Target stage number"
                },
                "toSystem": {
                    "type": "string",
                    "description": "Target system name"
                },
                "toSubsystem": {
                    "type": "string",
                    "description": "Target subsystem name"
                },
                "toType": {
                    "type": "string",
                    "description": "Target type name"
                },
                "toElement": {
                    "type": "string",
                    "description": "Target element name"
                },
                "version": {
                    "type": "string",
                    "description": "Indicate the version number (1-99) of the element"
                },
                "level": {
                    "type": "string",
                    "description": "Indicate the level number (1-99) of the element"
                },
                "newVersion": {
                    "type": "string",
                    "description": "Assign a different version number to the Element"
                },
                "sync": {
                    "type": "string",
                    "description": "Specifies if you want to synchronize source and current level of the Elements",
                    "enum": [
                        "yes/no"
                    ]
                },
                "withHistory": {
                    "type": "string",
                    "description": "Specifies if you want to preserve the change history of the Elements",
                    "enum": [
                        "yes/no"
                    ]
                },
                "procGroup": {
                    "type": "string",
                    "description": "The processor group you would like to use"
                },
                "ignoreGenerateFailed": {
                    "type": "string",
                    "description": "Process the request regardless of whether the FAILED flag is set for the element",
                    "enum": [
                        "yes/no"
                    ]
                },
                "bypassElementDelete": {
                    "type": "string",
                    "description": "Specifies if you want to retain the Elements in the source Stage after successfully completing this action",
                    "enum": [
                        "yes/no"
                    ]
                },
                "bypassDeleteProc": {
                    "type": "string",
                    "description": "Specifies to bypasses the execution of the delete processor",
                    "enum": [
                        "yes/no"
                    ]
                },
                "bypassGenerateProc": {
                    "type": "string",
                    "description": "Specifies to bypasses the execution of the generate or move processor",
                    "enum": [
                        "yes/no"
                    ]
                },
                "retainSignOut": {
                    "type": "string",
                    "description": "Specifies if you want to retain the source location signouts for all Elements at the target location",
                    "enum": [
                        "yes/no"
                    ]
                },
                "signOutTo": {
                    "type": "string",
                    "description": "Specifies if you want to sign all Elements out to the specified user ID at the target Stage"
                },
                "jump": {
                    "type": "string",
                    "description": "Specifies if you want to move Elements across Environments",
                    "enum": [
                        "yes/no"
                    ]
                },
                "whereProcGroup": {
                    "type": "string",
                    "description": "Select Elements according to a specified Processor group, wildcard supported"
                },
                "whereCcidCurrent": {
                    "type": "string",
                    "description": "Tells Endevor to look through the CCID fields in the Master Control File to find a specified CCID"
                },
                "whereCcidAll": {
                    "type": "string",
                    "description": "Tells Endevor to look through the CCID fields in both the Master Control File and the SOURCE DELTA levels to find a specified CCID"
                },
                "whereCcidRetrieve": {
                    "type": "string",
                    "description": "Tells Endevor to use the CCID in the Master Control File RETRIEVE CCID field"
                }
            }
        },
        "validateFingerprint": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Use \"validate\" for validate fingerprint action",
                    "example": "validate"
                },
                "fingerprints": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "elmName": {
                                "description": "element real name",
                                "type": "string"
                            },
                            "envName": {
                                "description": "environment name",
                                "type": "string"
                            },
                            "stgNum": {
                                "description": "stage number",
                                "type": "string"
                            },
                            "sysName": {
                                "description": "system name",
                                "type": "string"
                            },
                            "sbsName": {
                                "description": "subsystem name",
                                "type": "string"
                            },
                            "typeName": {
                                "description": "type name",
                                "type": "string"
                            },
                            "fingerprint": {
                                "description": "the 16-digit hex fingerprint used to check if the Element is up-to-date",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "authResponse200": {
            "type": "object",
            "properties": {
                "returnCode": {
                    "type": "string",
                    "example": "0000"
                },
                "reasonCode": {
                    "type": "string",
                    "example": "0000"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NDc1NTYyOTAsInVzZXJuYW1lIjoidXNlciIsInBhc3N0aWNrZXQiOiJwYXNzIiwiZXhwIjoxNTQ3NTU2ODkwfQ.BR3jJt-NaYCT3LAEVP5eEMohqgDP1EvMWgv1QDAFaYQ"
                },
                "tokenCreatedOn": {
                    "type": "string",
                    "example": "2019/01/15 13:44:50"
                },
                "tokenValidFor": {
                    "type": "string",
                    "example": "10"
                },
                "messages": {
                    "type": "string"
                }
            }
        },
        "authResponse206": {
            "type": "object",
            "properties": {
                "returnCode": {
                    "type": "string",
                    "example": "0008"
                },
                "reasonCode": {
                    "type": "string",
                    "example": "0025"
                },
                "token": {
                    "type": "null"
                },
                "tokenCreatedOn": {
                    "type": "null"
                },
                "tokenValidFor": {
                    "type": "null"
                },
                "messages": {
                    "type": "string",
                    "example": "Token not generated. Passticket Service is not set."
                }
            }
        },
        "validateFingerprintResponse200": {
            "type": "object",
            "properties": {
                "returnCode": {
                    "type": "string",
                    "example": "0000"
                },
                "reasonCode": {
                    "type": "string",
                    "example": "0000"
                },
                "reports": {
                    "type": "object",
                    "properties": {
                        "APIMSGS": {
                            "type": "string",
                            "example": "http://localhost:8080/endevor/reports/0123456789-012345678-APIMSGS"
                        },
                        "C1MSGS1": {
                            "type": "string",
                            "example": "http://localhost:8080/endevor/reports/0123456789-012345678-C1MSGS1"
                        }
                    }
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "changed": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "elmName": {
                                            "description": "element real name",
                                            "type": "string"
                                        },
                                        "fullElmName": {
                                            "description": "long element real name",
                                            "type": "string"
                                        },
                                        "envName": {
                                            "description": "environment name",
                                            "type": "string"
                                        },
                                        "stgNum": {
                                            "description": "stage number",
                                            "type": "string"
                                        },
                                        "sysName": {
                                            "description": "system name",
                                            "type": "string"
                                        },
                                        "sbsName": {
                                            "description": "subsystem name",
                                            "type": "string"
                                        },
                                        "typeName": {
                                            "description": "type name",
                                            "type": "string"
                                        },
                                        "fingerprint": {
                                            "description": "the 16-digit hex fingerprint used to check if the Element is up-to-date",
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "notfound": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "elmName": {
                                            "description": "element real name",
                                            "type": "string"
                                        },
                                        "fullElmName": {
                                            "description": "long element real name",
                                            "type": "string"
                                        },
                                        "envName": {
                                            "description": "environment name",
                                            "type": "string"
                                        },
                                        "stgNum": {
                                            "description": "stage number",
                                            "type": "string"
                                        },
                                        "sysName": {
                                            "description": "system name",
                                            "type": "string"
                                        },
                                        "sbsName": {
                                            "description": "subsystem name",
                                            "type": "string"
                                        },
                                        "typeName": {
                                            "description": "type name",
                                            "type": "string"
                                        },
                                        "fingerprint": {
                                            "description": "the 16-digit hex fingerprint used to check if the Element is up-to-date",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "messages": {
                    "type": "string"
                }
            }
        },
        "listResponse200": {
            "type": "object",
            "properties": {
                "returnCode": {
                    "type": "string",
                    "example": "0000"
                },
                "reasonCode": {
                    "type": "string",
                    "example": "0000"
                },
                "reports": {
                    "type": "object",
                    "properties": {
                        "APIMSGS": {
                            "type": "string",
                            "example": "http://localhost:8080/endevor/reports/0123456789-012345678-APIMSGS"
                        },
                        "C1MSGS1": {
                            "type": "string",
                            "example": "http://localhost:8080/endevor/reports/0123456789-012345678-C1MSGS1"
                        }
                    }
                },
                "data": {
                    "type": "array",
                    "example": [
                        {
                            "fieldName1": "string",
                            "fieldName2": "string"
                        },
                        {
                            "fieldName1": "string",
                            "fieldName2": "string"
                        }
                    ],
                    "items": {
                        "type": "object"
                    }
                },
                "messages": {
                    "type": "string"
                }
            }
        },
        "response200": {
            "type": "object",
            "properties": {
                "returnCode": {
                    "type": "string",
                    "example": "0000"
                },
                "reasonCode": {
                    "type": "string",
                    "example": "0000"
                },
                "reports": {
                    "type": "object",
                    "properties": {
                        "APIMSGS": {
                            "type": "string",
                            "example": "http://localhost:8080/endevor/reports/0123456789-012345678-APIMSGS"
                        },
                        "C1MSGS1": {
                            "type": "string",
                            "example": "http://localhost:8080/endevor/reports/0123456789-012345678-C1MSGS1"
                        }
                    }
                },
                "data": {
                    "type": "object",
                    "example": "null"
                },
                "messages": {
                    "type": "string"
                }
            }
        },
        "response400": {
            "type": "object",
            "properties": {
                "returnCode": {
                    "type": "string",
                    "example": "0012"
                },
                "reasonCode": {
                    "type": "string",
                    "example": "0012"
                },
                "reports": {
                    "type": "object",
                    "properties": {
                        "APIMSGS": {
                            "type": "string",
                            "example": "http://localhost:8080/endevor/reports/0123456789-012345678-APIMSGS"
                        },
                        "C1MSGS1": {
                            "type": "string",
                            "example": "http://localhost:8080/endevor/reports/0123456789-012345678-C1MSGS1"
                        }
                    }
                },
                "data": {
                    "type": "object",
                    "example": "null"
                },
                "messages": {
                    "type": "string",
                    "example": "error message"
                }
            }
        }
    }
}