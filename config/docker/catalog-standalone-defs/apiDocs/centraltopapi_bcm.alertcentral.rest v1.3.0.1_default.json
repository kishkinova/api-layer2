{
    "openapi": "3.0.1",
    "info": {
        "title": "Alert Central - REST API",
        "description": "Press **Authorize** and use the `token` that was generated by the API ML gateway login endpoint\n\nAlert Central REST API",
        "contact": {
            "name": "Broadcom Support Portal",
            "url": "https://support.broadcom.com"
        },
        "license": {
            "name": "Commercial License",
            "url": "https://www.broadcom.com/company/legal/licensing"
        },
        "version": "1.3.0.1",
        "x-product-version": "1.3.0.1"
    },
    "externalDocs": {
        "description": "User documentation",
        "url": "https://techdocs.broadcom.com/us/en/ca-mainframe-software/intelligent-operations/alert-central/1-1/administrating/rest-api-specification.html"
    },
    "servers": [
        {
            "url": "https://developer.mainframe.broadcom.com",
            "description": "Generated server url"
        }
    ],
    "tags": [
        {
            "name": "Log",
            "description": "Log queries."
        },
        {
            "name": "Alert Profile",
            "description": "Querying and Managing Alert Profiles. (*These operations are **private** and should only be used by Broadcom personnel, or on instruction from Broadcom Support.*)"
        },
        {
            "name": "Alert History",
            "description": "List alert changes"
        },
        {
            "name": "UI Support",
            "description": "Operations in support of UI-specific product behavior. (*These operations are **private** and should only be used by Broadcom personnel, or on instruction from Broadcom Support.*)"
        },
        {
            "name": "Notes",
            "description": "Querying and Managing Notes"
        },
        {
            "name": "Alerts",
            "description": "Querying and Managing Alerts"
        },
        {
            "name": "Service Tickets",
            "description": "Service tickets assigned to alerts."
        },
        {
            "name": "XMVS",
            "description": "XMVS queries."
        },
        {
            "name": "Configuration",
            "description": "Product Configuration. (*These operations are **private** and should only be used by Broadcom personnel, or on instruction from Broadcom Support.*)"
        },
        {
            "name": "QuickRef",
            "description": "QuickRef queries."
        },
        {
            "name": "User Management",
            "description": "User, Group, Role, and Permission management."
        }
    ],
    "paths": {
        "/api/v1/users/{userId}": {
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update user",
                "description": "### Overview\n\nUpdate an existing user.\n\n### Constraints\n\nNote that this operation is only valid for user resource entries that are not archived. Referencing an archived user resource for this operation results in a 'Not Found' error response.\n\n### Authorization\n\nRequires the `manage:configuration.global` permission.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "A unique identifier for an user.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "User was updated. Returns the updated user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserOutputForAdministrators"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Archive user",
                "description": "### Overview\n\nArchives an existing user resource.\n\n### Behavior\n\nArchiving a user clears all the properties in the resource except for `userId`, `status`, and `userName`. The user is removed from any groups that he was a member of. All user-specific configuration related to the user is deleted.\n\nFor any active alerts (not closed) that the user is an owner for the ownership is reset.\n\nUser references in closed alerts, alert change history, or notes remain intact for archived users.\n\nAn archived user:\n\n- has no privileges and is never considered an 'authenticated user'\n- can not be made an owner of an alert\n- can not be added as a member of a group\n- can not be further edited in any way\n\nArchiving a user is an irreversible operation. It is possible to define a new user with the same `userName` as long as all other users with the same `userName` are archived.\n\nNote that this operation is only valid for user resource entries that are not archived. Referencing an archived user resource for this operation results in a 'Not Found' error response.\n\n### Authorization\n\nRequires the `manage:configuration.global` permission.\n",
                "operationId": "archiveUser",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "A unique identifier for a user.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "User was archived. Returns the archived user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArchivedUserOutput"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/systems/{systemId}": {
            "put": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Update system definition \ud83d\udd12",
                "description": "Update a system definition.\n\n### Authorization\n\nRequires the `manage:configuration.global` permission.\n### Use \ud83d\udd12\nThis API is designed for UI communication only and can change in future releases.",
                "operationId": "updateSystem",
                "parameters": [
                    {
                        "name": "systemId",
                        "in": "path",
                        "description": "A unique identifier for a system definition.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SystemInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "System definition was updated. Returns the updated system definition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Delete system definition \ud83d\udd12",
                "description": "### Overview\n\nDelete a specific system definition.\n\n### Authorization\n\nRequires the `manage:configuration.global` permission.\n\n### Use \ud83d\udd12\nThis API is designed for UI communication only and can change in future releases.",
                "operationId": "deleteSystem",
                "parameters": [
                    {
                        "name": "systemId",
                        "in": "path",
                        "description": "A unique identifier for a system definition.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "System definition was deleted. No data is returned."
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/groups/{groupId}": {
            "put": {
                "tags": [
                    "User Management"
                ],
                "summary": "Update group",
                "description": "### Overview\n\nUpdate an existing group entry.\n\n### Behavior\n\nIf a user is completely removed from a group (he was a member or manager and now he is neither) then any alerts that are assigned to that group and to that user have their `owningUser` reset.\n\n### Constraints\n\nNote that this operation is only valid for group resource entries that are not archived. Referencing an archived group resource for this operation results in a 'Not Found' error response.\n\n### Authorization\n\nRequires the `update:group.attributes` and/or `update:group.users` permission depending on the requested modifications.",
                "operationId": "updateGroup",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "A unique identifier for a group.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 307
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Group was updated. Returns the updated group.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Archive group",
                "description": "### Overview\n\nArchives an existing group resource.\n\n### Behavior\n\nArchiving a group clears all the properties in the resource except for `groupId`, `status`, `name`, and `description`. Any attached members or managers are also reset along with any associated system values.\n\nFor any active alerts (not closed) that the group is an owner for the ownership is reset.\n\nReferences to the group from closed alerts remain intact for archived groups.\n\nAn archived group:\n\n- can not be assigned any additional alerts, regardless of their state\n- is completely excluded from authorization checks\n- can not be further edited in anyway\n\nArchiving a group is an irreversible operation.\n\nNote that this operation is only valid for group resource entries that are not archived. Referencing an archived group resource for this operation results in a 'Not Found' error response.\n\n### Authorization\n\nRequires the `manage:configuration.global` permission.",
                "operationId": "archiveGroup",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "A unique identifier for a group.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 307
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group was archived. Returns the archived group.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/configuration/routingRules/{routingRuleId}": {
            "put": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Update routing rule \ud83d\udd12",
                "description": "Update a routing rule.\n### Authorization\nRequires the `manage:configuration.global` permission.\n### Use \ud83d\udd12\nThis API is designed for UI communication only and can change in future releases.",
                "operationId": "updateRoutingRules",
                "parameters": [
                    {
                        "name": "routingRuleId",
                        "in": "path",
                        "description": "The unique identifier of the alert routing rule to update.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1007
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoutingRuleInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Routing rule was updated. Returns the updated routing rule.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoutingRuleOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Delete a routing rule \ud83d\udd12",
                "description": "Delete a specific routing rule.\n### Authorization\nRequires the `manage:configuration.global` permission.\n\n### Use \ud83d\udd12\nThis API is designed for UI communication only and can change in future releases.",
                "operationId": "deleteRoutingRule",
                "parameters": [
                    {
                        "name": "routingRuleId",
                        "in": "path",
                        "description": "The unique identifier of the alert routing rule to delete.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "example": 1007
                    }
                ],
                "responses": {
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "The routing rule was deleted. No data is returned."
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/xmvs": {
            "post": {
                "tags": [
                    "XMVS"
                ],
                "summary": "Executes Xmvs commands",
                "description": "### Overview\n\nExecutes Xmvs commands through SYSVIEW on an Alert issuing system.",
                "operationId": "command",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/XmvsInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "410": {
                        "description": "No Xmvs data available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Xmvs data were retrieved. Returns converted Xmvs message.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PrecisionDataframeOutput"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "List users",
                "description": "### Overview\n\nGet list of users defined to the service.\n\n### Authorization\n\nAny authenticated user can use this operation to list all the known users.\n\nIf the authenticated user is an Administrator then the full set of metadata is returned. If the user is not an Administrator only basic information is returned. If the queried user is archived, a subset of the metadata is returned regardless of the user role. (See the response output definitions for details.)",
                "operationId": "listUsers",
                "parameters": [
                    {
                        "name": "archived",
                        "in": "query",
                        "description": "### Overview\n\nGoverns whether archived user entries should also be returned.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Users were retrieved. Returns a list of users.\n\nIf authenticated as a regular user only a limited set of user metadata is returned.\n\nArchived users are included if requested using the `archived` query parameter. Only limited properties are returned for archived user entries.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserOutput"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Create user",
                "description": "Create a new user.\n\n### Overview\n\nCreate a new user.\n\n### Authorization\n\nRequires the `manage:configuration.global` permission.",
                "operationId": "createUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "User was created. Returns the created user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserOutputForAdministrators"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/tickets": {
            "post": {
                "tags": [
                    "Service Tickets"
                ],
                "summary": "Request Service Ticket",
                "description": "Request creation of a service ticket for the specified alert ID.\n### Authorization\nRequires the `create:alert:ticket` permission.",
                "operationId": "requestServiceTicket",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TicketInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "409": {
                        "description": "The request failed because the targeted feature is either disabled or not fully configured.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Service ticket was created. Returns the ticket ID.",
                        "headers": {
                            "Location": {
                                "description": "Identifies the URL for the created ticket object (not yet available).",
                                "style": "simple",
                                "schema": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TicketOutput"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/systems": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "List system definitions \ud83d\udd12",
                "description": "### Overview\n\nList all the system definitions.\n\n### Authorization\n\nRequires the `manage:configuration.global` permission.\n### Use \ud83d\udd12\nThis API is designed for UI communication only and can change in future releases.",
                "operationId": "listSystems",
                "responses": {
                    "200": {
                        "description": "System definitions were retrieved. Returns the list of system definitions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SystemOutput"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Create system definition \ud83d\udd12",
                "description": "Create a new system definition.\n\n### Authorization\n\nRequires the `manage:configuration.global` permission.\n### Use \ud83d\udd12\nThis API is designed for UI communication only and can change in future releases.",
                "operationId": "createSystem",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SystemInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "System definition was created. Returns the created system definition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemOutput"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/simulation/routingRules": {
            "post": {
                "tags": [
                    "UI Support"
                ],
                "summary": "Simulate routing rules \ud83d\udd12",
                "description": "Simulates how the currently enabled routing rules would apply to a particular set of related alert attributes.\nReturns identification of the matching rule or `null` if no rule matched.\n### Authorization\nRequires the `manage:configuration.global` permission.\n### Use \ud83d\udd12\nThis API is designed for UI communication only and can change in future releases.",
                "operationId": "simulateRoutingRules",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoutingRuleSimulationInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Simulation succeeded. Returns identification of the matching rule or `null` if no rule matched.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoutingRuleSimulationOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/session/permissions/alerts": {
            "post": {
                "tags": [
                    "UI Support"
                ],
                "summary": "Get alert permissions \ud83d\udd12",
                "description": "### Overview\n\nThis operation provides information about the privileges a particular session has against a number of alert resources.\n\n### Behavior and Constraints\n\nAny one alert (identified by its `alertId`) can be included in the request only once - specifying any alert multiple times will result in the entire request failing.\n\nAny included `alertId` that does not identify an existing alert is silently ignored during processing and is not included in the output. If any other errors are encountered during processign of the request the whole request fails. (In summary - there is no partial success beyond ignoring bad `alertId` values.)\n\n### Authorization\n\nAny authenticated user can use this operation.\n### Use \ud83d\udd12\nThis API is designed for UI communication only and can change in future releases.",
                "operationId": "permissionsAlerts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Alert permissions were retrieved. Returns the alert permission information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertPermissionOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/groups": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "List groups",
                "description": "### Overview\n\nGet list of defined groups.\n\nIn case of archived groups, only a subset of metadata is returned. (See response output schemas for details.)\n\n### Authorization\n\nAny authenticated user can use this operation to list all the known groups.",
                "operationId": "listGroups",
                "parameters": [
                    {
                        "name": "field",
                        "in": "query",
                        "description": "### Overview\n\nField (attribute) selection criteria.\n\nEnables specifying criteria for inclusion of optional attributes in the response.\n\nSupports the following optional attributes:\n\n- `members` - includes members list\n- `managers` - includes managers list\n- `roSystems` - includes read-only systems\n- `rwSystems` - includes read/write systems\n\nSpecifying an unsupported attribute is silently ignored.\n\n### Syntax\n\n```<field>[,<field>...]```",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "archived",
                        "in": "query",
                        "description": "### Overview\n\nGoverns whether archived group entries should also be returned.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Groups were retrieved. Returns a list of groups.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupOutput"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Create group",
                "description": "### Overview\n\nCreate a new group.\n\n### Authorization\n\nRequires the `create:group` permission.",
                "operationId": "createGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Group was created. Returns the created group.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/configuration/routingRules": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "List routing rules \ud83d\udd12",
                "description": "List all of the existing routing rules.\n### Authorization\nRequires the `manage:configuration.global` permission.\n### Use \ud83d\udd12\nThis API is designed for UI communication only and can change in future releases.",
                "operationId": "listRoutingRules",
                "responses": {
                    "200": {
                        "description": "Routing rules were retrieved. Returns the list of all routing rules.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RoutingRuleOutput"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Create routing rule \ud83d\udd12",
                "description": "Create a new routing rule.\n### Authorization\nRequires the `manage:configuration.global` permission.\n### Use \ud83d\udd12\nThis API is designed for UI communication only and can change in future releases.",
                "operationId": "addRoutingRule",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoutingRuleInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Routing rule was created. Returns the created routing rule.",
                        "headers": {
                            "Location": {
                                "description": "Identifies the URL for the created routing rule resource.",
                                "style": "simple",
                                "schema": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoutingRuleOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/alerts": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "List alerts",
                "description": "### Overview\n\nGets a list of `alert` resources.\n\n### Authorization\n\nAny authenticated session can use this operation but only alerts to which the underlying user has `read:alert` access are included in the output.\n\n### Pagination\n\nPagination is supported through the use (augmentation) of filter values in combination with sorting order. When requesting the \"next page\", the columns used for sorting (implicitly or explicitly) have to be filtered based on the value for that column in the last known item (e.g. on the \"previous page\").\n\nGiven the fact that in general the sorting columns are not unique care needs to be taken to avoid duplicating item within the clients item cache (and/or view model). This should be done by filtering using the unique `alertId` identifier.\n\nThe number of entries returned can be controlled using the `size` parameter.",
                "operationId": "listAlerts",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "### Overview\n\nItem filtering (search) criteria.\n\n### Syntax and Behavior\n\nUses the [RSQL](https://github.com/jirutka/rsql-parser) syntax.\n\nSupports filtering within all top-level alert output object attributes of primitive types and also for `tickets.referenceNumber`.\n\nSupports the default comparison operators: equal to, not equal to, less than, less than or equal to, greater than, greater than or equal to, in, not in.\n\n Supports the custom `=isnull=` operator with a boolean argument that allows filtering for null and non-null values. Null values are considered strictly greater than any non-null value.\n\nLiteral values must match the type of the compared attribute and use valid syntax for that attribute.\n\nFiltering for all the string attributes is case-insensitive.\n\nThe equal and not equal operators support the use of an asterisk `*` as a wildcard. For those operations, a literal asterisk must be specified as `\\*` and a literal backslash must be specified as `\\\\`. Note that an additional level of backslash escaping is necessary within RSQL single-quoted and double-quoted values.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "field",
                        "in": "query",
                        "description": "### Overview\n\nField (attribute) selection criteria.\n\nEnables specifying criteria for inclusion of optional attributes in the response.\n\nSupports the following optional attributes:\n\n- `tickets` - includes ticket information associated with the alert\n\n### Syntax\n\n```\n<field>[,<field>...]\n```",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "### Overview\n\nSpecifies the maximum number of alert entries that should be returned.\n\nThe `X-Total-Count` header identifies the total number of eligible items, taking into account any applied filters.",
                        "required": false,
                        "schema": {
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32",
                            "default": 100000
                        },
                        "example": 100000
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "### Overview\n\nSpecifies sorting criteria.\n\nSupports sorting using all top-level alert object attributes of primitive types and `tickets.referenceNumber`.\n\n### Syntax and Behavior\n\n```\n <field>:asc|desc[,<field>...]\n```\n - Custom attributes are queried using\n\n```\ncustom.<field>:asc|desc[,<field>...]\n```\nIf custom attribute does not correspond to availableattribute, that field will be ignored.\n\nNull values are considered strictly greater than any non-null value.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "alertId:desc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alerts were retrieved. Returns a list of alerts.",
                        "headers": {
                            "X-Total-Count": {
                                "description": "Identifies the total number of available alerts that match the query criteria.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AlertOutput"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Create alert",
                "description": "### Overview\n\nCreate a new alert.\n\n### Attribute Defaults and Constraints\n\n#### System Name\n\nIf the `system` attribute is not provided explicitly as part of the request it is automatically generated using values from a configured subset of the following attributes:\n\n- `cpcName`\n- `sysplexName`\n- `lparName`\n- `zosSystemName`\n- `smfSystemId`\n\nIn neither the `system` attribute is provided nor the set of configured attributes listed above are provided the request will be rejected.\n\n#### Owning Group and User\n\nIf an `owningGroup` value is provided the `system` attribute has to match one of the entries in the group's set of allowed read/write systems.\n\nIf an `owningGroup` value is not provided and no configured alert routing rules set the value, the request will be rejected.\n\nIf an `owningUser` value is provided the corresponding user has to be a member or manager of the `owningGroup` group, regardless of whether provided explicitly or filled in through a configured alert routing rule.\n\n#### Other Routing Attributes\n\nIn addition to the `owningGroup` value mentioned previously the configured routing rules can also set default values for the `ticketGroup` and `severity` values when not provided explicitly.\n\nAdditionally the routing rule can also force automatic creation of an alert ticket. In this case the request will behave as if the `createTicket` query parameter was passed in with a `true` value.\n\n#### Message Id\n\nIf the `messageId` value is not provided the service will try to extract a value from the provided description.\n\n### Behavior\n\nIf the service determines that the alert is a duplicate of an existing alert that is not closed then a new alert is not created. Instead, the request is treated as an update to the existing (base) alert. In addition to updating the original alert attributes the `duplicateCount` attribute is also incremented.\n\nIf automatic creation of a ticket is requested and that step alone fails for any reason the overall operation is still considered a success. The caller can confirm whether a ticket was created by examining the returned resource data.\n\n### Authorization\n\nRequires the `create:alert` permission, including in situations where the duplicate detection forces an update to an existing alert.\n\nIf the creation of a ticket was also requested as part of the operation then the `create:alert:ticket` permission for the alert is required for that step.",
                "operationId": "createAlert",
                "parameters": [
                    {
                        "name": "createTicket",
                        "in": "query",
                        "description": "If set to true and a new alert is successfully created based on the request then a service ticket is also automatically generated for the created alert.\n\nThis option is ignored if ticketing support is not enabled.",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AlertCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "An existing alert was updated due to deduplication rules. Returns the updated alert.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "A new alert was created. Returns the created alert.",
                        "headers": {
                            "Location": {
                                "description": "Identifies the URL for the created alert resource.",
                                "style": "simple",
                                "schema": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertOutput"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Update multiple alerts",
                "description": "### Overview\n\nUpdate a set of existing alerts.\n\n### Behavior and Constraints\n\nAny one alert (identified by its `alertId`) can be included in the request only once - specifying any alert multiple times will result in the entire request failing.\n\nUpdates to individual alerts are handled separately and their processing can fail individually. Behaviors and constraints defined for the `update-alert` operation also apply here when processing the individual updates.\n\nThe response code indicates success (200) if at least one requested change is successfully applied. Other failures that are detected before any processing of the individual requested changes begins (e.g. 400, 401, 503) are used as the request response code. If no requested change was successfully applied due to individual issues encountered during their processing then the overall response code is governed by the following ordered rules:\n\n  1. 500 - if at least one 50x code is part of the set\n  2. 400 - if at least one 40x code is part of the set\n  3. 500 - otherwise\n\nFor success the requestor should examine the individual result codes included in the response body attached to each individual alert for information on the success of each individual update.\n\n### Authorization\n\nRequires the `update:alert.attributes`, `update:alert.group`, and/or `update:alert.owner` permission for each individual alert, depending on the requested modifications.",
                "operationId": "updateMultipleAlerts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Alert Set (update)",
                                "minItems": 1,
                                "type": "array",
                                "description": "Set of alert objects used for bulk update operations.",
                                "example": [
                                    {
                                        "alertId": 603,
                                        "status": "Assigned"
                                    },
                                    {
                                        "alertId": 604,
                                        "status": "Assigned"
                                    }
                                ],
                                "items": {
                                    "$ref": "#/components/schemas/AlertUpdateWithId"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "The request failed because of an internal application error. Also returned in case all partial updates failed with at least one 50x result or an unexpected result. In this case the response follows schema of the bulk update.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information. Also returned in case all partial updates failed with 40x result. In this case the response follows schema of the bulk update.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Alerts were updated (possibly only a subset). Returns results of the bulk update.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AlertBulkUpdateOutput"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/alerts/{alertId}/notes": {
            "get": {
                "tags": [
                    "Notes"
                ],
                "summary": "List alert notes",
                "description": "### Overview\n\nGet a list of alert notes.\n\n### Authorization\n\nRequires the `read:alert` permission for the alert.",
                "operationId": "listAlertNotes",
                "parameters": [
                    {
                        "name": "alertId",
                        "in": "path",
                        "description": "A unique identifier for an `alert`.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "systemNotes",
                        "in": "query",
                        "description": "Default: `false`\n\n### Overview\n\nGoverns whether notes generated by the system are included in the output. If `false` only notes created explicitly by users are included.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alert notes were retrieved. Returns a list of alert notes.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AlertNoteOutput"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Notes"
                ],
                "summary": "Create alert note",
                "description": "### Overview\n\nAdd a new note to an alert.\n\n### Authorization\n\nRequires the create:alert:note permission for the alert.",
                "operationId": "create",
                "parameters": [
                    {
                        "name": "alertId",
                        "in": "path",
                        "description": "A unique identifier for an `alert`.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AlertNoteInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Alert note was created. Returns the created note.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertNoteOutput"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/configuration": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Get global configuration \ud83d\udd12",
                "description": "### Overview\nGets a set of configuration property values identified by the `properties` query parameter.\n### Authorization\nThe level of authorization needed depends on the particular property value request:\n- some are available to anonymous clients\n- some require no authorization but do require an authenticated session\n- some require the `manage:configuration` authorization\n### Use \ud83d\udd12\nThis API is designed for UI communication only and can change in future releases.",
                "operationId": "getGlobalConfiguration",
                "parameters": [
                    {
                        "name": "properties",
                        "in": "query",
                        "description": "### Overview\nSet of configuration properties to retrieve. If not provided or empty, all stored properties (depending on authorization level) are implicitly requested.\n### Format\nThe array can contain any number of specific property paths or root paths. When a root path is specified every property under that root path is included (including the root if it contains a stored value).",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "example": [
                                "service.ticketing.enabled",
                                "ui"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Global configuration properties were retrieved. Returns the set of configuration properties.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigurationPropertiesApiDoc"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Update global configuration \ud83d\udd12",
                "description": "### Overview\nUpdates a set of global configuration properties.\n### Behavior\nIf any input property value in the input property set fails authorization or validation checks or is for some other reason considered bad input the whole request fails.\n### Authorization\nRequires the `manage:configuration` authorization.\n### Use \ud83d\udd12\nThis API is designed for UI communication only and can change in future releases.",
                "operationId": "updateGlobalConfiguration",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfigurationPropertiesApiDoc"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Global configuration properties were updated. No data is returned."
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/alerts/{alertId}": {
            "get": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Get alert",
                "description": "### Overview\n\nGet details of a specific alert.\n\n### Authorization\n\nRequires the `read:alert` permission for the alert.",
                "operationId": "getAlert",
                "parameters": [
                    {
                        "name": "alertId",
                        "in": "path",
                        "description": "A unique identifier for an `alert`.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "field",
                        "in": "query",
                        "description": "### Overview\n\nField (attribute) selection criteria.\n\nEnables specifying criteria for inclusion of optional attributes in the response.\n\nSupports the following optional attributes:\n\n- `tickets` - includes ticket information associated with the alert\n\n### Syntax\n\n```\n<field>[,<field>...]\n```",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alert was retrieved. Returns details of a single alert.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Update alert",
                "description": "### Overview\n\nUpdate an existing alert.\n\nSupports partial update of modifiable alert attributes.\n\n### Behavior and Constraints\n\nNote that the relevant constraints described for the `create-alert` operation also apply to this operation.\n\nIf the `owningGroup` is changed the `owningUser` value is automatically reset, unless that value was also explicitly provided (and it is within the defined constraints).\n\n### Authorization\n\nRequires the `update:alert.attributes`, `update:alert.group`, and/or `update:alert.owner` permission depending on the requested modifications.",
                "operationId": "updateAlert",
                "parameters": [
                    {
                        "name": "alertId",
                        "in": "path",
                        "description": "A unique identifier for an `alert`.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AlertUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Alert was updated. Returns the updated alert.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/alerts/reopen": {
            "patch": {
                "tags": [
                    "Alerts"
                ],
                "summary": "Reopen multiple alerts",
                "description": "### Overview\n\nReopen a set of closed alerts.\n\n### Behavior and Constraints\n\nReopen to individual alerts are handled separately and their processing can fail individually.\n\nThe response code indicates success (200) if at least one requested alert is successfully re-opened. Other failures that are detected before any processing of the individual requested changes begins (e.g. 400, 401, 503) are used as the request response code. If no requested change was successfully applied due to individual issues encountered during their processing then the overall response code is governed by the following ordered rules:\n\n  1. 500 - if at least one 50x code is part of the set\n  2. 400 - if at least one 40x code is part of the set\n  3. 500 - otherwise\n\nFor success the requestor should examine the individual result codes included in the response body attached to each individual alert for information on the success of each individual update.\n\n### Authorization\n\nRequires the `reopen:alert`permission for each individual alert, depending on the requested modifications.",
                "operationId": "reopenMultipleAlerts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AlertReopenInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns result of the bulk reopen, when at least one alert was reopened.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AlertBulkUpdateOutput"
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/session": {
            "get": {
                "tags": [
                    "UI Support"
                ],
                "summary": "Get session information \ud83d\udd12",
                "description": "### Overview\n\nThis operation provides information about the authenticated API session.\n\n### Authorization\n\nAny authenticated user can use this operation.\n### Use \ud83d\udd12\nThis API is designed for UI communication only and can change in future releases.",
                "operationId": "sessionInfo",
                "responses": {
                    "200": {
                        "description": "Session information was retrieved. Returns the session information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionInfoOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/quickref": {
            "get": {
                "tags": [
                    "QuickRef"
                ],
                "summary": "Get QuickRef from external system.",
                "description": "### Overview\n\nGet QuickRef data related to a specific message id.",
                "operationId": "load",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "A QuickRef query.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "QuickRef data were retrieved. Returns converted QuickRef message.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuickRefOutput"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "No QuickRef data available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/quickref/config": {
            "get": {
                "tags": [
                    "QuickRef"
                ],
                "summary": "Retrieves Quickref Configuration.",
                "description": "### Overview\n\nRetreieves Quickref Configuration.\n\nContains list of QuickRef message prefixes.\n\n### Authorization\n\nAny authenticated session can use this operation.",
                "operationId": "getConfig",
                "responses": {
                    "200": {
                        "description": "Quickref config was retrieved. Returns list of QuickRef message prefixes.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuickRefConfigOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/log/{alertId}": {
            "get": {
                "tags": [
                    "Log"
                ],
                "summary": "Get logs from external system.",
                "description": "### Overview\n\nGet logs related to a specific alert from external (mainframe) system.\n\n### Authorization\n\nRequires the `read:alert` permission for the alert.",
                "operationId": "load_1",
                "parameters": [
                    {
                        "name": "alertId",
                        "in": "path",
                        "description": "A unique identifier for an `alert`.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "410": {
                        "description": "No logs available.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Logs were retrieved. Returns log messages of a single alert around it's time of creation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LogOutput"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request could not be fulfilled due to invalid or missing information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        },
        "/api/v1/alerts/{alertId}/changes": {
            "get": {
                "tags": [
                    "Alert History"
                ],
                "summary": "List alert changes",
                "description": "### Overview\n\nGet list of all changes made to a particular alert.\n\nThe API operations that generate an alert change resource entry include:\n\n- Direct update to any of the alert resource attributes\n\n- Addition or removal of a ticket associated with an alert\n\nOther events, asynchronous to API operations, that modify any of the alert-related data mentioned above, also generate an alert change resource entry.\n\n### Authorization\n\nRequires the `read:alert` permission for the alert.",
                "operationId": "getAlertChanges",
                "parameters": [
                    {
                        "name": "alertId",
                        "in": "path",
                        "description": "A unique identifier for an `alert`.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Alert changes were retrieved. Returns a list of alert changes.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlertChangeOutput"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request was not authenticated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of an internal application error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The request failed because the authenticated user did not have the required privileges.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "The request could not be processed due to a temporary service condition. Try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Indicates how long the user agent should wait (in seconds) before making a follow-up request.",
                                "style": "simple",
                                "schema": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiMessage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtBearer": []
                    },
                    {
                        "jwtCookie": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "UserInput": {
                "title": "User (Input).",
                "required": [
                    "role",
                    "userName"
                ],
                "type": "object",
                "properties": {
                    "userName": {
                        "title": "User Name",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Name of an application user.\n\n### Syntax and Constraints\n\nThe value is not case-sensitive and must be unique across all user resource entries that have not been archived.",
                        "example": "dubois01"
                    },
                    "firstName": {
                        "title": "User First Name",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string",
                        "description": "User's first name.",
                        "example": "Alice"
                    },
                    "lastName": {
                        "title": "User Last Name",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string",
                        "description": "User's middle names (if any) and last name.",
                        "example": "Anita Dubois"
                    },
                    "description": {
                        "title": "User Description",
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Description associated with a user. Typically only used for generic service accounts in lieu of First/Last name information.",
                        "example": "Common service account."
                    },
                    "role": {
                        "title": "User Role",
                        "type": "string",
                        "description": "User Role.",
                        "example": "Supervisor",
                        "enum": [
                            "Service",
                            "Administrator",
                            "Supervisor",
                            "User"
                        ]
                    }
                },
                "description": "User account entry used for input operations.\n\nApplies to interactive user accounts - those where the role property is not set to 'Service'.\n\nFirst Name and Last Name are required properties for interactive user accounts."
            },
            "ApiMessage": {
                "title": "API Messages",
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "description": "Set of API messages.",
                        "items": {
                            "$ref": "#/components/schemas/ResponseMessage"
                        }
                    }
                }
            },
            "ResponseMessage": {
                "title": "Message",
                "required": [
                    "messageContent",
                    "messageNumber",
                    "messageType"
                ],
                "type": "object",
                "properties": {
                    "messageType": {
                        "type": "string",
                        "description": "Severity of the problem described by a message.",
                        "example": "WARNING",
                        "enum": [
                            "ERROR",
                            "WARNING",
                            "INFO",
                            "DEBUG",
                            "TRACE"
                        ]
                    },
                    "messageKey": {
                        "type": "string",
                        "description": "Unique message key describing the reason for the message in a machine-readable format enabling localization. It should be a dot-delimited string tld.provider.service[.sub-service].detail.",
                        "example": "org.acme.api.notAuthenticated"
                    },
                    "messageParameters": {
                        "type": "array",
                        "description": "Message parameters. Used for formatting of localized messages in conjunction with the 'messageKey' field.",
                        "items": {
                            "type": "object",
                            "description": "Message parameter. Can be of any type."
                        }
                    },
                    "messageInstanceId": {
                        "type": "string",
                        "description": "Unique ID of the message instance. Useful for locating the message in product logs. The same ID should be printed in the product log output.",
                        "example": "123e4567-e89b-12d3-a456-426655440000"
                    },
                    "messageComponent": {
                        "type": "string",
                        "description": "(For support and developers) Identifies the component that generated the message. Can be a fully qualified Java package or class name.",
                        "example": "org.acme.toolkit.hammers.Ballpeen"
                    },
                    "messageNumber": {
                        "type": "string",
                        "description": "A message number (not including the message level one-letter code) that uniquely identifies the message and can be typically looked up in product documentation.",
                        "example": "PFI0031"
                    },
                    "messageContent": {
                        "type": "string",
                        "description": "Readable message in US English. It should be a proper human-readable sentence."
                    },
                    "messageAction": {
                        "type": "string",
                        "description": "Recommendation of the actions to take in response to the message."
                    },
                    "messageReason": {
                        "type": "string",
                        "description": "Supplements the 'messageContent' field, supplying more information about why the message is present."
                    },
                    "messageSource": {
                        "type": "string",
                        "description": "(For support and developers) Identifies the source service that generated the message.",
                        "example": "production.org.acme:1234:weathersvc"
                    }
                },
                "description": "User-facing API message and related metadata."
            },
            "UserOutputForAdministrators": {
                "title": "User (Output for Administrators).",
                "required": [
                    "description",
                    "firstName",
                    "lastName",
                    "role",
                    "status",
                    "userId",
                    "userName"
                ],
                "type": "object",
                "properties": {
                    "userName": {
                        "title": "User Name",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Name of an application user.\n\n### Syntax and Constraints\n\nThe value is not case-sensitive and must be unique across all user resource entries that have not been archived.",
                        "example": "dubois01"
                    },
                    "firstName": {
                        "title": "User First Name",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string",
                        "description": "User's first name.",
                        "example": "Alice"
                    },
                    "lastName": {
                        "title": "User Last Name",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string",
                        "description": "User's middle names (if any) and last name.",
                        "example": "Anita Dubois"
                    },
                    "description": {
                        "title": "User Description",
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Description associated with a user. Typically only used for generic service accounts in lieu of First/Last name information.",
                        "example": "Common service account."
                    },
                    "userId": {
                        "title": "User ID",
                        "type": "integer",
                        "description": "Unique identifier for a `user`.",
                        "format": "int64",
                        "example": 207
                    },
                    "status": {
                        "title": "User Status",
                        "type": "string",
                        "description": "Identifies the status of the user resource.\n\nAn archived user has limited metadata and can not be selected for any operations. An archived user cannot be un-archived.",
                        "example": "Active",
                        "enum": [
                            "Active",
                            "Archived"
                        ]
                    },
                    "role": {
                        "title": "User Role",
                        "type": "string",
                        "description": "User Role.",
                        "example": "Supervisor",
                        "enum": [
                            "Service",
                            "Administrator",
                            "Supervisor",
                            "User"
                        ]
                    }
                },
                "description": "User account entry used for output operations when authenticated as an Administrator."
            },
            "SystemInput": {
                "title": "System Definition (input)",
                "type": "object",
                "properties": {
                    "cpcName": {
                        "title": "Mainframe CPC Name",
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "Central Processor Complex (CPC) name - referring to the physical collection of hardware that includes main storage, one or more central processors, timers, and channels.",
                        "example": "MF05"
                    },
                    "sysplexName": {
                        "title": "SYSPLEX Name",
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "Mainframe Sysplex Name.\n\n`SYSPLEX` parameter as specified directly in the `COUPLExx` member of `SYS1.PARMLIB`, or indirectly using the `&SYSPLEX` system symbol as set for the `SYSPLEX` parameter in the `LOADxx` member of `SYS1.PARMLIB`.",
                        "example": "PLEX1"
                    },
                    "lparName": {
                        "title": "LPAR Name",
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "Mainframe LPAR name.",
                        "example": "EX31"
                    },
                    "zosSystemName": {
                        "title": "z/OS System Name",
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "z/OS System Name. The value of the `SYSNAME` parameter in the `IEASYMxx` or `IEASYSxx` member of `SYS1.PARMLIB` or its default value if not specified. Refer to the IBM documentation for details.",
                        "example": "EX31"
                    },
                    "smfSystemId": {
                        "title": "SMF System ID",
                        "maxLength": 4,
                        "minLength": 1,
                        "type": "string",
                        "description": "z/OS - SMF System ID.",
                        "example": "MVS1"
                    },
                    "description": {
                        "title": "System Description",
                        "maxLength": 10000,
                        "minLength": 0,
                        "type": "string",
                        "description": "User-provided description of a system that issues alerts.",
                        "example": "Primary production system."
                    }
                },
                "description": "System definition as used for input operations.\n### Constraints and Behavior\n\nThe set of required fields, with the exception of `description`, depends on how the system normalization is currently configured. All the attributes that are enabled in the system normalization configuration have to be included for the request to be valid.",
                "example": {
                    "cpcName": "MF05",
                    "sysplexName": "PLEXC1",
                    "lparName": "EX31",
                    "zosSystemName": "EX31",
                    "smfSystemId": "MVS1",
                    "description": "Primary production system."
                }
            },
            "SystemOutput": {
                "title": "System Definition (output)",
                "required": [
                    "cpcName",
                    "description",
                    "lparName",
                    "smfSystemId",
                    "sysplexName",
                    "systemId",
                    "zosSystemName"
                ],
                "type": "object",
                "properties": {
                    "cpcName": {
                        "title": "Mainframe CPC Name",
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "Central Processor Complex (CPC) name - referring to the physical collection of hardware that includes main storage, one or more central processors, timers, and channels.",
                        "example": "MF05"
                    },
                    "sysplexName": {
                        "title": "SYSPLEX Name",
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "Mainframe Sysplex Name.\n\n`SYSPLEX` parameter as specified directly in the `COUPLExx` member of `SYS1.PARMLIB`, or indirectly using the `&SYSPLEX` system symbol as set for the `SYSPLEX` parameter in the `LOADxx` member of `SYS1.PARMLIB`.",
                        "example": "PLEX1"
                    },
                    "lparName": {
                        "title": "LPAR Name",
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "Mainframe LPAR name.",
                        "example": "EX31"
                    },
                    "zosSystemName": {
                        "title": "z/OS System Name",
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "z/OS System Name. The value of the `SYSNAME` parameter in the `IEASYMxx` or `IEASYSxx` member of `SYS1.PARMLIB` or its default value if not specified. Refer to the IBM documentation for details.",
                        "example": "EX31"
                    },
                    "smfSystemId": {
                        "title": "SMF System ID",
                        "maxLength": 4,
                        "minLength": 1,
                        "type": "string",
                        "description": "z/OS - SMF System ID.",
                        "example": "MVS1"
                    },
                    "description": {
                        "title": "System Description",
                        "maxLength": 10000,
                        "minLength": 0,
                        "type": "string",
                        "description": "User-provided description of a system that issues alerts.",
                        "example": "Primary production system."
                    },
                    "systemId": {
                        "title": "System ID",
                        "type": "integer",
                        "description": "A unique identifier of a system that issues alerts.",
                        "format": "int64",
                        "example": 2007
                    },
                    "autoDiscovered": {
                        "title": "Auto Discovered flag",
                        "type": "boolean",
                        "description": "Boolean flag indicating that system is auto discovered",
                        "example": false
                    }
                },
                "description": "System definition as used in output operations."
            },
            "GroupInput": {
                "required": [
                    "managers",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Group Name",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Name of a user group.\n\n### Syntax and Constraints\n\nThe group name must be unique across all defined groups.",
                        "example": "databases"
                    },
                    "description": {
                        "title": "Group Description",
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional description of a group.",
                        "nullable": true,
                        "example": "Database alert group"
                    },
                    "managers": {
                        "title": "Group Managers",
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Set of group managers.",
                        "example": [
                            207
                        ],
                        "items": {
                            "title": "Group Managers",
                            "type": "integer",
                            "description": "Set of group managers.",
                            "format": "int64"
                        }
                    },
                    "members": {
                        "title": "Group Members",
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Set of group members.",
                        "example": [
                            306,
                            307
                        ],
                        "items": {
                            "title": "Group Members",
                            "type": "integer",
                            "description": "Set of group members.",
                            "format": "int64"
                        }
                    },
                    "rwSystems": {
                        "title": "Group Read/Write Systems",
                        "type": "array",
                        "description": "Set of systems used for correlation with alert system values granting read/write permissions. System names are not case-sensitive.",
                        "example": [
                            "SYS01",
                            "SYS05"
                        ],
                        "items": {
                            "title": "Group Read/Write Systems",
                            "type": "string",
                            "description": "Set of systems used for correlation with alert system values granting read/write permissions. System names are not case-sensitive.",
                            "example": "[\"SYS01\",\"SYS05\"]",
                            "default": "[]"
                        },
                        "default": []
                    },
                    "roSystems": {
                        "title": "Group Read-only Systems",
                        "type": "array",
                        "description": "Set of systems used for correlation with alert system values granting read-only permissions. System names are not case-sensitive.\n Systems that are specified in the sibling rwSystems set implicitly provide read-only permissions. Those systems do not have to be part of this set.",
                        "example": [
                            "SYS02",
                            "SYS07"
                        ],
                        "items": {
                            "title": "Group Read-only Systems",
                            "type": "string",
                            "description": "Set of systems used for correlation with alert system values granting read-only permissions. System names are not case-sensitive.\n Systems that are specified in the sibling rwSystems set implicitly provide read-only permissions. Those systems do not have to be part of this set.",
                            "example": "[\"SYS02\",\"SYS07\"]",
                            "default": "[]"
                        },
                        "default": []
                    },
                    "status": {
                        "title": "Group Status (Input)",
                        "type": "string",
                        "description": "Identifies desired status of the group resource.\n\nA group can be made temporarily disabled.\n\nA disabled group can not be assigned any additional alerts while disabled. All other group behavior and implications remain intact while the group is disabled.",
                        "example": "Active",
                        "default": "Active",
                        "enum": [
                            "Active",
                            "Disabled"
                        ]
                    }
                },
                "description": "User group entry used for input and update operations."
            },
            "GroupOutput": {
                "required": [
                    "managers",
                    "name",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Group Name",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Name of a user group.\n\n### Syntax and Constraints\n\nThe group name must be unique across all defined groups.",
                        "example": "databases"
                    },
                    "description": {
                        "title": "Group Description",
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional description of a group.",
                        "nullable": true,
                        "example": "Database alert group"
                    },
                    "managers": {
                        "title": "Group Managers",
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Set of group managers.",
                        "example": [
                            207
                        ],
                        "items": {
                            "title": "Group Managers",
                            "type": "integer",
                            "description": "Set of group managers.",
                            "format": "int64"
                        }
                    },
                    "members": {
                        "title": "Group Members",
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Set of group members.",
                        "example": [
                            306,
                            307
                        ],
                        "items": {
                            "title": "Group Members",
                            "type": "integer",
                            "description": "Set of group members.",
                            "format": "int64"
                        }
                    },
                    "rwSystems": {
                        "title": "Group Read/Write Systems",
                        "type": "array",
                        "description": "Set of systems used for correlation with alert system values granting read/write permissions. System names are not case-sensitive.",
                        "example": [
                            "SYS01",
                            "SYS05"
                        ],
                        "items": {
                            "title": "Group Read/Write Systems",
                            "type": "string",
                            "description": "Set of systems used for correlation with alert system values granting read/write permissions. System names are not case-sensitive.",
                            "example": "[\"SYS01\",\"SYS05\"]",
                            "default": "[]"
                        },
                        "default": []
                    },
                    "roSystems": {
                        "title": "Group Read-only Systems",
                        "type": "array",
                        "description": "Set of systems used for correlation with alert system values granting read-only permissions. System names are not case-sensitive.\n Systems that are specified in the sibling rwSystems set implicitly provide read-only permissions. Those systems do not have to be part of this set.",
                        "example": [
                            "SYS02",
                            "SYS07"
                        ],
                        "items": {
                            "title": "Group Read-only Systems",
                            "type": "string",
                            "description": "Set of systems used for correlation with alert system values granting read-only permissions. System names are not case-sensitive.\n Systems that are specified in the sibling rwSystems set implicitly provide read-only permissions. Those systems do not have to be part of this set.",
                            "example": "[\"SYS02\",\"SYS07\"]",
                            "default": "[]"
                        },
                        "default": []
                    },
                    "groupId": {
                        "title": "Group ID",
                        "type": "integer",
                        "description": "Unique identifier for a `group`.",
                        "format": "int64",
                        "example": 307
                    },
                    "status": {
                        "title": "Group Status",
                        "type": "string",
                        "description": "Identifies current status of the group resource.\n\nA group can be in three distinct states: Active, Disabled, Archived.\n\nA disabled group can not be assigned any additional alerts while disabled. All other group behavior and implications remain intact while the group is disabled.\n\nAn archived group contains limited metadata and can not be used in any operations as a reference. An archived group is not considered when making authorization decisions of any kind. An archived group can not be un-archived.",
                        "example": "Active",
                        "enum": [
                            "Active",
                            "Disabled",
                            "Archived"
                        ]
                    }
                },
                "description": "User group entry used for output operations."
            },
            "RoutingRuleDefault": {
                "title": "Routing Rule Defaults",
                "required": [
                    "createTicket",
                    "owningGroup",
                    "severity"
                ],
                "type": "object",
                "properties": {
                    "severity": {
                        "title": "Severity",
                        "maximum": 5,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The default severity of the alert.\n\n### Syntax and Constraints\n\nRepresented by raw numeric values to enable customization and internationalization of the corresponding labels within user interfaces.\n\nThe lowest numeric value represents the highest alert severity while the highest numeric value represents the lowest alert severity.\n\nThe default mapping of the value to English (en_US) labels is:\n- 1 ~ *Critical*\n- 2 ~ *Major*\n- 3 ~ *Minor*\n- 4 ~ *Warning*\n- 5 ~ *Info*",
                        "format": "int32",
                        "nullable": true,
                        "example": 2
                    },
                    "owningGroup": {
                        "title": "Owning Group ID",
                        "type": "integer",
                        "description": "The default group (queue) that owns the alert. Typically set to the group that is responsible for resolving the alert.Only active, not archived, groups can be referenced.Existing references for groups that become archived will be reset.",
                        "format": "int64",
                        "nullable": true,
                        "example": 307
                    },
                    "ticketGroup": {
                        "title": "Service Ticket Group Name",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "The default group name to use when generating a service ticket. This field is used for communication with external systems",
                        "nullable": true,
                        "example": "MFOPS"
                    },
                    "createTicket": {
                        "title": "Create Ticket",
                        "type": "boolean",
                        "description": "Governs whether a service ticket will be automatically created as part of the Alert creation process, if not already explicitly requested.",
                        "example": false
                    },
                    "alertProfile": {
                        "title": "Alert Profile Name",
                        "type": "integer",
                        "description": "Contains name of assigned alert profile.",
                        "format": "int64"
                    }
                },
                "description": "Contains default values for a subset of the Alert attributes, that are applied if the corresponding values are not explicitly set on input, and a choice for automated ticket creation.\n\n ### Constraints and Behavior\n\n In addition to the static requirements, if the `createTicket` flag is set to `true` then the `ticketGroup` property is required."
            },
            "RoutingRuleInput": {
                "title": "Alert Routing Rule (Input).",
                "required": [
                    "defaults",
                    "enabled",
                    "patterns"
                ],
                "type": "object",
                "properties": {
                    "enabled": {
                        "title": "Routing Rule Enabled",
                        "type": "boolean",
                        "description": "Governs whether the alert routing rule is enabled.",
                        "example": false
                    },
                    "patterns": {
                        "$ref": "#/components/schemas/RoutingRulePattern"
                    },
                    "defaults": {
                        "$ref": "#/components/schemas/RoutingRuleDefault"
                    }
                },
                "description": "A rule created by the Administrator that defines default values for the owning group,\n severity, and ticket group for a generated alert and optionally forces automatic\n service ticket creation.\n"
            },
            "RoutingRulePattern": {
                "title": "Routing Rule Patterns",
                "type": "object",
                "properties": {
                    "system": {
                        "title": "System Pattern",
                        "maxLength": 40,
                        "minLength": 1,
                        "type": "string",
                        "description": "A pattern used to match alert `system` attribute values.\n  Supports trailing asterisk (`*`) wildcard.\n",
                        "example": "MF01*",
                        "default": "*"
                    },
                    "resourceIdentifier": {
                        "title": "Resource Identifier Pattern",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Pattern used to match alert `resourceIdentifier` attribute values.\n  Supports trailing asterisk (`*`) wildcard.\n",
                        "example": "QAEX*",
                        "default": "*"
                    },
                    "messageId": {
                        "title": "Message ID Pattern",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "Pattern used to match alert `messageId` attribute values.\n  Supports trailing asterisk (`*`) wildcard.",
                        "example": "ACS*",
                        "default": "*"
                    }
                },
                "description": "All of the individual patterns must match for the overall rule to match. No two enabled rules can be defined with the same exact set of matching criteria patterns at the same time."
            },
            "RoutingRuleOutput": {
                "title": "Alert Routing Rule (Output).",
                "required": [
                    "createdAt",
                    "defaults",
                    "enabled",
                    "lastChangedAt",
                    "lastChangedBy",
                    "lastUsedAt",
                    "patterns",
                    "routingRuleId"
                ],
                "type": "object",
                "properties": {
                    "enabled": {
                        "title": "Routing Rule Enabled",
                        "type": "boolean",
                        "description": "Governs whether the alert routing rule is enabled.",
                        "example": false
                    },
                    "patterns": {
                        "$ref": "#/components/schemas/RoutingRulePattern"
                    },
                    "defaults": {
                        "$ref": "#/components/schemas/RoutingRuleDefault"
                    },
                    "routingRuleId": {
                        "title": "Routing Rule ID",
                        "type": "integer",
                        "description": "Unique identifier for an alert routing rule.",
                        "format": "int64",
                        "example": 15
                    },
                    "lastChangedBy": {
                        "title": "Last Changed By",
                        "type": "integer",
                        "description": "Unique identifier of the user that last changed the rule.",
                        "format": "int64",
                        "example": 207
                    },
                    "createdAt": {
                        "title": "Created At",
                        "type": "string",
                        "description": "Date and time when the alert routing rule was created.",
                        "format": "date-time",
                        "example": "2021-03-02T11:00:00Z"
                    },
                    "lastChangedAt": {
                        "title": "Last Changed At",
                        "type": "string",
                        "description": "Date and time when the alert routing rule was last changed.",
                        "format": "date-time",
                        "example": "2021-03-02T11:00:00Z"
                    },
                    "lastUsedAt": {
                        "title": "Last Used At",
                        "type": "string",
                        "description": "Date and time when the alert routing rule was last used to set default alert values.",
                        "format": "date-time",
                        "example": "2021-03-02T11:00:00Z"
                    }
                },
                "description": "A rule created by the Administrator that defines default values for the owning group,\n severity, and ticket group for a generated alert and optionally forces automatic\n service ticket creation.\n"
            },
            "XmvsInput": {
                "title": "Xmvs (Input)",
                "required": [
                    "alertId",
                    "command"
                ],
                "type": "object",
                "properties": {
                    "alertId": {
                        "title": "Alert ID",
                        "type": "integer",
                        "description": "A unique identifier of an alert.",
                        "format": "int64",
                        "example": 107
                    },
                    "command": {
                        "title": "Xmvs command",
                        "type": "string",
                        "description": "Xmvs command for remote execution",
                        "example": "status"
                    }
                },
                "description": "Xmvs input data."
            },
            "JsonNode": {
                "title": "Metadata",
                "type": "object",
                "description": "Metadata information.",
                "example": "        \"sysViewContext\": {\n            \"commandDateTime\": \"2022-11-28T11:30:51.588506-05:00\",\n            \"commandFormat\": \"\",\n            \"commandName\": \"XMVS\",\n            \"commandScreen\": \"\",\n            \"conditionHigh\": \"0\",\n            \"conditionNone\": \"2\",\n            \"conditionNormal\": \"0\",\n            \"conditionProblem\": \"0\",\n            \"conditionWarning\": \"0\",\n            \"currentAsId\": \"00EE\",\n            \"currentJobId\": \"STC85462\",\n            \"currentJobName\": \"SYSVUSER\",\n            \"dataFields\": \"10\",\n            \"dataRows\": \"1\",\n            \"dataRowsTruncated\": \"0\",\n            \"hardwareName\": \"MF05\",\n            \"homeAsId\": \"00EE\",\n            \"homeJobId\": \"STC85462\",\n            \"homeJobName\": \"SYSVUSER\",\n            \"infoFields\": \"2\",\n            \"infoRows\": \"2\",\n            \"jesName\": \"JES2\",\n            \"jesNode\": \"USILCA11\",\n            \"lparName\": \"CA32\",\n            \"message\": \"\",\n            \"messageReturnCode\": \"0\",\n            \"productBuild\": \"0990\",\n            \"productInterface\": \"SERVER\",\n            \"productJobName\": \"SYSVUSER\",\n            \"productName\": \"SYSVIEW\",\n            \"productRelease\": \"16.0\",\n            \"productSsId\": \"GSVX\",\n            \"productUserId\": \"MH893318\",\n            \"screenTitle\": \"MVS Command Responses\",\n            \"smfId\": \"CA32\",\n            \"sysplexName\": \"PLEXC1\",\n            \"systemName\": \"CA32\",\n            \"vmUserId\": \"\"\n        }"
            },
            "PrecisionDataframeOutput": {
                "title": "PrecisionDataframe (Output)",
                "type": "object",
                "properties": {
                    "fields": {
                        "title": "Fields",
                        "type": "array",
                        "description": "An array of fields. The order maps to the data returned in values.",
                        "example": [
                            {
                                "name": "Response",
                                "type": "string"
                            },
                            {
                                "name": "Type",
                                "type": "string"
                            },
                            {
                                "name": "Color",
                                "type": "string"
                            }
                        ],
                        "items": {
                            "$ref": "#/components/schemas/PrecisionField"
                        }
                    },
                    "data": {
                        "title": "Data",
                        "type": "object",
                        "additionalProperties": {
                            "title": "Data",
                            "type": "array",
                            "description": "The array of values returned in columnar format.",
                            "example": {
                                "values": [
                                    [
                                        "IEE305I DATE     COMMAND INVALID"
                                    ],
                                    [
                                        "NONE"
                                    ],
                                    [
                                        "GREEN"
                                    ]
                                ]
                            },
                            "items": {
                                "title": "Data",
                                "type": "array",
                                "description": "The array of values returned in columnar format.",
                                "example": {
                                    "values": [
                                        [
                                            "IEE305I DATE     COMMAND INVALID"
                                        ],
                                        [
                                            "NONE"
                                        ],
                                        [
                                            "GREEN"
                                        ]
                                    ]
                                },
                                "items": {
                                    "title": "Data",
                                    "type": "string",
                                    "description": "The array of values returned in columnar format.",
                                    "example": "{\"values\":[[\"IEE305I DATE     COMMAND INVALID\"],[\"NONE\"],[\"GREEN\"]]}"
                                }
                            }
                        },
                        "description": "The array of values returned in columnar format.",
                        "example": {
                            "values": [
                                [
                                    "IEE305I DATE     COMMAND INVALID"
                                ],
                                [
                                    "NONE"
                                ],
                                [
                                    "GREEN"
                                ]
                            ]
                        }
                    },
                    "length": {
                        "title": "Length",
                        "type": "integer",
                        "description": "The number of rows in the data field.",
                        "format": "int32",
                        "example": 1
                    },
                    "metadata": {
                        "title": "Metadata",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/JsonNode"
                        },
                        "description": "Metadata information.",
                        "example": "        \"sysViewContext\": {\n            \"commandDateTime\": \"2022-11-28T11:30:51.588506-05:00\",\n            \"commandFormat\": \"\",\n            \"commandName\": \"XMVS\",\n            \"commandScreen\": \"\",\n            \"conditionHigh\": \"0\",\n            \"conditionNone\": \"2\",\n            \"conditionNormal\": \"0\",\n            \"conditionProblem\": \"0\",\n            \"conditionWarning\": \"0\",\n            \"currentAsId\": \"00EE\",\n            \"currentJobId\": \"STC85462\",\n            \"currentJobName\": \"SYSVUSER\",\n            \"dataFields\": \"10\",\n            \"dataRows\": \"1\",\n            \"dataRowsTruncated\": \"0\",\n            \"hardwareName\": \"MF05\",\n            \"homeAsId\": \"00EE\",\n            \"homeJobId\": \"STC85462\",\n            \"homeJobName\": \"SYSVUSER\",\n            \"infoFields\": \"2\",\n            \"infoRows\": \"2\",\n            \"jesName\": \"JES2\",\n            \"jesNode\": \"USILCA11\",\n            \"lparName\": \"CA32\",\n            \"message\": \"\",\n            \"messageReturnCode\": \"0\",\n            \"productBuild\": \"0990\",\n            \"productInterface\": \"SERVER\",\n            \"productJobName\": \"SYSVUSER\",\n            \"productName\": \"SYSVIEW\",\n            \"productRelease\": \"16.0\",\n            \"productSsId\": \"GSVX\",\n            \"productUserId\": \"MH893318\",\n            \"screenTitle\": \"MVS Command Responses\",\n            \"smfId\": \"CA32\",\n            \"sysplexName\": \"PLEXC1\",\n            \"systemName\": \"CA32\",\n            \"vmUserId\": \"\"\n        }"
                    }
                },
                "description": "PrecisionDataframe structured data."
            },
            "PrecisionField": {
                "title": "Fields",
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "type": "string",
                        "description": "Field name.",
                        "example": "street"
                    },
                    "type": {
                        "title": "Type",
                        "type": "string",
                        "description": "Field type.",
                        "example": "string"
                    }
                },
                "description": "An array of fields. The order maps to the data returned in values.",
                "example": [
                    {
                        "name": "Response",
                        "type": "string"
                    },
                    {
                        "name": "Type",
                        "type": "string"
                    },
                    {
                        "name": "Color",
                        "type": "string"
                    }
                ]
            },
            "TicketInput": {
                "title": "Service Ticket for Alert (Input)",
                "required": [
                    "alertId"
                ],
                "type": "object",
                "properties": {
                    "alertId": {
                        "title": "Alert ID",
                        "type": "integer",
                        "description": "A unique identifier of an alert.",
                        "format": "int64",
                        "example": 107
                    },
                    "ticketGroup": {
                        "title": "Service Ticket Group Name",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "The group name to use when generating a service ticket.",
                        "nullable": true,
                        "example": "MFOPS"
                    }
                },
                "description": "Request creation of a service ticket for the specified Alert ID. The alert attributes are used to construct the incident request object when the request is forwarded to the configured service management integration instance (NIM SM)."
            },
            "TicketOutput": {
                "title": "Service Ticket for Alert (Output)",
                "required": [
                    "contextUrl",
                    "originalId",
                    "referenceNumber",
                    "ticketId"
                ],
                "type": "object",
                "properties": {
                    "ticketId": {
                        "title": "Ticket ID",
                        "type": "integer",
                        "description": "The unique identifier for a service ticket.",
                        "format": "int64",
                        "nullable": true,
                        "example": 607
                    },
                    "originalId": {
                        "title": "Original ID",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "The unique identifier of the ticket within the (integration) service used to raise the ticket (for example, NIM SM).",
                        "example": "a964fc5c4fa35200672b5f388310c73e"
                    },
                    "referenceNumber": {
                        "title": "Reference Number",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "Identifier of the ticket that is visible to the end user within the target service desk product.",
                        "example": "INC0405465"
                    },
                    "contextUrl": {
                        "title": "Context URL",
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "The URL associated with the service management system incident. This URL is provided by the (integration) service that raised the ticket (for example, NIM SM) and can be used as the launch-in-context URL within client user interfaces.",
                        "nullable": true,
                        "example": "https://example.com/nav_to.do?uri=incident.do?sys_id=a964fc5c4fa35200672b5f388310c73e"
                    }
                },
                "description": "The output object that results from a service ticket request to the configured service management integration instance (NIM SM). This object includes the ID of the newly created service ticket and the URL hosted by the NIM-SM server that represents the ticket.",
                "nullable": true
            },
            "RoutingRuleSimulationInput": {
                "type": "object",
                "properties": {
                    "messageId": {
                        "title": "Message ID",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "A message identifier that best represents the alert situation.",
                        "nullable": true,
                        "example": "ACS1180"
                    },
                    "resourceIdentifier": {
                        "title": "Resource Identifier",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Identifies the specific instance of the resource or component that is the subject of the alert.",
                        "nullable": true,
                        "example": "QAEX1435"
                    },
                    "system": {
                        "title": "System",
                        "maxLength": 40,
                        "minLength": 1,
                        "type": "string",
                        "description": "Identification of the system related to the alert.",
                        "nullable": true,
                        "example": "MF01"
                    }
                }
            },
            "RoutingRuleSimulationOutput": {
                "title": "Alert Routing Rule (Output).",
                "required": [
                    "routingRuleId"
                ],
                "type": "object",
                "properties": {
                    "routingRuleId": {
                        "title": "Routing Rule ID",
                        "type": "integer",
                        "description": "A unique identifier of a matched alert routing rule or `null` if no rule matched.\n",
                        "format": "int64",
                        "nullable": true,
                        "example": 15
                    }
                },
                "description": "A rule created by the Administrator that defines default values for the owning group,\n severity, and ticket group for a generated alert and optionally forces automatic\n service ticket creation.\n"
            },
            "AlertPermissionOutput": {
                "required": [
                    "alertId"
                ],
                "type": "object",
                "properties": {
                    "alertId": {
                        "title": "Alert ID",
                        "type": "integer",
                        "description": "A unique identifier of an alert.",
                        "format": "int64",
                        "example": 107
                    },
                    "permissions": {
                        "title": "Alert Permissions",
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Items Enum: \"read:alert\" \"update:alert.attributes\" \"update:alert.group\" \"update:alert.owner\" \"create:alert:note\" \"create:alert:ticket\"\nIdentifies a set of permissions a session has against an Alert resource.\n\nNote that this information only reflects a state of the authorization at the time of the request and does not guarantee the corresponding operations will be allowed or disallowed at time of execution.",
                        "example": "\"read:alert\",\n\"create:alert:note\"",
                        "items": {
                            "title": "Alert Permissions",
                            "type": "string",
                            "description": "Items Enum: \"read:alert\" \"update:alert.attributes\" \"update:alert.group\" \"update:alert.owner\" \"create:alert:note\" \"create:alert:ticket\"\nIdentifies a set of permissions a session has against an Alert resource.\n\nNote that this information only reflects a state of the authorization at the time of the request and does not guarantee the corresponding operations will be allowed or disallowed at time of execution.",
                            "example": "\"read:alert\",\n\"create:alert:note\""
                        }
                    }
                }
            },
            "AlertCreate": {
                "title": "Alert (create)",
                "required": [
                    "description"
                ],
                "type": "object",
                "properties": {
                    "eventAt": {
                        "title": "Event At",
                        "type": "string",
                        "description": "Absolute time identifying when the event triggering the alert occurred. If no value is provided explicitly, the default value is the instant that the service received the alert (equal to `createdAt`).",
                        "format": "date-time"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Description of the alert. Should describe the problem with the resource or component which triggered the alert.",
                        "example": "CPU usage percentage total value 78% is over warning threshold of 75%."
                    },
                    "additionalInformation": {
                        "title": "Additional Information",
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Additional alert details that could not be included in the `description`.\n\nThis **may** include information helpful during debugging/remediation, additional explanation of the problem, auxiliary error codes, documentation references, explanation of terms, recommended remediation steps, suggested debugging steps, and so on.",
                        "example": "CP CPU usage percentage total"
                    },
                    "messageId": {
                        "title": "Message ID",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "A message identifier that best represents the alert situation.",
                        "example": "ACS0001E"
                    },
                    "agentReferenceId": {
                        "title": "Agent Reference ID",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "A reference identifying the alert uniquely within the scope of the source Agent.\n\n### Syntax and Constraints\n\n**Should** be unique in the namespace of the source agent however, the service does not impose any strict uniqueness checks on the value.",
                        "example": "EX31.00D8D657AA1302B47A"
                    },
                    "severity": {
                        "title": "Severity",
                        "maximum": 5,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The severity of the alert.\n\n### Syntax and Constraints\n\nRepresented by raw numeric values to enable customization and internationalization of the corresponding labels within user interfaces.\n\nThe lowest numeric value represents the highest alert severity while the highest numeric value represents the lowest alert severity.\n\nThe default mapping of the value to English (en_US) labels is:\n- 1 ~ *Critical*\n- 2 ~ *Major*\n- 3 ~ *Minor*\n- 4 ~ *Warning*\n- 5 ~ *Info*",
                        "format": "int32",
                        "example": 2
                    },
                    "expiresAt": {
                        "title": "Expires At",
                        "type": "string",
                        "description": "Absolute or relative time when the alert is to automatically expire (be closed).\n\nThe relative semantic of the value is only accepted on input, for example `PT1H30M` and is relative to `createdAt` time. On output the service always uses the absolute time representation.\n\n### Behavior\n\nWhen a value that is considered to be in the past is received the expiration logic will trigger immediately.",
                        "format": "date-time"
                    },
                    "owningGroup": {
                        "title": "Owning Group ID",
                        "type": "integer",
                        "description": "The group (queue) that owns the alert. Typically set to the group that is responsible for resolving the alert.",
                        "format": "int64",
                        "example": 307
                    },
                    "owningUser": {
                        "title": "Owning User ID",
                        "type": "integer",
                        "description": "The user (account) that owns the alert. Typically set to the user that is responsible for resolving the alert.",
                        "format": "int64",
                        "example": 207
                    },
                    "custom": {
                        "title": "Custom Attributes",
                        "type": "object",
                        "additionalProperties": {
                            "title": "Custom Attributes",
                            "type": "string",
                            "description": "Set of custom string attributes.\n\n### Syntax and Constraints\n\nA custom attribute **must not** be used if an appropriate explicit attribute that could hold its value exists.\n\nThe keys for the custom attributes **must** follow the general naming convention that apply to the explicitly defined alert attributes.\n\nThe values of custom attributes must be strings. In cases where a non-string value is provided it will be converted to one.\n\nIt is the responsibility of any particular alert source to ensure that the meaning of a particular custom attribute is clear and stable in the corresponding scope. The scope is up to the alert source and might be global or be dependent, for example, on the included `agentType`, `agentIdentifier`, `resourceType`, and `resourceIdentifier` values.\n\nA maximum size limit of the custom attribute keys and values altogether is 1000000 characters. Any operation accepting this value *will* reject it if its size is above this limit.",
                            "example": "{\"plantType\":\"nuclear\",\"waterLevel\":\"critical\"}",
                            "default": "{}"
                        },
                        "description": "Set of custom string attributes.\n\n### Syntax and Constraints\n\nA custom attribute **must not** be used if an appropriate explicit attribute that could hold its value exists.\n\nThe keys for the custom attributes **must** follow the general naming convention that apply to the explicitly defined alert attributes.\n\nThe values of custom attributes must be strings. In cases where a non-string value is provided it will be converted to one.\n\nIt is the responsibility of any particular alert source to ensure that the meaning of a particular custom attribute is clear and stable in the corresponding scope. The scope is up to the alert source and might be global or be dependent, for example, on the included `agentType`, `agentIdentifier`, `resourceType`, and `resourceIdentifier` values.\n\nA maximum size limit of the custom attribute keys and values altogether is 1000000 characters. Any operation accepting this value *will* reject it if its size is above this limit.",
                        "example": {
                            "plantType": "nuclear",
                            "waterLevel": "critical"
                        },
                        "default": {}
                    },
                    "agentType": {
                        "title": "Agent Type",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "Identifies the type of alert agent (alert source) that generated the alert.\n\n### Syntax and Constraints\n\nWhen provided, the combination of `agentType` and `agentIdentifier` alone **must** form a unique identification of an alert agent. The uniqueness **must** be guaranteed within the entire customer environment and stable over time.\n\nWhile the value of `agentType` is generally a free-form string to allow for flexibility, there are some syntax rules as well as other constraints that apply.\n\nThe value can contain any alphanumeric characters and a period. Periods **should** be used to separate individual logical areas of the value.\nThe value **should** start with the identification of the vendor.\nThe value **must** always be treated as case-insensitive.\n\nSome values are reserved and are assigned a specific meaning. This set of values can evolve over time as new types of alert agents become established. This is necessary to establish and maintain smooth interoperability between alert sources and consumers. These reserved values are covered in a later section.\n\nValues that are not part of the reserved set must always start with the prefix `x.` This is to ensure that experimental, ad-hoc, or temporary values, that may later become reserved values, can not clash with the reserved value namespace.\n\n### Registry of Reserved Values\n\nThe current set of registered values follows.\n\n- `ca.opsmvs`    - OPS/MVS\u00ae Event Management & Automation\n- `ca.netmaster` - NETMASTER\u00ae NETWORK MANAGEMENT\n- `ca.sysview`   - SYSVIEW\u00ae Performance Management\n- `ca.moi`       - Mainframe Operational Intelligence\n- `ca.vantage`   - Vantage\u2122 Storage Management\n- `ca.ap`        - Automation Point",
                        "example": "ca.sysview"
                    },
                    "agentIdentifier": {
                        "title": "Agent Identifier",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Identifies the specific instance of the alert agent that generated the alert.\n\n### Syntax and Constraints\n\nWhen provided, the combination of `agentType` and `agentIdentifier`alone **must** form a unique identification of an alert agent. The uniqueness **must** be guaranteed within the entire customer environment and **must** be stable over time.\n\nWhile the value of `agentIdentifier` is generally a free-form string to allow for flexibility, there are some syntax rules as well as other constraints that apply.\n\nThe value can contain any alphanumeric characters and a period. Periods **should** be used to separate individual logical areas of the value.\n\nIf the `agentType` value is one of the reserved values then the format **must** follow well-defined and stable syntax rules. These are covered in a later section. This is necessary to establish and maintain smooth interoperability between alert sources and consumers.\n\nIf possible within the context, the value **should** always be treated as case-insensitive.\n\n### Registry of Value Formats\n\nThe set of syntax rules for registered `agentType` types is covered in the following sub-sections.\n\n#### (`ca.opsmvs`) OPS/MVS\u00ae Event Management & Automation\n\n#### (`ca.netmaster`) NETMASTER\u00ae NETWORK MANAGEMENT\n\nUses a product-specific unique instance identifier\n\nExample: `NMDE8132`\n\n#### (`ca.sysview`) SYSVIEW\u00ae Performance Management\n\n#### (`ca.moi`) Mainframe Operational Intelligence\n\n#### (`ca.vantage`) Vantage\u2122 Storage Management\n\nUses the subsystem ID of the Vantage instance.\n\n#### (`ca.ap`) Automation Point",
                        "example": "gsvx"
                    },
                    "resourceType": {
                        "title": "Resource Type",
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string",
                        "description": "Identifies the type of resource or component that is the subject of the alert.\n\n### Syntax and Constraints\n\nWhen provided, the combination of `resourceType` and `resourceIdentifier` alone **should** form a unique identification of an alert subject if possible. The uniqueness **should** be guaranteed within the entire customer environment and **should** be stable over time.\n\nWhile the value of `resourceType` is generally a free-form string to allow for flexibility, there are some syntax rules as well as other constraints that apply.\n\nThe value can contain any alphanumeric character and a period. Periods **should** be used to separate individual logical areas of the value.\nThe value **must** always be treated as case-insensitive.\n\nSome values are reserved and are assigned a specific meaning. This set of values can evolve over time as new types of alert subjects become established. This is necessary to establish and maintain smooth interoperability between alert sources and consumers. These reserved values are covered in a later section.\n\n### Registry of Reserved Values\n\nThe current set of registered values follows.\n\n- `job`\n- `cics`\n  - `cics.region`\n  - `cics.transaction`\n  - `cics.program`\n- `db2`\n  - `db2.subsystem`\n  - `db2.package`\n  - `db2.plan`\n- `idms`\n- `datacom`\n- `ims`\n- `mq`\n- `cpu`\n- `ziip`\n- `storage`\n  - `storage.dasd`\n  - `storage.tape`",
                        "example": "cics.region"
                    },
                    "resourceIdentifier": {
                        "title": "Resource Identifier",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Identifies the specific instance of the resource or component that is the subject of the alert.\n\n### Syntax and Constraints\n\nWhen provided, the combination of `resourceType` and `resourceIdentifier` alone **should** form a unique identification of an alert subject if possible. The uniqueness **should** be guaranteed within the entire customer environment and **should** be stable over time.\n\nWhile the value of `resourceIdentifier` is generally a free-form string to allow for flexibility, there are some syntax rules as well as other constraints that apply.\n\nThere are no explicit restrictions on the set of allowed characters. Periods **should** be used to separate individual logical areas of the value.\n\nIf the `agentType` and `resourceType` values are both from their respective reserved value sets then the `resourceIdentifier` value **must** follow well-defined and stable syntax rules. These are covered in a later section. This is necessary to establish and maintain smooth interoperability between alerts sources and consumers.\n\nIf possible within the context, the value **should** always be treated as case-insensitive.\n\n### Registry of Value Formats\n\nThe set of syntax rules for registered `agentType` and `resourceType` pairs is covered in the following sub-sections.\n\n#### (`ca.opsmvs`) OPS/MVS\u00ae Event Management & Automation\n\nIn the case of OPS/MVS, no restrictions or uniqueness constraint can be applied because in general the generated alerts come from customer-created REXX scripts and the requirement is to allow customers to provide any that make sense to them without putting complicated constraints on these values.\n\n#### (`ca.netmaster`) NETMASTER\u00ae NETWORK MANAGEMENT\n\n#### (`ca.sysview`) SYSVIEW\u00ae Performance Management\n\n#### (`ca.moi`) Mainframe Operational Intelligence\n\n#### (`ca.vantage`) Vantage\u2122 Storage Management\n\n#### (`ca.ap`) Automation Point",
                        "example": "QAEX610"
                    },
                    "resourceVersion": {
                        "title": "Resource Version",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "The version of the resource or component.\n\nIn combination with the Resource Type, this value provides a more granular identification of the component type. This can be helpful in certain remediation workflows. For example, a client could provide direct links to version-specific resource product documentation rather than general links.",
                        "example": "7.4 (TS 6.1)"
                    },
                    "host": {
                        "title": "Host",
                        "type": "string",
                        "description": "Hostname or IP address of the logical host containing/owning the alert subject or of the alert subject itself if it is addressable over the network.\n\n### Syntax and Constraints\n\n**Must** contain a hostname, or IP address.",
                        "format": "host-ip",
                        "example": "host.example.com"
                    },
                    "system": {
                        "title": "System",
                        "maxLength": 40,
                        "minLength": 1,
                        "type": "string",
                        "description": "Identification of the system related to the alert.\n\nIf no value is provided explicitly, the value is automatically generated based on product configuration rules.",
                        "example": "PROD1"
                    },
                    "cpcName": {
                        "title": "Mainframe CPC Name",
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "Central Processor Complex (CPC) name - referring to the physical collection of hardware that includes main storage, one or more central processors, timers, and channels.",
                        "example": "MF05"
                    },
                    "sysplexName": {
                        "title": "SYSPLEX Name",
                        "pattern": "[a-zA-Z0-9@#$]{1,8}",
                        "type": "string",
                        "description": "Mainframe Sysplex Name.\n\n`SYSPLEX` parameter as specified directly in the `COUPLExx` member of `SYS1.PARMLIB`, or indirectly using the `&SYSPLEX` system symbol as set for the `SYSPLEX` parameter in the `LOADxx` member of `SYS1.PARMLIB`.",
                        "example": "PLEX1"
                    },
                    "lparName": {
                        "title": "LPAR Name",
                        "pattern": "[a-zA-Z][a-zA-Z0-9]{0,7}",
                        "type": "string",
                        "description": "Mainframe LPAR name.",
                        "example": "EX31"
                    },
                    "zosSystemName": {
                        "title": "z/OS System Name",
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "z/OS System Name. The value of the `SYSNAME` parameter in the `IEASYMxx` or `IEASYSxx` member of `SYS1.PARMLIB` or its default value if not specified. Refer to the IBM documentation for details.",
                        "example": "EX31"
                    },
                    "smfSystemId": {
                        "title": "SMF System ID",
                        "maxLength": 4,
                        "minLength": 1,
                        "type": "string",
                        "description": "z/OS - SMF System ID.",
                        "example": "MVS1"
                    },
                    "subsystemName": {
                        "title": "Subsystem Name",
                        "maxLength": 4,
                        "minLength": 1,
                        "type": "string",
                        "description": "z/OS Subsystem Name for alert resources or components that are part of a subsystem registered to the Subsystem Interface (SSI).",
                        "example": "QA61"
                    },
                    "jobName": {
                        "title": "Job Name",
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string",
                        "description": "Contains the name of the primary job (JCL) or process (Program, Executable) that is most closely related to the alert resource or component. Typically only applies to software resources or components.",
                        "example": "QAEX610"
                    },
                    "jobId": {
                        "title": "Job ID",
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "description": "Contains the identifier of the process/job that is most closely related to the alert resource or component. Typically only applies to software resources or components.\n\n### Syntax and Constraints\n\nFor *z/OS* jobs this **must** be a concatenation of the job type and job number.",
                        "example": "STC48328"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "description": "Status of the alert.",
                        "example": "New",
                        "default": "New",
                        "enum": [
                            "New",
                            "Assigned",
                            "Closed"
                        ]
                    },
                    "ticketGroup": {
                        "title": "Service Ticket Group Name",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "The default group name to use when generating a service ticket. This field is used for communication with external systems",
                        "nullable": true,
                        "example": "MFOPS"
                    }
                },
                "description": "Alert object used for create alert operation."
            },
            "AlertOutput": {
                "title": "Alert (output)",
                "required": [
                    "additionalInformation",
                    "agentIdentifier",
                    "agentReferenceId",
                    "agentType",
                    "alertId",
                    "cpcName",
                    "createdAt",
                    "custom",
                    "description",
                    "duplicateCount",
                    "eventAt",
                    "expiresAt",
                    "host",
                    "jobId",
                    "jobName",
                    "lastChangedAt",
                    "lastNote",
                    "lparName",
                    "messageId",
                    "owningGroup",
                    "owningUser",
                    "resourceIdentifier",
                    "resourceType",
                    "resourceVersion",
                    "severity",
                    "smfSystemId",
                    "status",
                    "subsystemName",
                    "sysplexName",
                    "system",
                    "ticketGroup",
                    "tickets",
                    "zosSystemName"
                ],
                "type": "object",
                "properties": {
                    "alertId": {
                        "title": "Alert ID",
                        "type": "integer",
                        "description": "A unique identifier of an alert.",
                        "format": "int64",
                        "example": 107
                    },
                    "agentType": {
                        "title": "Agent Type",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "Identifies the type of alert agent (alert source) that generated the alert.\n\n### Syntax and Constraints\n\nWhen provided, the combination of `agentType` and `agentIdentifier` alone **must** form a unique identification of an alert agent. The uniqueness **must** be guaranteed within the entire customer environment and stable over time.\n\nWhile the value of `agentType` is generally a free-form string to allow for flexibility, there are some syntax rules as well as other constraints that apply.\n\nThe value can contain any alphanumeric characters and a period. Periods **should** be used to separate individual logical areas of the value.\nThe value **should** start with the identification of the vendor.\nThe value **must** always be treated as case-insensitive.\n\nSome values are reserved and are assigned a specific meaning. This set of values can evolve over time as new types of alert agents become established. This is necessary to establish and maintain smooth interoperability between alert sources and consumers. These reserved values are covered in a later section.\n\nValues that are not part of the reserved set must always start with the prefix `x.` This is to ensure that experimental, ad-hoc, or temporary values, that may later become reserved values, can not clash with the reserved value namespace.\n\n### Registry of Reserved Values\n\nThe current set of registered values follows.\n\n- `ca.opsmvs`    - OPS/MVS\u00ae Event Management & Automation\n- `ca.netmaster` - NETMASTER\u00ae NETWORK MANAGEMENT\n- `ca.sysview`   - SYSVIEW\u00ae Performance Management\n- `ca.moi`       - Mainframe Operational Intelligence\n- `ca.vantage`   - Vantage\u2122 Storage Management\n- `ca.ap`        - Automation Point",
                        "example": "ca.sysview"
                    },
                    "agentIdentifier": {
                        "title": "Agent Identifier",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Identifies the specific instance of the alert agent that generated the alert.\n\n### Syntax and Constraints\n\nWhen provided, the combination of `agentType` and `agentIdentifier`alone **must** form a unique identification of an alert agent. The uniqueness **must** be guaranteed within the entire customer environment and **must** be stable over time.\n\nWhile the value of `agentIdentifier` is generally a free-form string to allow for flexibility, there are some syntax rules as well as other constraints that apply.\n\nThe value can contain any alphanumeric characters and a period. Periods **should** be used to separate individual logical areas of the value.\n\nIf the `agentType` value is one of the reserved values then the format **must** follow well-defined and stable syntax rules. These are covered in a later section. This is necessary to establish and maintain smooth interoperability between alert sources and consumers.\n\nIf possible within the context, the value **should** always be treated as case-insensitive.\n\n### Registry of Value Formats\n\nThe set of syntax rules for registered `agentType` types is covered in the following sub-sections.\n\n#### (`ca.opsmvs`) OPS/MVS\u00ae Event Management & Automation\n\n#### (`ca.netmaster`) NETMASTER\u00ae NETWORK MANAGEMENT\n\nUses a product-specific unique instance identifier\n\nExample: `NMDE8132`\n\n#### (`ca.sysview`) SYSVIEW\u00ae Performance Management\n\n#### (`ca.moi`) Mainframe Operational Intelligence\n\n#### (`ca.vantage`) Vantage\u2122 Storage Management\n\nUses the subsystem ID of the Vantage instance.\n\n#### (`ca.ap`) Automation Point",
                        "example": "gsvx"
                    },
                    "resourceType": {
                        "title": "Resource Type",
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string",
                        "description": "Identifies the type of resource or component that is the subject of the alert.\n\n### Syntax and Constraints\n\nWhen provided, the combination of `resourceType` and `resourceIdentifier` alone **should** form a unique identification of an alert subject if possible. The uniqueness **should** be guaranteed within the entire customer environment and **should** be stable over time.\n\nWhile the value of `resourceType` is generally a free-form string to allow for flexibility, there are some syntax rules as well as other constraints that apply.\n\nThe value can contain any alphanumeric character and a period. Periods **should** be used to separate individual logical areas of the value.\nThe value **must** always be treated as case-insensitive.\n\nSome values are reserved and are assigned a specific meaning. This set of values can evolve over time as new types of alert subjects become established. This is necessary to establish and maintain smooth interoperability between alert sources and consumers. These reserved values are covered in a later section.\n\n### Registry of Reserved Values\n\nThe current set of registered values follows.\n\n- `job`\n- `cics`\n  - `cics.region`\n  - `cics.transaction`\n  - `cics.program`\n- `db2`\n  - `db2.subsystem`\n  - `db2.package`\n  - `db2.plan`\n- `idms`\n- `datacom`\n- `ims`\n- `mq`\n- `cpu`\n- `ziip`\n- `storage`\n  - `storage.dasd`\n  - `storage.tape`",
                        "example": "cics.region"
                    },
                    "resourceIdentifier": {
                        "title": "Resource Identifier",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Identifies the specific instance of the resource or component that is the subject of the alert.\n\n### Syntax and Constraints\n\nWhen provided, the combination of `resourceType` and `resourceIdentifier` alone **should** form a unique identification of an alert subject if possible. The uniqueness **should** be guaranteed within the entire customer environment and **should** be stable over time.\n\nWhile the value of `resourceIdentifier` is generally a free-form string to allow for flexibility, there are some syntax rules as well as other constraints that apply.\n\nThere are no explicit restrictions on the set of allowed characters. Periods **should** be used to separate individual logical areas of the value.\n\nIf the `agentType` and `resourceType` values are both from their respective reserved value sets then the `resourceIdentifier` value **must** follow well-defined and stable syntax rules. These are covered in a later section. This is necessary to establish and maintain smooth interoperability between alerts sources and consumers.\n\nIf possible within the context, the value **should** always be treated as case-insensitive.\n\n### Registry of Value Formats\n\nThe set of syntax rules for registered `agentType` and `resourceType` pairs is covered in the following sub-sections.\n\n#### (`ca.opsmvs`) OPS/MVS\u00ae Event Management & Automation\n\nIn the case of OPS/MVS, no restrictions or uniqueness constraint can be applied because in general the generated alerts come from customer-created REXX scripts and the requirement is to allow customers to provide any that make sense to them without putting complicated constraints on these values.\n\n#### (`ca.netmaster`) NETMASTER\u00ae NETWORK MANAGEMENT\n\n#### (`ca.sysview`) SYSVIEW\u00ae Performance Management\n\n#### (`ca.moi`) Mainframe Operational Intelligence\n\n#### (`ca.vantage`) Vantage\u2122 Storage Management\n\n#### (`ca.ap`) Automation Point",
                        "example": "QAEX610"
                    },
                    "resourceVersion": {
                        "title": "Resource Version",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "The version of the resource or component.\n\nIn combination with the Resource Type, this value provides a more granular identification of the component type. This can be helpful in certain remediation workflows. For example, a client could provide direct links to version-specific resource product documentation rather than general links.",
                        "example": "7.4 (TS 6.1)"
                    },
                    "host": {
                        "title": "Host",
                        "type": "string",
                        "description": "Hostname or IP address of the logical host containing/owning the alert subject or of the alert subject itself if it is addressable over the network.\n\n### Syntax and Constraints\n\n**Must** contain a hostname, or IP address.",
                        "format": "host-ip",
                        "example": "host.example.com"
                    },
                    "system": {
                        "title": "System",
                        "maxLength": 40,
                        "minLength": 1,
                        "type": "string",
                        "description": "Identification of the system related to the alert.\n\nIf no value is provided explicitly, the value is automatically generated based on product configuration rules.",
                        "example": "PROD1"
                    },
                    "cpcName": {
                        "title": "Mainframe CPC Name",
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "Central Processor Complex (CPC) name - referring to the physical collection of hardware that includes main storage, one or more central processors, timers, and channels.",
                        "example": "MF05"
                    },
                    "sysplexName": {
                        "title": "SYSPLEX Name",
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "Mainframe Sysplex Name.\n\n`SYSPLEX` parameter as specified directly in the `COUPLExx` member of `SYS1.PARMLIB`, or indirectly using the `&SYSPLEX` system symbol as set for the `SYSPLEX` parameter in the `LOADxx` member of `SYS1.PARMLIB`.",
                        "example": "PLEX1"
                    },
                    "lparName": {
                        "title": "LPAR Name",
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "Mainframe LPAR name.",
                        "example": "EX31"
                    },
                    "zosSystemName": {
                        "title": "z/OS System Name",
                        "maxLength": 8,
                        "minLength": 1,
                        "type": "string",
                        "description": "z/OS System Name. The value of the `SYSNAME` parameter in the `IEASYMxx` or `IEASYSxx` member of `SYS1.PARMLIB` or its default value if not specified. Refer to the IBM documentation for details.",
                        "example": "EX31"
                    },
                    "smfSystemId": {
                        "title": "SMF System ID",
                        "maxLength": 4,
                        "minLength": 1,
                        "type": "string",
                        "description": "z/OS - SMF System ID.",
                        "example": "MVS1"
                    },
                    "subsystemName": {
                        "title": "Subsystem Name",
                        "maxLength": 4,
                        "minLength": 1,
                        "type": "string",
                        "description": "z/OS Subsystem Name for alert resources or components that are part of a subsystem registered to the Subsystem Interface (SSI).",
                        "example": "QA61"
                    },
                    "jobName": {
                        "title": "Job Name",
                        "maxLength": 200,
                        "minLength": 1,
                        "type": "string",
                        "description": "Contains the name of the primary job (JCL) or process (Program, Executable) that is most closely related to the alert resource or component. Typically only applies to software resources or components.",
                        "example": "QAEX610"
                    },
                    "jobId": {
                        "title": "Job ID",
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "description": "Contains the identifier of the process/job that is most closely related to the alert resource or component. Typically only applies to software resources or components.\n\n### Syntax and Constraints\n\nFor *z/OS* jobs this **must** be a concatenation of the job type and job number.",
                        "example": "STC48328"
                    },
                    "eventAt": {
                        "title": "Event At",
                        "type": "string",
                        "description": "Absolute time identifying when the event triggering the alert occurred. If no value is provided explicitly, the default value is the instant that the service received the alert (equal to `createdAt`).",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "title": "Created At",
                        "type": "string",
                        "description": "Absolute time identifying when the alert was created.",
                        "format": "date-time"
                    },
                    "lastChangedAt": {
                        "title": "Last Changed At",
                        "type": "string",
                        "description": "Absolute time identifying when the alert was last changed.\n\n### Syntax and Constraints\n\nAfter alert creation, the value matches the `createdAt` value.\nAny change made to the alert object, that triggers an `alertChange` history entry also updates this attribute. (Notably, this does not include the addition of new notes or attachment of service ticket references.)",
                        "format": "date-time"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Description of the alert. Should describe the problem with the resource or component which triggered the alert.",
                        "example": "CPU usage percentage total value 78% is over warning threshold of 75%."
                    },
                    "additionalInformation": {
                        "title": "Additional Information",
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Additional alert details that could not be included in the `description`.\n\nThis **may** include information helpful during debugging/remediation, additional explanation of the problem, auxiliary error codes, documentation references, explanation of terms, recommended remediation steps, suggested debugging steps, and so on.",
                        "example": "CP CPU usage percentage total"
                    },
                    "messageId": {
                        "title": "Message ID",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "A message identifier that best represents the alert situation.",
                        "example": "ACS0001E"
                    },
                    "agentReferenceId": {
                        "title": "Agent Reference ID",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "A reference identifying the alert uniquely within the scope of the source Agent.\n\n### Syntax and Constraints\n\n**Should** be unique in the namespace of the source agent however, the service does not impose any strict uniqueness checks on the value.",
                        "example": "EX31.00D8D657AA1302B47A"
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "description": "Status of the alert.",
                        "example": "New",
                        "enum": [
                            "New",
                            "Assigned",
                            "Closed"
                        ]
                    },
                    "severity": {
                        "title": "Severity",
                        "maximum": 5,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The severity of the alert.\n\n### Syntax and Constraints\n\nRepresented by raw numeric values to enable customization and internationalization of the corresponding labels within user interfaces.\n\nThe lowest numeric value represents the highest alert severity while the highest numeric value represents the lowest alert severity.\n\nThe default mapping of the value to English (en_US) labels is:\n- 1 ~ *Critical*\n- 2 ~ *Major*\n- 3 ~ *Minor*\n- 4 ~ *Warning*\n- 5 ~ *Info*",
                        "format": "int32",
                        "example": 2
                    },
                    "expiresAt": {
                        "title": "Expires At",
                        "type": "string",
                        "description": "Absolute or relative time when the alert is to automatically expire (be closed).\n\nThe relative semantic of the value is only accepted on input, for example `PT1H30M` and is relative to `createdAt` time. On output the service always uses the absolute time representation.\n\n### Behavior\n\nWhen a value that is considered to be in the past is received the expiration logic will trigger immediately.",
                        "format": "date-time"
                    },
                    "owningGroup": {
                        "title": "Owning Group ID",
                        "type": "integer",
                        "description": "The group (queue) that owns the alert. Typically set to the group that is responsible for resolving the alert.",
                        "format": "int64",
                        "example": 307
                    },
                    "owningUser": {
                        "title": "Owning User ID",
                        "type": "integer",
                        "description": "The user (account) that owns the alert. Typically set to the user that is responsible for resolving the alert.",
                        "format": "int64",
                        "example": 207
                    },
                    "ticketGroup": {
                        "title": "Service Ticket Group Name",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "The default group name to use when generating a service ticket. This field is used for communication with external systems",
                        "nullable": true,
                        "example": "MFOPS"
                    },
                    "lastNote": {
                        "title": "Last Alert Note Text",
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text content of the note.\n\n### Syntax and Constraints\n\nThe value **should** be interpreted as plain text.",
                        "example": "I'm working on this now."
                    },
                    "duplicateCount": {
                        "title": "Duplicate Count",
                        "minimum": 0,
                        "type": "integer",
                        "description": "The number of alerts that were considered duplicate alerts based on the Alert Central Service duplicate detection logic (which is configurable).",
                        "format": "int32",
                        "example": 13
                    },
                    "tickets": {
                        "title": "Service Ticket for Alert (Output)",
                        "uniqueItems": true,
                        "type": "array",
                        "description": "The output object that results from a service ticket request to the configured service management integration instance (NIM SM). This object includes the ID of the newly created service ticket and the URL hosted by the NIM-SM server that represents the ticket.",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/TicketOutput"
                        }
                    },
                    "custom": {
                        "title": "Custom Attributes",
                        "type": "object",
                        "additionalProperties": {
                            "title": "Custom Attributes",
                            "type": "string",
                            "description": "Set of custom string attributes.\n\n### Syntax and Constraints\n\nA custom attribute **must not** be used if an appropriate explicit attribute that could hold its value exists.\n\nThe keys for the custom attributes **must** follow the general naming convention that apply to the explicitly defined alert attributes.\n\nThe values of custom attributes must be strings. In cases where a non-string value is provided it will be converted to one.\n\nIt is the responsibility of any particular alert source to ensure that the meaning of a particular custom attribute is clear and stable in the corresponding scope. The scope is up to the alert source and might be global or be dependent, for example, on the included `agentType`, `agentIdentifier`, `resourceType`, and `resourceIdentifier` values.\n\nA maximum size limit of the custom attribute keys and values altogether is 1000000 characters. Any operation accepting this value *will* reject it if its size is above this limit.",
                            "example": "{\"plantType\":\"nuclear\",\"waterLevel\":\"critical\"}"
                        },
                        "description": "Set of custom string attributes.\n\n### Syntax and Constraints\n\nA custom attribute **must not** be used if an appropriate explicit attribute that could hold its value exists.\n\nThe keys for the custom attributes **must** follow the general naming convention that apply to the explicitly defined alert attributes.\n\nThe values of custom attributes must be strings. In cases where a non-string value is provided it will be converted to one.\n\nIt is the responsibility of any particular alert source to ensure that the meaning of a particular custom attribute is clear and stable in the corresponding scope. The scope is up to the alert source and might be global or be dependent, for example, on the included `agentType`, `agentIdentifier`, `resourceType`, and `resourceIdentifier` values.\n\nA maximum size limit of the custom attribute keys and values altogether is 1000000 characters. Any operation accepting this value *will* reject it if its size is above this limit.",
                        "example": {
                            "plantType": "nuclear",
                            "waterLevel": "critical"
                        }
                    }
                },
                "description": "Alert object used for output operations."
            },
            "AlertNoteInput": {
                "title": "Alert Note (input)",
                "required": [
                    "content"
                ],
                "type": "object",
                "properties": {
                    "content": {
                        "title": "Alert Note Text",
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text content of the note.\n\n### Syntax and Constraints\n\nThe value **should** be interpreted as plain text.",
                        "example": "I'm working on this now."
                    }
                },
                "description": "Alert Note object used for input operations."
            },
            "AlertNoteOutput": {
                "title": "Alert Note (output)",
                "required": [
                    "content",
                    "createdAt",
                    "createdBy",
                    "noteId"
                ],
                "type": "object",
                "properties": {
                    "content": {
                        "title": "Alert Note Text",
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text content of the note.\n\n### Syntax and Constraints\n\nThe value **should** be interpreted as plain text.",
                        "example": "I'm working on this now."
                    },
                    "noteId": {
                        "title": "Note ID",
                        "type": "integer",
                        "description": "A unique identifier for an alert note.",
                        "format": "int64",
                        "example": 123
                    },
                    "createdBy": {
                        "title": "Created By",
                        "type": "integer",
                        "description": "Unique identifier for a user.",
                        "format": "int64",
                        "example": 17
                    },
                    "createdAt": {
                        "title": "Created At",
                        "type": "string",
                        "description": "Date and time that the note was created.",
                        "format": "date-time"
                    }
                },
                "description": "Alert Note object used for output operations."
            },
            "ConfigurationPropertiesApiDoc": {
                "title": "Configuration Property Set",
                "type": "object",
                "description": "### Overview\nSet of configuration properties with values.\n\nA property can have any valid JSON value - object, array, string, number, boolean, and null.",
                "example": {
                    "service.ticketing.enabled": true,
                    "service.alertSeverity.permission": "escalate"
                }
            },
            "AlertUpdateWithId": {
                "title": "Alert (update multiple)",
                "minProperties": 2,
                "required": [
                    "alertId"
                ],
                "type": "object",
                "properties": {
                    "eventAt": {
                        "title": "Event At",
                        "type": "string",
                        "description": "Absolute time identifying when the event triggering the alert occurred. If no value is provided explicitly, the default value is the instant that the service received the alert (equal to `createdAt`).",
                        "format": "date-time"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Description of the alert. Should describe the problem with the resource or component which triggered the alert.",
                        "example": "CPU usage percentage total value 78% is over warning threshold of 75%."
                    },
                    "additionalInformation": {
                        "title": "Additional Information",
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Additional alert details that could not be included in the `description`.\n\nThis **may** include information helpful during debugging/remediation, additional explanation of the problem, auxiliary error codes, documentation references, explanation of terms, recommended remediation steps, suggested debugging steps, and so on.",
                        "example": "CP CPU usage percentage total"
                    },
                    "messageId": {
                        "title": "Message ID",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "A message identifier that best represents the alert situation.",
                        "example": "ACS0001E"
                    },
                    "agentReferenceId": {
                        "title": "Agent Reference ID",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "A reference identifying the alert uniquely within the scope of the source Agent.\n\n### Syntax and Constraints\n\n**Should** be unique in the namespace of the source agent however, the service does not impose any strict uniqueness checks on the value.",
                        "example": "EX31.00D8D657AA1302B47A"
                    },
                    "severity": {
                        "title": "Severity",
                        "maximum": 5,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The severity of the alert.\n\n### Syntax and Constraints\n\nRepresented by raw numeric values to enable customization and internationalization of the corresponding labels within user interfaces.\n\nThe lowest numeric value represents the highest alert severity while the highest numeric value represents the lowest alert severity.\n\nThe default mapping of the value to English (en_US) labels is:\n- 1 ~ *Critical*\n- 2 ~ *Major*\n- 3 ~ *Minor*\n- 4 ~ *Warning*\n- 5 ~ *Info*",
                        "format": "int32",
                        "example": 2
                    },
                    "expiresAt": {
                        "title": "Expires At",
                        "type": "string",
                        "description": "Absolute or relative time when the alert is to automatically expire (be closed).\n\nThe relative semantic of the value is only accepted on input, for example `PT1H30M` and is relative to `createdAt` time. On output the service always uses the absolute time representation.\n\n### Behavior\n\nWhen a value that is considered to be in the past is received the expiration logic will trigger immediately.",
                        "format": "date-time"
                    },
                    "owningGroup": {
                        "title": "Owning Group ID",
                        "type": "integer",
                        "description": "The group (queue) that owns the alert. Typically set to the group that is responsible for resolving the alert.",
                        "format": "int64",
                        "example": 307
                    },
                    "owningUser": {
                        "title": "Owning User ID",
                        "type": "integer",
                        "description": "The user (account) that owns the alert. Typically set to the user that is responsible for resolving the alert.",
                        "format": "int64",
                        "example": 207
                    },
                    "custom": {
                        "title": "Custom Attributes",
                        "type": "object",
                        "additionalProperties": {
                            "title": "Custom Attributes",
                            "type": "string",
                            "description": "Set of custom string attributes.\n\n### Syntax and Constraints\n\nA custom attribute **must not** be used if an appropriate explicit attribute that could hold its value exists.\n\nThe keys for the custom attributes **must** follow the general naming convention that apply to the explicitly defined alert attributes.\n\nThe values of custom attributes must be strings. In cases where a non-string value is provided it will be converted to one.\n\nIt is the responsibility of any particular alert source to ensure that the meaning of a particular custom attribute is clear and stable in the corresponding scope. The scope is up to the alert source and might be global or be dependent, for example, on the included `agentType`, `agentIdentifier`, `resourceType`, and `resourceIdentifier` values.\n\nA maximum size limit of the custom attribute keys and values altogether is 1000000 characters. Any operation accepting this value *will* reject it if its size is above this limit.",
                            "example": "{\"plantType\":\"nuclear\",\"waterLevel\":\"critical\"}",
                            "default": "{}"
                        },
                        "description": "Set of custom string attributes.\n\n### Syntax and Constraints\n\nA custom attribute **must not** be used if an appropriate explicit attribute that could hold its value exists.\n\nThe keys for the custom attributes **must** follow the general naming convention that apply to the explicitly defined alert attributes.\n\nThe values of custom attributes must be strings. In cases where a non-string value is provided it will be converted to one.\n\nIt is the responsibility of any particular alert source to ensure that the meaning of a particular custom attribute is clear and stable in the corresponding scope. The scope is up to the alert source and might be global or be dependent, for example, on the included `agentType`, `agentIdentifier`, `resourceType`, and `resourceIdentifier` values.\n\nA maximum size limit of the custom attribute keys and values altogether is 1000000 characters. Any operation accepting this value *will* reject it if its size is above this limit.",
                        "example": {
                            "plantType": "nuclear",
                            "waterLevel": "critical"
                        },
                        "default": {}
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "description": "Status of the alert.",
                        "example": "New",
                        "enum": [
                            "New",
                            "Assigned",
                            "Closed"
                        ]
                    },
                    "ticketGroup": {
                        "title": "Service Ticket Group Name",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "The default group name to use when generating a service ticket. This field is used for communication with external systems",
                        "nullable": true,
                        "example": "MFOPS"
                    },
                    "alertId": {
                        "title": "Alert ID",
                        "type": "integer",
                        "description": "Unique identifier for the alert being changed.",
                        "format": "int64",
                        "example": 107
                    }
                },
                "description": "Alert object used for update multiple alerts operation."
            },
            "AlertBulkUpdateOutput": {
                "title": "Alert Bulk Update Result",
                "required": [
                    "messages",
                    "resource",
                    "result"
                ],
                "type": "object",
                "properties": {
                    "result": {
                        "title": "Result",
                        "type": "integer",
                        "description": "Indicates the result of the individual alert update.\n\nThe values follow the same semantic that is used in response code of the corresponding non-bulk operations, specifically:\n\n- 200 - Alert was successfully updated\n- 400 - The alert update object was not valid\n- 403 - User did not have privileges to update the alert\n- 404 - The alert does not exist\n- 500 - Any other issue\n\nFor failed requests one or more messages are typically included identifying the nature of the problem.",
                        "format": "int32",
                        "enum": [
                            200,
                            400,
                            403,
                            404,
                            500
                        ]
                    },
                    "messages": {
                        "title": "Messages",
                        "type": "array",
                        "description": "Messages identifying reasons for a failed result.",
                        "items": {
                            "$ref": "#/components/schemas/ResponseMessage"
                        }
                    },
                    "resource": {
                        "$ref": "#/components/schemas/AlertOutputForBulk"
                    }
                },
                "description": "Result of a bulk alert update including the alert data."
            },
            "AlertOutputForBulk": {
                "title": "Resource",
                "type": "object",
                "description": "Resulting updated alert in case of success, or object containing the alert ID in case of failure.",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/AlertOutput"
                    },
                    {
                        "$ref": "#/components/schemas/OnlyAlertId"
                    }
                ]
            },
            "OnlyAlertId": {
                "title": "Alert Id (Input)",
                "required": [
                    "alertId"
                ],
                "type": "object",
                "properties": {
                    "alertId": {
                        "title": "alertId",
                        "type": "integer",
                        "description": "A unique identifier of an alert.",
                        "format": "int64",
                        "example": 107
                    }
                },
                "description": "A unique object holding identifier of an alert."
            },
            "AlertUpdate": {
                "title": "Alert (update)",
                "type": "object",
                "properties": {
                    "eventAt": {
                        "title": "Event At",
                        "type": "string",
                        "description": "Absolute time identifying when the event triggering the alert occurred. If no value is provided explicitly, the default value is the instant that the service received the alert (equal to `createdAt`).",
                        "format": "date-time"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Description of the alert. Should describe the problem with the resource or component which triggered the alert.",
                        "example": "CPU usage percentage total value 78% is over warning threshold of 75%."
                    },
                    "additionalInformation": {
                        "title": "Additional Information",
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Additional alert details that could not be included in the `description`.\n\nThis **may** include information helpful during debugging/remediation, additional explanation of the problem, auxiliary error codes, documentation references, explanation of terms, recommended remediation steps, suggested debugging steps, and so on.",
                        "example": "CP CPU usage percentage total"
                    },
                    "messageId": {
                        "title": "Message ID",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string",
                        "description": "A message identifier that best represents the alert situation.",
                        "example": "ACS0001E"
                    },
                    "agentReferenceId": {
                        "title": "Agent Reference ID",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "A reference identifying the alert uniquely within the scope of the source Agent.\n\n### Syntax and Constraints\n\n**Should** be unique in the namespace of the source agent however, the service does not impose any strict uniqueness checks on the value.",
                        "example": "EX31.00D8D657AA1302B47A"
                    },
                    "severity": {
                        "title": "Severity",
                        "maximum": 5,
                        "minimum": 1,
                        "type": "integer",
                        "description": "The severity of the alert.\n\n### Syntax and Constraints\n\nRepresented by raw numeric values to enable customization and internationalization of the corresponding labels within user interfaces.\n\nThe lowest numeric value represents the highest alert severity while the highest numeric value represents the lowest alert severity.\n\nThe default mapping of the value to English (en_US) labels is:\n- 1 ~ *Critical*\n- 2 ~ *Major*\n- 3 ~ *Minor*\n- 4 ~ *Warning*\n- 5 ~ *Info*",
                        "format": "int32",
                        "example": 2
                    },
                    "expiresAt": {
                        "title": "Expires At",
                        "type": "string",
                        "description": "Absolute or relative time when the alert is to automatically expire (be closed).\n\nThe relative semantic of the value is only accepted on input, for example `PT1H30M` and is relative to `createdAt` time. On output the service always uses the absolute time representation.\n\n### Behavior\n\nWhen a value that is considered to be in the past is received the expiration logic will trigger immediately.",
                        "format": "date-time"
                    },
                    "owningGroup": {
                        "title": "Owning Group ID",
                        "type": "integer",
                        "description": "The group (queue) that owns the alert. Typically set to the group that is responsible for resolving the alert.",
                        "format": "int64",
                        "example": 307
                    },
                    "owningUser": {
                        "title": "Owning User ID",
                        "type": "integer",
                        "description": "The user (account) that owns the alert. Typically set to the user that is responsible for resolving the alert.",
                        "format": "int64",
                        "example": 207
                    },
                    "custom": {
                        "title": "Custom Attributes",
                        "type": "object",
                        "additionalProperties": {
                            "title": "Custom Attributes",
                            "type": "string",
                            "description": "Set of custom string attributes.\n\n### Syntax and Constraints\n\nA custom attribute **must not** be used if an appropriate explicit attribute that could hold its value exists.\n\nThe keys for the custom attributes **must** follow the general naming convention that apply to the explicitly defined alert attributes.\n\nThe values of custom attributes must be strings. In cases where a non-string value is provided it will be converted to one.\n\nIt is the responsibility of any particular alert source to ensure that the meaning of a particular custom attribute is clear and stable in the corresponding scope. The scope is up to the alert source and might be global or be dependent, for example, on the included `agentType`, `agentIdentifier`, `resourceType`, and `resourceIdentifier` values.\n\nA maximum size limit of the custom attribute keys and values altogether is 1000000 characters. Any operation accepting this value *will* reject it if its size is above this limit.",
                            "example": "{\"plantType\":\"nuclear\",\"waterLevel\":\"critical\"}",
                            "default": "{}"
                        },
                        "description": "Set of custom string attributes.\n\n### Syntax and Constraints\n\nA custom attribute **must not** be used if an appropriate explicit attribute that could hold its value exists.\n\nThe keys for the custom attributes **must** follow the general naming convention that apply to the explicitly defined alert attributes.\n\nThe values of custom attributes must be strings. In cases where a non-string value is provided it will be converted to one.\n\nIt is the responsibility of any particular alert source to ensure that the meaning of a particular custom attribute is clear and stable in the corresponding scope. The scope is up to the alert source and might be global or be dependent, for example, on the included `agentType`, `agentIdentifier`, `resourceType`, and `resourceIdentifier` values.\n\nA maximum size limit of the custom attribute keys and values altogether is 1000000 characters. Any operation accepting this value *will* reject it if its size is above this limit.",
                        "example": {
                            "plantType": "nuclear",
                            "waterLevel": "critical"
                        },
                        "default": {}
                    },
                    "status": {
                        "title": "Status",
                        "type": "string",
                        "description": "Status of the alert.",
                        "example": "New",
                        "enum": [
                            "New",
                            "Assigned",
                            "Closed"
                        ]
                    },
                    "ticketGroup": {
                        "title": "Service Ticket Group Name",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "The default group name to use when generating a service ticket. This field is used for communication with external systems",
                        "nullable": true,
                        "example": "MFOPS"
                    }
                },
                "description": "Alert object used for update alert operation.",
                "example": {
                    "status": "Assigned",
                    "additionalInformation": null
                }
            },
            "AlertReopenInput": {
                "title": "Reopen Alerts (Input)",
                "required": [
                    "alerts",
                    "comment"
                ],
                "type": "object",
                "properties": {
                    "alerts": {
                        "title": "alerts",
                        "uniqueItems": true,
                        "type": "array",
                        "description": "Set of alertIds to reopen.",
                        "items": {
                            "$ref": "#/components/schemas/OnlyAlertId"
                        }
                    },
                    "comment": {
                        "title": "comment",
                        "maxLength": 10000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Text content of the alert reopening justification. Will be stored as an alert note.",
                        "example": "Reopen due to additional changes required"
                    }
                },
                "description": "Reopen Alerts object used for reopen operation."
            },
            "UserOutput": {
                "title": "User (Output).",
                "required": [
                    "description",
                    "firstName",
                    "lastName",
                    "status",
                    "userId",
                    "userName"
                ],
                "type": "object",
                "properties": {
                    "userName": {
                        "title": "User Name",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Name of an application user.\n\n### Syntax and Constraints\n\nThe value is not case-sensitive and must be unique across all user resource entries that have not been archived.",
                        "example": "dubois01"
                    },
                    "firstName": {
                        "title": "User First Name",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string",
                        "description": "User's first name.",
                        "example": "Alice"
                    },
                    "lastName": {
                        "title": "User Last Name",
                        "maxLength": 500,
                        "minLength": 1,
                        "type": "string",
                        "description": "User's middle names (if any) and last name.",
                        "example": "Anita Dubois"
                    },
                    "description": {
                        "title": "User Description",
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "description": "Description associated with a user. Typically only used for generic service accounts in lieu of First/Last name information.",
                        "example": "Common service account."
                    },
                    "userId": {
                        "title": "User ID",
                        "type": "integer",
                        "description": "Unique identifier for a `user`.",
                        "format": "int64",
                        "example": 207
                    },
                    "status": {
                        "title": "User Status",
                        "type": "string",
                        "description": "Identifies the status of the user resource.\n\nAn archived user has limited metadata and can not be selected for any operations. An archived user cannot be un-archived.",
                        "example": "Active",
                        "enum": [
                            "Active",
                            "Archived"
                        ]
                    }
                },
                "description": "User account entry used for output operations when not authenticated as an Administrator."
            },
            "SessionInfoOutput": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/UserOutputForAdministrators"
                    }
                }
            },
            "QuickRefOutput": {
                "title": "QuickRef (Output)",
                "required": [
                    "additional",
                    "content",
                    "copyright",
                    "followUp",
                    "heading"
                ],
                "type": "object",
                "properties": {
                    "heading": {
                        "title": "QuickRef message heading",
                        "type": "string",
                        "description": "Heading of QuickRef message",
                        "example": "IEF450I jobname .procstep. stepname - ABEND {Scde | Ucde}\n         REASON=xxxxxxxx .TIME=hh.mm.ss."
                    },
                    "copyright": {
                        "title": "Copyright",
                        "type": "string",
                        "description": "Copyright of QuickRef message",
                        "example": "Text Below Copyright (c) 2023, IBM"
                    },
                    "followUp": {
                        "title": "Follow up information",
                        "type": "string",
                        "description": "Follow up information in case this is a follow up message.",
                        "example": "V=IBM P=Z/OS SYSTEM MSGS R=V2R5 I=IEF472I"
                    },
                    "content": {
                        "title": "Message content",
                        "type": "string",
                        "description": "Content of QuickRef message.",
                        "example": "Explanation\n\n  A job step abnormally ended.\n\n  In the message text:\n\n  jobname\n      The name of the job.\n\n  procstep\n      The name of the step in the procedure.\n\n  stepname\n      The name of the job step.\n\n..."
                    },
                    "additional": {
                        "title": "Additional messages",
                        "type": "array",
                        "description": "QuickRef messages which are related to parent QuickRef message.",
                        "example": "<Another QuickRefOut JSON object>",
                        "items": {
                            "$ref": "#/components/schemas/QuickRefOutput"
                        }
                    }
                },
                "description": "QuickRef structured data."
            },
            "QuickRefConfigOutput": {
                "title": "QuickRefConfig (Output)",
                "required": [
                    "prefix"
                ],
                "type": "object",
                "properties": {
                    "prefix": {
                        "title": "Message Prefixes",
                        "type": "array",
                        "description": "Message prefixes referencable by QuickRef.",
                        "example": "[ CSQ, DSN]]",
                        "items": {
                            "title": "Message Prefixes",
                            "type": "string",
                            "description": "Message prefixes referencable by QuickRef.",
                            "example": "[ CSQ, DSN]]"
                        }
                    }
                },
                "description": "QuickRefConfig structured data."
            },
            "LogOutput": {
                "title": "Log (Output)",
                "required": [
                    "opslogOutputs",
                    "sysplexName",
                    "systemName"
                ],
                "type": "object",
                "properties": {
                    "sysplexName": {
                        "title": "Sysplex name",
                        "type": "string",
                        "description": "Sysplex name",
                        "example": "PLEXC1"
                    },
                    "systemName": {
                        "title": "System name",
                        "type": "string",
                        "description": "System name",
                        "example": "CA31"
                    },
                    "opslogOutputs": {
                        "title": "OPSLog objects",
                        "type": "array",
                        "description": "List of OPSLog objects.",
                        "items": {
                            "$ref": "#/components/schemas/OpslogOutput"
                        }
                    }
                },
                "description": "Opslog records with additional data."
            },
            "OpslogOutput": {
                "title": "Opslog (output)",
                "required": [
                    "content",
                    "eventAt",
                    "jobName"
                ],
                "type": "object",
                "properties": {
                    "eventAt": {
                        "title": "Opslog Event At",
                        "type": "string",
                        "description": "Absolute time identifying when the event has been logged.",
                        "format": "date-time"
                    },
                    "content": {
                        "title": "Opslog Content",
                        "type": "string",
                        "description": "Content of a recorded Opslog message.",
                        "example": "$HASP375 LQ       ESTIMATE EXCEEDED BY             110,000  LINES"
                    },
                    "jobName": {
                        "title": "Job name",
                        "type": "string",
                        "description": "The name of the job that generated the event.",
                        "example": "INIT"
                    }
                },
                "description": "Opslog object used for output operations."
            },
            "AlertChangeOutput": {
                "title": "Alert Change (output)",
                "required": [
                    "alertId",
                    "changeId",
                    "changedAt",
                    "changedBy",
                    "difference"
                ],
                "type": "object",
                "properties": {
                    "changeId": {
                        "title": "Change ID",
                        "type": "integer",
                        "description": "A unique identifier of the alert change entry.",
                        "format": "int64",
                        "example": 707
                    },
                    "alertId": {
                        "title": "Alert ID",
                        "type": "integer",
                        "description": "A unique identifier for an `alert`.",
                        "format": "int64",
                        "example": 107
                    },
                    "changedBy": {
                        "title": "Changed By",
                        "type": "integer",
                        "description": "Unique identifier of the user that initiated the change.\n\nIf the value is `null` it represents the Alert Central system rather than an explicit user account.",
                        "format": "int64",
                        "example": 207
                    },
                    "changedAt": {
                        "title": "Changed At",
                        "type": "string",
                        "description": "Date and time that the change was made.",
                        "format": "date-time"
                    },
                    "difference": {
                        "title": "Difference",
                        "type": "object",
                        "additionalProperties": {
                            "title": "Difference",
                            "type": "object",
                            "description": "Object containing the changes made to the alert.\n\n### Syntax and Constraints\n\nThe object simply contains all the attributes that changed within the `alert` object and their new values."
                        },
                        "description": "Object containing the changes made to the alert.\n\n### Syntax and Constraints\n\nThe object simply contains all the attributes that changed within the `alert` object and their new values."
                    }
                },
                "description": "Alert Change object used for output operations."
            },
            "ArchivedUserOutput": {
                "title": "Archived User (Output).",
                "required": [
                    "status",
                    "userId",
                    "userName"
                ],
                "type": "object",
                "properties": {
                    "userName": {
                        "title": "User Name",
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "description": "Name of an application user.\n\n### Syntax and Constraints\n\nThe value is not case-sensitive and must be unique across all user resource entries that have not been archived.",
                        "example": "dubois01"
                    },
                    "userId": {
                        "title": "User ID",
                        "type": "integer",
                        "description": "Unique identifier for a `user`.",
                        "format": "int64",
                        "example": 207
                    },
                    "status": {
                        "title": "User Status",
                        "type": "string",
                        "description": "Identifies the status of the user resource.\n\nAn archived user has limited metadata and can not be selected for any operations. An archived user cannot be un-archived.",
                        "example": "Archived",
                        "enum": [
                            "Archived"
                        ]
                    }
                },
                "description": "Archived user account entry used for output operations."
            }
        },
        "securitySchemes": {
            "jwtCookie": {
                "type": "apiKey",
                "name": "apimlAuthenticationToken",
                "in": "cookie"
            },
            "jwtBearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}