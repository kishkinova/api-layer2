{
    "openapi": "3.0.0",
    "info": {
        "description": "REST API for the API Gateway service, which is a component of the API\nMediation Layer. Use this API to perform tasks such as logging in with the\nmainframe credentials and checking authorization to mainframe resources.",
        "version": "1.1.2",
        "title": "API Gateway"
    },
    "tags": [
        {
            "name": "Security",
            "description": "Mainframe authentication and authorization operations"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Security"
                ],
                "summary": "Authenticate mainframe user credentials and return authentication token.",
                "description": "Use the `/login` API to authenticate mainframe user credentials and return authentication token.\n\nThe login request requires the user credentials in one of the following formats:  * Basic access authentication\n  * JSON body, which provides an object with the user credentials\n\n  \nThe response is an empty body and a token in a secure HttpOnly cookie named `apimlAuthenticationToken`.\n",
                "operationId": "loginUsingPOST",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    },
                    "description": "Specifies the user credentials to be authenticated."
                },
                "security": [
                    {
                        "LoginBasicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Authenticated",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Cookie named apimlAuthenticationToken contains authentication\ntoken.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    }
                }
            }
        },
        "/query": {
            "get": {
                "tags": [
                    "Security"
                ],
                "summary": "Validate the authentication token.",
                "description": "Use the `/query` API to validate the token and retrieve the information associated with the token.\n\nThe query request requires the token in one of the following formats:  * Cookie named `apimlAuthenticationToken`.\n  * Bearer authentication\n    **Header example:** Authorization: Bearer *token*\n\n    \nThe response is a JSON object, which contains information associated with the token.\n",
                "operationId": "validateUsingGET",
                "security": [
                    {
                        "CookieAuth": []
                    },
                    {
                        "Bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Authentication"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "405": {
                        "description": "Method Not Allowed"
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "/api/v1/gateway/auth"
        }
    ],
    "components": {
        "securitySchemes": {
            "LoginBasicAuth": {
                "type": "HTTP",
                "scheme": "BASIC"
            },
            "Bearer": {
                "type": "APIKEY",
                "name": "Authorization",
                "in": "HEADER"
            },
            "CookieAuth": {
                "type": "APIKEY",
                "name": "apimlAuthenticationToken",
                "in": "COOKIE"
            }
        },
        "schemas": {
            "LoginRequest": {
                "type": "object",
                "title": "Credentials",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "username",
                    "password"
                ],
                "example": {
                    "username": "John",
                    "password": "qwerty"
                }
            },
            "Authentication": {
                "type": "object",
                "title": "Authentication",
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "Specifies the identity of the logged-in user."
                    },
                    "domain": {
                        "type": "string",
                        "description": "Specifies the name of the security domain where the user has been\nlogged-in."
                    },
                    "creation": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Specifies the UNIX timestamp of the login time, in UTC."
                    },
                    "expiration": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Specifies the UNIX timestamp of the token expiration time, in UTC."
                    }
                },
                "example": {
                    "userId": "John",
                    "domain": "SAFRealm",
                    "creation": "2019-05-13T12:47:04.000+0000",
                    "expiration": "2019-05-14T12:47:04.000+0000"
                }
            }
        }
    }
}
