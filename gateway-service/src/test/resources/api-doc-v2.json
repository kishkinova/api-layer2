{
    "swagger": "2.0",
    "info": {
        "description": "Sample RESTful API services discoverable in the API Mediation Layer",
        "version": "0.0.1",
        "title": "Sample API"
    },
    "host": "https://ca3x.ca.com:10010",
    "basePath": "",
    "tags": [
        {
            "name": "The assembler endpoint",
            "description": "Echo Controller"
        },
        {
            "name": "The pet API",
            "description": "Pet Controller"
        }
    ],
    "paths": {
        "/sampleservice/api/v1/pets": {
            "get": {
                "tags": [
                    "The pet API"
                ],
                "summary": "List all existing pets",
                "description": "Returns information about all existing pets",
                "operationId": "getAllPetsUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of pets",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Pet"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "The pet API"
                ],
                "summary": "Add a new pet",
                "description": "Creates a new pet",
                "operationId": "addPetUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "pet",
                        "description": "Pet object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New created pet",
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    },
                    "400": {
                        "description": "Request object is not valid",
                        "schema": {
                            "$ref": "#/definitions/ApiMessage"
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "schema": {
                            "$ref": "#/definitions/ApiMessage"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "ESM token": []
                    }
                ]
            }
        },
        "/sampleservice/api/v1/pets/{id}": {
            "get": {
                "tags": [
                    "The pet API"
                ],
                "summary": "Find pet by id",
                "description": "Returns a single pet",
                "operationId": "getPetByIdUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Pet id to return",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "schema": {
                            "$ref": "#/definitions/ApiMessage"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "The pet with id is not found.",
                        "schema": {
                            "$ref": "#/definitions/ApiMessage"
                        }
                    }
                },
                "security": [
                    {
                        "ESM token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "The pet API"
                ],
                "summary": "Update an existing pet",
                "description": "Change information for an existing pet",
                "operationId": "updatePetByIdUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Pet id to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "pet",
                        "description": "Pet object that needs to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet updated",
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "Authentication is required",
                        "schema": {
                            "$ref": "#/definitions/ApiMessage"
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Pet not found",
                        "schema": {
                            "$ref": "#/definitions/ApiMessage"
                        }
                    }
                },
                "security": [
                    {
                        "ESM token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "The pet API"
                ],
                "summary": "Delete a pet",
                "description": "Removes an existing pet",
                "operationId": "deletePetByIdUsingDELETE",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Pet id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Pet updated",
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    },
                    "401": {
                        "description": "Authentication is required",
                        "schema": {
                            "$ref": "#/definitions/ApiMessage"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiMessage"
                        }
                    },
                    "404": {
                        "description": "Pet not found",
                        "schema": {
                            "$ref": "#/definitions/ApiMessage"
                        }
                    }
                },
                "security": [
                    {
                        "ESM token": []
                    }
                ]
            }
        },
        "/sampleservice/api/v1/echo": {
            "get": {
                "tags": [
                    "The assembler endpoint"
                ],
                "summary": "Calls assembler service",
                "description": "Returns echo message",
                "operationId": "echoUsingGET",
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "message",
                        "in": "query",
                        "description": "message to echo",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EchoMessage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "ApiMessage": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Message"
                    }
                }
            },
            "title": "ApiMessage"
        },
        "EchoMessage": {
            "type": "object",
            "properties": {
                "jobName": {
                    "type": "string"
                },
                "jobNumber": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "stepName": {
                    "type": "string"
                },
                "system": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            },
            "title": "EchoMessage"
        },
        "Message": {
            "type": "object",
            "properties": {
                "messageAction": {
                    "type": "string"
                },
                "messageComponent": {
                    "type": "string"
                },
                "messageContent": {
                    "type": "string"
                },
                "messageInstanceId": {
                    "type": "string"
                },
                "messageKey": {
                    "type": "string"
                },
                "messageNumber": {
                    "type": "string"
                },
                "messageParameters": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {}
                    }
                },
                "messageReason": {
                    "type": "string"
                },
                "messageSource": {
                    "type": "string"
                },
                "messageType": {
                    "type": "string",
                    "enum": [
                        "ERROR",
                        "WARNING",
                        "INFO",
                        "DEBUG",
                        "TRACE"
                    ]
                }
            },
            "title": "Message"
        },
        "Pet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1,
                    "description": "The id is of the pet"
                },
                "name": {
                    "type": "string",
                    "example": "Falco",
                    "description": "The name of the pet"
                }
            },
            "title": "Pet",
            "description": "A Pet Object"
        }
    }
}
