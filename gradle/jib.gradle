def setJib(componentName, javaAgentPort, debugPort) {
    def imageTag = project.hasProperty("zowe.docker.tag") ? project.getProperty("zowe.docker.tag"): "latest"
    def imageName =  project.hasProperty("zowe.docker.container") ? "${project.getProperty("zowe.docker.container")}${componentName}:${imageTag}" : "ghcr.io/zowe/${componentName}:${imageTag}"

    jib.to.image = imageName
    jib.to.auth.username = project.hasProperty("zowe.docker.username") ? project.getProperty("zowe.docker.username") : ""
    jib.to.auth.password = project.hasProperty("zowe.docker.password") ? project.getProperty("zowe.docker.password") : ""
    jib.container.args = ['--spring.config.additional-location=file:/docker/' + componentName + '.yml', '--spring.profiles.include=dev,debug']

    jib.container.jvmFlags = project.hasProperty("zowe.docker.debug") ? ['-javaagent:/jacocoagent.jar=output=tcpserver,address=*,port=' + javaAgentPort, '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=' + debugPort]: ['-javaagent:/jacocoagent.jar=output=tcpserver,address=*,port=' + javaAgentPort]
    jib.container.ports = ['10015/udp', '10015/tcp']
    jib.extraDirectories.paths = ['../config', '../keystore', '../scripts']
}

ext.setJib =  { componentName, javaAgentPort, debugPort ->
    setJib(componentName, javaAgentPort, debugPort)
}

// docker run --rm -it -p 10015:10015/tcp -P -p 10015:10015/udp ghcr.io/zowe/api-catalog-services-standalone:latest
