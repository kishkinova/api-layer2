apply plugin: 'jacoco'

ext.javaProjectsWithUnitTests = [
    'api-catalog-services',
    'common-service-core',
    'discoverable-client',
    'discovery-service',
    'apiml-common',
    'apiml-utility',
    'caching-service',
    'gateway-service',
    'onboarding-enabler-java',
    'onboarding-enabler-spring',
    'onboarding-enabler-java-sample-app',
    'security-module',
    'security-service-client-spring',
    'apiml-security-common',
    'zaas-client'
]

ext.jacocoProjects = subprojects.findAll { it.name in javaProjectsWithUnitTests }

configure(jacocoProjects) {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    jacoco {
        toolVersion = '0.8.4'
    }

    jacocoTestReport {
        dependsOn test
        reports {
            xml.enabled true
            html.enabled true
        }
    }
}

task jacocoFullReport(type: JacocoReport) {
    description = 'Generates an aggregate report from all subprojects'
    dependsOn(jacocoProjects.jacocoTestReport)

    getAdditionalSourceDirs().from(
        files(jacocoProjects.sourceSets.main.allSource.srcDirs)
    )

    getSourceDirectories().from(
        files(jacocoProjects.sourceSets.main.allSource.srcDirs)
    )

    getClassDirectories().from(
        files(jacocoProjects.sourceSets.main.output)
    )

    getExecutionData().from(
        files(jacocoProjects.jacocoTestReport.executionData)
    )

    reports {
        html.enabled = true
        xml.enabled = true
    }

    doFirst {
        getExecutionData().from(
            files(executionData.findAll { it.exists() })
        )
    }
}

task coverage() {
    dependsOn jacocoFullReport, ":api-catalog-ui:javaScriptCoverage"
}
