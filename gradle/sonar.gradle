apply plugin: "org.sonarqube"

ext.pullRequest = System.getenv()['CHANGE_ID'] ?: null

sonarqube {
    properties {
        property "sonar.host.url", project.getProperty('sonar.host.url')
        property "sonar.login", project.hasProperty('sonar.login') ? project.getProperty('sonar.login') : null
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.organization", "zowe"
        property "sonar.projectKey", "zowe_api-layer"
        property "sonar.projectName", "Zowe API Mediation Layer"
        property "sonar.projectVersion", project.version
        property "sonar.language", "java"
        property "sonar.links.scm", "https://github.com/zowe/api-layer"
        property "sonar.links.ci", System.getenv()['BUILD_URL'] ?: null
        if (pullRequest != null) {
            property "sonar.pullrequest.key", System.getenv()['CHANGE_ID'] ?: null
            property "sonar.pullrequest.branch", System.getenv()['CHANGE_BRANCH'] ?: null
            property "sonar.pullrequest.base", System.getenv()['CHANGE_TARGET'] ?: null
            property "sonar.github.pullRequest", pullRequest
            property "sonar.github.repository", "zowe/api-layer"
            property "sonar.github.oauth",  project.hasProperty('sonar.github.oauth') ? project.getProperty('sonar.github.oauth') : null
        } else {
            property "sonar.branch.name", System.getenv()['BRANCH_NAME'] ?: null
        }
    }
}

subprojects {
    sonarqube {
        properties {
            property "sonar.sources", "src/main/java"
            property "sonar.tests", "src/test/java"
        }
    }
}

project(":gateway-service") {
    sonarqube {
        properties {
            property "sonar.exclusions", "src/main/resources/static/**/*"
        }
    }
}

project(":api-catalog-ui") {
    sonarqube {
        skipProject = true
    }
}

// Packaging project; sonar does not apply
project(":api-catalog-package") {
    sonarqube {
        skipProject = true
    }
}

// Packaging project; sonar does not apply
project(":discovery-package") {
    sonarqube {
        skipProject = true
    }
}

// Packaging project; sonar does not apply
project(":gateway-package") {
    sonarqube {
        skipProject = true
    }
}

// Packaging project; sonar does not apply
project(":caching-service-package") {
    sonarqube {
        skipProject = true
    }
}

// Packaging project; sonar does not apply
project(":common-lib-package") {
    sonarqube {
        skipProject = true
    }
}

// Packaging project; sonar does not apply
project(":zowe-install") {
    sonarqube {
        skipProject = true
    }
}

// Mock, not involved in the production code
project(":mock-zosmf") {
    sonarqube {
        skipProject = true
    }
}

project(":integration-tests") {
    sonarqube {
        properties {
            property "sonar.sources", "nosonar"
            property "sonar.exclusions", "nosonar/**/*"
            property "sonar.test", "src/test/java"
            property "sonar.java.binaries", "build/libs"
        }
    }
}
