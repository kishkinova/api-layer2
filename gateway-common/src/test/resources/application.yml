##############################################################################################
# Externalised parameters
###############################
environment:
    discoveryEnabled: false
    serviceId: testservice
    esmEnabled: false
    serverIpAddress: 127.0.0.1
    port: 12345
    securePort: 12345
    hostname: localhost
    ipAddress: 127.0.0.1
    preferIpAddress: false
    discoveryServiceLocation: http://localhost:12345/eureka/apps
    gatewayHostname: localhost
    gateway:
        timeoutMs: 100
    keyAlias: test
    keyPassword: pass
    keyStore: store/keystore
    keystoreType: JKS
    keystorePassword: pass
    truststore: store/truststore
    truststoreType: PKCS12
    truststorePassword: pass

spring:
  application:
    name: test

##############################################################################################
# MFAAS configuration section
###############################
mfaas:
    discovery:
        enabled: ${environment.discoveryEnabled:true}
        serviceId: ${environment.serviceId:${spring.application.name}}
        locations: ${environment.discoveryServiceLocation}
        fetchRegistry: true
        registerWithEureka: true
        region: default
        nonSecurePortEnabled: false
        securePortEnabled: false
        endpoints:
            statusPage: /application/info
            healthPage: /application/health
            homePage: /
        info:
            serviceTitle: Gateway
            description: This is the Gateway to Mainframe as a Service microservices
            enableApiDoc: false
    service:
        hostname: ${environment.hostname}
        ipAddress: ${environment.ipAddress}
    catalog-ui-tile:
        id: apimediationlayer
        title: CA API Catalog
        description: Display services which are discoverable in the MFaaS ecosystem and have API documentation
        version: 1.0.0
    server:
        preferIpAddress: ${environment.preferIpAddress:false}
        ipAddress: ${environment.ipAddress}
        port: ${environment.port}
        securePort: ${environment.securePort:${environment.port}}
        contextPath: /app
        scheme: https
    security:
        esmEnabled: ${environment.esmEnabled:false}
        sslEnabled: true
        protocol: TLSv1.2
        ciphers: TLS_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_EMPTY_RENEGOTIATION_INFO_SCSV
        keyAlias: ${environment.keyAlias}
        keyPassword: ${environment.keyPassword}
        keyStore:  ${environment.keystore}
        keyStoreType:  ${environment.keystoreType}
        keyStorePassword: ${environment.keystorePassword}
        trustStore: ${environment.truststore}
        trustStoreType: ${environment.truststoreType}
        trustStorePassword: ${environment.truststorePassword}
    gateway:
        gatewayHostname: ${environment.gatewayHostname}
        timeoutInMillis: ${environment.gatewayTimeoutInMillis:30000}
        debugHeaders: true
    service-registry:
        serviceFetchDelayInMillis:  30000
        cacheRefreshUpdateThresholdInMillis: 60000
        cacheRefreshInitialDelayInMillis: 60000
        cacheRefreshRetryDelayInMillis: 60000
