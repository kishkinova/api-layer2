#
# This program and the accompanying materials are made available under the terms of the
# Eclipse Public License v2.0 which accompanies this distribution, and is available at
# https://www.eclipse.org/legal/epl-v20.html
#
# SPDX-License-Identifier: EPL-2.0
#
# Copyright Contributors to the Zowe Project.
#

server.contextPath=/helloworld-jersey
eureka.registration.enabled=true
eureka.decoderName=JacksonJson

## -----------------------------------------------------
## The below properties are application specific.
## Each new application should set these as appropriate.
## -----------------------------------------------------

# Region where the application is deployed.
# - for AWS specify one of the AWS regions
# - for other datacenters specify a arbitrary string indicating the region.
#   This is normally specified as a -D option (eg) -Deureka.region=us-east-1
eureka.region=default

# Name of the application to be identified by other services (in this case, it is the eureka service itself)
eureka.name=helloworld-jersey

# Virtual host name by which the clients identifies this service (in this case, it is the eureka service itself)
eureka.vipAddress=helloworld-jersey

# The port where the service will be identified and will be serving requests
eureka.port=10016

# Set to false as this config is for the eureka client in the eureka server itself.
# The eureka clients running in eureka server needs to connect to servers in other zones.
#
# For other applications this should not be set (default to true) for better zone based load balancing.
eureka.preferSameZone=

## ------------------------------------------------------------------------------
## The below properties govern how clients should connect to eureka servers.
## In general these can be the same for all clients in the same eureka ecosystem.
## ------------------------------------------------------------------------------

# Change this if you want to use a DNS based lookup for determining other eureka servers (see example below)
eureka.shouldUseDns=false

# Since shouldUseDns is false, we use the following properties to explicitly specify the route to the eureka servers
eureka.serviceUrl.default=https://localhost:10011/eureka

# for the eureka server's own client config, set on-demand update to false as it may be too quick for the REST
# resource initialization
eureka.shouldOnDemandUpdateStatusChange=false

# the default eureka server application context is /eureka/v2 if deployed with eureka.war
# Set this property for custom application context.
#eureka.eurekaServer.context=eureka/v2

eureka.datacenter=

eureka.validateInstanceId=false

eureka.service.hostname=localhost
eureka.service.ipAddress=127.0.0.1
eureka.securePort=10016
eureka.nonSecurePortEnabled=false
eureka.securePortEnabled=true
eureka.lease.duration=6
eureka.lease.renewalInterval=5
eureka.preferIpAddress=false
eureka.statusPageUrl=https://localhost:10016/helloworld-jersey/application/info
eureka.healthCheckUrl=https://localhost:10016/helloworld-jersey/application/health
eureka.homePageUrl=https://localhost:10016

eureka.metadata.routed-services.uiv1.gateway-url=ui/v1
eureka.metadata.routed-services.uiv1.service-url=/helloworld-jersey/
eureka.metadata.routed-services.api-doc.gate-way-url=api/v1/api-doc
eureka.metadata.routed-services.api-doc.service-url=/helloworld-jersey/api-doc
eureka.metadata.routed-services.api.gateway-url=api/v1
eureka.metadata.routed-services.api.service-url=/helloworld-jersey
eureka.metadata.routed-services.app.gateway-url=app
eureka.metadata.routed-services.app.service-url=/helloworld-jersey/application

eureka.metadata.mfaas.api-info.apiVersionProperties.v1.title=HelloWorld Jersey
eureka.metadata.mfaas.api-info.apiVersionProperties.v1.description=REST API for a JavaEE Jersey Application
eureka.metadata.mfaas.api-info.apiVersionProperties.v1.version=1.0.0

eureka.metadata.mfaas.discovery.catalogUiTile.id=cademoapps
eureka.metadata.mfaas.discovery.catalogUiTile.title=Sample API Mediation Layer Applications
eureka.metadata.mfaas.discovery.catalogUiTile.description=Applications which demonstrate how to make a service integrated to the API Mediation Layer ecosystem
eureka.metadata.mfaas.discovery.catalogUiTile.version=1.0.0
eureka.metadata.mfaas.discovery.service.title=HelloWorld Jersey REST API
eureka.metadata.mfaas.discovery.service.description=Proof of Concept for exposing a Jersey JavaEE REST API

eureka.client.client.refresh.interval=5
eureka.client.appinfo.initial.replicate.time=5
eureka.client.appinfo.replicate.interval=5
eureka.client.serviceUrldefaultZone=https://localhost:10011/eureka
eureka.client.healthcheck.enabled=true

ssl.enabled=true
ssl.keyAlias=localhost
ssl.keyPassword=password
ssl.keyStoreType=PKCS12
ssl.protocol=TLSv1.2
ssl.keyStore=keystore/localhost/localhost.keystore.p12
ssl.keyStorePassword=password
ssl.trustStore=keystore/localhost/localhost.truststore.p12
ssl.trustStorePassword=password
ssl.trustStoreType=PKCS12
ssl.ciphers:TLS_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_EMPTY_RENEGOTIATION_INFO_SCSV
