import java.util.stream.Collectors

plugins {
    id "com.github.node-gradle.node" version "3.0.1"
}

node {
    download = true
    version = rootProject.nodejsVersion
    distBaseUrl = "https://nodejs.org/dist"
    npmInstallCommand = "install"
    workDir = file("${project.projectDir}/tools/nodejs")
    npmWorkDir = file("${project.projectDir}/tools/npm")
    yarnWorkDir = file("${project.projectDir}/tools/yarn")
    nodeProjectDir = file("${project.projectDir}/frontend")
}

// =================================================
//
//  Please manage all task dependencies in NPM and
//  not here. This should be just a wrapper around
//  package.json
//
// =================================================

task javascriptClean(type: Delete) {
    group = 'npm'
    delete 'bin', 'build', 'frontend/test-results', 'frontend/coverage', 'frontend/build'
}
clean.dependsOn javascriptClean

task nodeClean(type: Delete) {
    group = 'node'
    delete 'frontend/node_modules', 'tools/nodejs'
}

//todo hook up to test
//task npmTest(type: NpmTask) {
//    group = 'npm'
//    description = "Javascript unit tests"
//    args = ['run', 'test']
//}

task npmE2ECI(type: NpmTask) {
    group = 'npm'
    description = "Javascript End to End Tests"
    environment = ['cypress_catalogHomePage': String.format("%s://%s:%s/apicatalog/ui/v1", System.getProperty("gateway.scheme"),
                        System.getProperty("gateway.host"), System.getProperty("gateway.port")),
                   'cypress_username': System.getProperty("credentials.user"),
                   'cypress_password': System.getProperty("credentials.password")]
    args = ['run', 'cy:e2e:ci']
}


task npmBuild(type: NpmTask) {
    group = 'npm'
    description = "Produces errors in intellij run window but tests pass, dont panic. You can verify running the npm test directly"
    inputs.dir('frontend/src').withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.dir('frontend/public').withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.files('frontend/.env*').withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.file('frontend/.eslintrc').withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.file('frontend/package.json').withPathSensitivity(PathSensitivity.RELATIVE)

    outputs.dir('frontend/build')
    outputs.dir('frontend/test-resultstest-report-unit.html')
    outputs.dir('frontend/coverage')
    outputs.cacheIf { true }

    args = ['run', 'build']

}
build.dependsOn npmBuild

jar {
    enabled false
}
