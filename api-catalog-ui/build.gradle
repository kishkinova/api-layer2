plugins {
    id "com.moowork.node" version "1.3.1"
}

node {
    // Version of node to use.
    version = rootProject.nodejsVersion

    // Base URL for fetching node distributions (change if you have a mirror).
    distBaseUrl = 'https://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = false

    // Set the work directory for unpacking node
    workDir = file("${project.projectDir}/tools/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${project.projectDir}/tools/npm")

    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}/frontend")
}

task cleanBundle(type: Delete) {
    delete 'bin', 'build', 'frontend/build', 'tools/nodejs'
}

task startMockedBackend(type: NpmTask) {
    group = 'testing'
    description = "UI Mocked Backend"
    args = ['run', 'start:mock']
}

task javaScriptCoverage(type: NpmTask) {
    group = 'testing'
    description = "UI JavaScript Test Coverage"
    args = ['run', 'coverage']
}

task runTests(type: NpmTask) {
    group = 'testing'
    description = "UI JavaScript Test Coverage"
    args = ['run', 'test']
}

task runE2ETests(type: NpmTask, dependsOn: ':integration-tests:startUpCheck') {
    group = 'integration tests'
    description = "End to End Tests depending on the catalog ui"

    args = ['run', 'cy:e2e:zowe-ci']
}


task bundle(type: NpmTask) {
    inputs.dir('frontend/src').withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.dir('frontend/public').withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.files('frontend/.env*').withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.file('frontend/.eslintrc').withPathSensitivity(PathSensitivity.RELATIVE)
    inputs.file('frontend/package.json').withPathSensitivity(PathSensitivity.RELATIVE)

    outputs.dir('frontend/build')
    outputs.cacheIf { true }

    args = ['run', 'build']

}

clean.dependsOn cleanBundle
build.dependsOn bundle
javaScriptCoverage.dependsOn bundle
runTests.dependsOn bundle

