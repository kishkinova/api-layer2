buildscript {
    repositories mavenRepositories
    dependencies {
        classpath libs.spring.boot.gradle.plugin
        classpath libs.jgit
    }
}

plugins {
    alias(libs.plugins.gradle.git.properties)
}

normalization {
    runtimeClasspath {
        ignore("**/*git.properties*")
        ignore("**/*build-info.properties*")
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'com.google.cloud.tools.jib'
apply from: "../gradle/jib.gradle"

def javaAgentPort = 6305
def debugPort = 5123
def componentName = "mock-services"

setJib(componentName, javaAgentPort, debugPort)

springBoot {
    // This statement tells the Gradle Spring Boot plugin to generate a file
    // build/resources/main/META-INF/build-info.properties that is picked up by Spring Boot to display
    // via /info endpoint
    buildInfo {
        properties {
            // Generate extra build info:
            additional = [
                by: System.properties['user.name'],
                operatingSystem: "${System.properties['os.name']} (${System.properties['os.version']})",
                number: System.getenv('BUILD_NUMBER') ? System.getenv('BUILD_NUMBER') : "n/a",
                machine: InetAddress.localHost.hostName
            ]
        }
    }
}

bootRun {
    if (project.hasProperty('args')) {
        args project.args.split(',')
    }

    jvmArgs([
        '--add-opens=java.base/java.nio.channels.spi=ALL-UNNAMED',
        '--add-opens=java.base/sun.nio.ch=ALL-UNNAMED',
        '--add-opens=java.base/java.io=ALL-UNNAMED',
        '--add-opens=java.base/java.util=ALL-UNNAMED',
        '--add-opens=java.base/java.util.concurrent=ALL-UNNAMED',
        '--add-opens=java.base/java.lang.invoke=ALL-UNNAMED',
        '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
        '--add-opens=java.base/javax.net.ssl=ALL-UNNAMED',
        '--add-opens=java.base/java.net=ALL-UNNAMED'
    ])

    debugOptions {
        port = 5013
        suspend = false
        server = true
    }

    workingDir = project.rootDir

    systemProperties = System.properties
}

gitProperties {
    gitPropertiesDir = new File("${project.rootDir}/${name}/build/resources/main/META-INF")
}

dependencies {
    implementation libs.spring.boot.starter.web

    implementation libs.apache.commons.lang3
    implementation libs.jjwt
    implementation libs.jjwt.impl
    implementation libs.jjwt.jackson
    implementation libs.nimbus.jose.jwt

    testImplementation libs.spring.boot.starter.test

    compileOnly libs.lombok
    annotationProcessor libs.lombok
}


bootJar.archiveFileName = bootJar.archiveBaseName.get() + ".jar"
