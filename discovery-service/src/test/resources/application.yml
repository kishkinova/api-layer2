apiml:
    discovery:
        userid: eureka
        password: password
        allPeersUrls: http://${apiml.discovery.userid}:${apiml.discovery.password}@${apiml.service.hostname}:${apiml.service.port}/eureka/
    service:
        id: discovery
        hostname: localhost
        port: 20011
        ipAddress: 127.0.0.1
        preferIpAddress: false

spring:
    application:
        name: ${apiml.service.id}
    cloud:
        client:
            hostname: ${apiml.service.hostname}
            ipAddress: ${apiml.service.ipAddress}
    output:
        ansi:
            enabled: detect

server:
    address: ${apiml.service.ipAddress}
    port: ${apiml.service.port}

eureka:
    instance:
        hostname: ${apiml.service.hostname}
        ipAddress: ${apiml.service.ipAddress}
        preferIpAddress: ${apiml.service.preferIpAddress}
        statusPageUrl: http://${apiml.service.hostname}:${apiml.service.port}/application/info
        healthCheckUrl: http://${apiml.service.hostname}:${apiml.service.port}/application/health
    client:
        registerWithEureka: true
        fetchRegistry: true
        region: default
        serviceUrl:
            defaultZone: ${apiml.discovery.allPeersUrls}

management:
    endpoints:
        web:
            base-path: /application
    health:
        defaults:
            enabled: false
