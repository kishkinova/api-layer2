apiml:
    discovery:
        userid: eureka
        password: password
        allPeersUrls: http://${apiml.discovery.userid}:${apiml.discovery.password}@${apiml.service.hostname}:${apiml.service.port}/eureka/
    service:
        id: discovery
        hostname: localhost
        port: 20011
        ipAddress: 127.0.0.1
        preferIpAddress: false

spring:
    config:
        useLegacyProcessing: true
    application:
        name: ${apiml.service.id}
    cloud:
        compatibilityVerifier:
            enabled: false # Should be removed when upgrade to Spring Cloud 3.x
        client:
            hostname: ${apiml.service.hostname}
            ipAddress: ${apiml.service.ipAddress}
    output:
        ansi:
            enabled: detect

server:
    address: ${apiml.service.ipAddress}
    port: ${apiml.service.port}


eureka:
    instance:
        hostname: ${apiml.service.hostname}
        ipAddress: ${apiml.service.ipAddress}
        preferIpAddress: ${apiml.service.preferIpAddress}
        statusPageUrl: http://${apiml.service.hostname}:${apiml.service.port}/application/info
        healthCheckUrl: http://${apiml.service.hostname}:${apiml.service.port}/application/health
    client:
        registerWithEureka: true
        fetchRegistry: true
        region: default
        serviceUrl:
            defaultZone: ${apiml.discovery.allPeersUrls}

management:
    endpoints:
        web:
            base-path: /application
            exposure:
                include: health,info
    health:
        defaults:
            enabled: false
    endpoint:
        health:
            status:
                order: "DOWN,PARTIAL,UP"
                http-mapping:
                  DOWN: 503
                  PARTIAL: 200
            show-details: always
---
spring:
    profiles: https

server:
    ssl:
        enabled: true
        clientAuth: want
        protocol: TLSv1.2
        enabled-protocols: TLSv1.2
        ciphers: TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
        keyStoreType: PKCS12
        trustStoreType: PKCS12
        trustStoreRequired: true
        keyAlias: localhost
        keyPassword: password
        keyStore: ../keystore/localhost/localhost.keystore.p12
        keyStorePassword: password
        trustStore: ../keystore/localhost/localhost.truststore.p12
        trustStorePassword: password
