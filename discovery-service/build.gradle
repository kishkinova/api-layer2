buildscript {
    repositories mavenRepositories
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:${gradleGitPropertiesVersion}")
    }
}

normalization {
    runtimeClasspath {
        ignore("**/*git.properties*")
        ignore("**/*build-info.properties*")
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.gorylenko.gradle-git-properties'
apply from: "$projectDir/gradle/lite.gradle"

springBoot {
    // This statement tells the Gradle Spring Boot plugin to generate a file
    // build/resources/main/META-INF/build-info.properties that is picked up by Spring Boot to display
    // via /info endpoint
    buildInfo {
        properties {
            // Generate extra build info:
            additionalProperties = [
                by: System.properties['user.name'],
                operatingSystem: "${System.properties['os.name']} (${System.properties['os.version']})",
                number: System.getenv('BUILD_NUMBER') ? System.getenv('BUILD_NUMBER') : "n/a",
                machine: InetAddress.localHost.hostName
            ]
        }
    }
}

gitProperties {
    gitPropertiesDir = new File("${project.rootDir}/${name}/build/resources/main/META-INF")
}

configurations.all {
    resolutionStrategy {
        force (libraries.jetty_websocket_client)
    }
}

dependencies {
    implementation(project(':security-service-client-spring'))

    implementation libraries.spring_boot_starter_web
    implementation libraries.spring_boot_starter_websocket
    implementation libraries.spring_boot_starter_security
    implementation libraries.spring_boot_starter_actuator
    implementation libraries.spring_cloud_starter_eureka_server
    implementation libraries.jackson_dataformat_yaml
    implementation libraries.jetty_util
    implementation libraries.jetty_websocket_client
    implementation libraries.jetty_websocket_common

    compileOnly libraries.lombok
    annotationProcessor libraries.lombok

    // https://mvnrepository.com/artifact/com.netflix.servo/servo-core
    implementation group: 'com.netflix.servo', name: 'servo-core', version: '0.12.28'

    testCompile libraries.lombok
    testAnnotationProcessor libraries.lombok

    testCompile libraries.spring_boot_starter_test
    testCompile libraries.awaitility
}


bootJar {
    archiveName "discovery-service.jar"
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher'
    }
}

bootRun {
    if (project.hasProperty('args')) {
        args project.args.split(',')
    }
    systemProperties = System.properties
}
